// Generated by Haxe 4.0.5
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
DateTools.getMonthDays = function(d) {
	var month = d.getMonth();
	var year = d.getFullYear();
	if(month != 1) {
		return DateTools.DAYS_OF_MONTH[month];
	}
	var isB = year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
	if(isB) {
		return 29;
	} else {
		return 28;
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b1 = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b1) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b1;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.list = function(it) {
	var l = new haxe_ds_List();
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		l.add(i1);
	}
	return l;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s1 = _g_s;
		var index = _g_offset++;
		var c = s1.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s1.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	buf_b += s == null ? "null" : "" + s;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getClassName = function(c) {
	return c.__name__;
};
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var _$Xml_XmlType_$Impl_$ = {};
$hxClasses["_Xml.XmlType_Impl_"] = _$Xml_XmlType_$Impl_$;
_$Xml_XmlType_$Impl_$.__name__ = "_Xml.XmlType_Impl_";
_$Xml_XmlType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return HxOverrides.iter(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(this.nodeType));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : "haxe.StackItem", __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = "haxe.CallStack";
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,remove: null
	,keys: null
	,iterator: null
	,clear: null
	,__class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
$hxClasses["haxe._Int32.Int32_Impl_"] = haxe__$Int32_Int32_$Impl_$;
haxe__$Int32_Int32_$Impl_$.__name__ = "haxe._Int32.Int32_Impl_";
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Utf8 = function(size) {
	this.__b = "";
};
$hxClasses["haxe.Utf8"] = haxe_Utf8;
haxe_Utf8.__name__ = "haxe.Utf8";
haxe_Utf8.prototype = {
	__b: null
	,__class__: haxe_Utf8
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : "haxe.io.Encoding", __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(typeof(e1) == "string") {
				var e2 = e1;
				return false;
			} else {
				throw e;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		this.iteratorLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return HxOverrides.iter(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw new js__$Boot_HaxeError("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,iteratorLoop: function(node,acc) {
		if(node != null) {
			this.iteratorLoop(node.left,acc);
			acc.push(node.value);
			this.iteratorLoop(node.right,acc);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw new js__$Boot_HaxeError("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,clear: function() {
		this.root = null;
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = "haxe.ds.GenericCell";
haxe_ds_GenericCell.prototype = {
	elt: null
	,next: null
	,__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = "haxe.ds.GenericStack";
haxe_ds_GenericStack.prototype = {
	head: null
	,__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) (this.h.hasOwnProperty(key) ? a.push(key | 0) : null);
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,copy: function() {
		var copied = new haxe_ds_IntMap();
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			copied.h[key1] = this.h[key1];
		}
		return copied;
	}
	,clear: function() {
		this.h = { };
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,clear: function() {
		this.h = null;
		this.q = null;
		this.length = 0;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,filter: function(f) {
		var l2 = new haxe_ds_List();
		var l = this.h;
		while(l != null) {
			var v = l.item;
			l = l.next;
			if(f(v)) {
				l2.add(v);
			}
		}
		return l2;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["haxe.ds._List.ListIterator"] = haxe_ds__$List_ListIterator;
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,clear: function() {
		this.h = { __keys__ : { }};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : "haxe.ds.Option", __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = "haxe.ds._StringMap.StringMapIterator";
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,copy: function() {
		var copied = new haxe_ds_StringMap();
		var key = this.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var value = __map_reserved[key1] != null ? this.getReserved(key1) : this.h[key1];
			if(__map_reserved[key1] != null) {
				copied.setReserved(key1,value);
			} else {
				copied.h[key1] = value;
			}
		}
		return copied;
	}
	,clear: function() {
		this.h = { };
		this.rh = null;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addString: function(v,encoding) {
		this.add(haxe_io_Bytes.ofString(v,encoding));
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			haxe_CallStack.lastException = eof;
			var eof1 = ((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if(((eof1) instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : "haxe.io.Error", __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_Path = function() { };
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g2_offset = 0;
	var _g2_s = tmp;
	while(_g2_offset < _g2_s.length) {
		var s = _g2_s;
		var index = _g2_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g2_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = "haxe.io.StringInput";
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var haxe_iterators_MapKeyValueIterator = function(map) {
	this.map = map;
	this.keys = map.keys();
};
$hxClasses["haxe.iterators.MapKeyValueIterator"] = haxe_iterators_MapKeyValueIterator;
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
haxe_iterators_MapKeyValueIterator.prototype = {
	map: null
	,keys: null
	,hasNext: function() {
		return this.keys.hasNext();
	}
	,next: function() {
		var key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
	,__class__: haxe_iterators_MapKeyValueIterator
};
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
	this.__events = null;
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = "haxe.ui.backend.AppBase";
haxe_ui_backend_AppBase.prototype = {
	__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		this.__events.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this.__events != null) {
			this.__events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,null);
		}
	}
	,build: function() {
	}
	,init: function(onReady,onEnd) {
		onReady();
	}
	,getToolkitInit: function() {
		return { };
	}
	,start: function() {
	}
	,exit: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,__class__: haxe_ui_backend_AppBase
};
var haxe_ui_backend_AppImpl = function() {
	haxe_ui_backend_AppBase.call(this);
};
$hxClasses["haxe.ui.backend.AppImpl"] = haxe_ui_backend_AppImpl;
haxe_ui_backend_AppImpl.__name__ = "haxe.ui.backend.AppImpl";
haxe_ui_backend_AppImpl.__super__ = haxe_ui_backend_AppBase;
haxe_ui_backend_AppImpl.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	init: function(onReady,onEnd) {
		var title = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.title");
		if(title != null) {
			haxe_ui_core_Screen.get_instance().set_title(title);
		}
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.document.body.onload = function(e) {
				onReady();
			};
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container","body"))};
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		} else if(id != null) {
			el = window.document.getElementById("haxeui-container");
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,__class__: haxe_ui_backend_AppImpl
});
var haxe_ui_HaxeUIApp = function(options) {
	haxe_ui_backend_AppImpl.call(this);
	haxe_ui_HaxeUIApp.instance = this;
	this._options = options;
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = "haxe.ui.HaxeUIApp";
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppImpl;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppImpl.prototype,{
	_options: null
	,ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,init: function(onReady,onEnd) {
		if(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.get_theme() == "default") {
			haxe_ui_Toolkit.set_theme(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme"));
		}
		if(this._options == null) {
			haxe_ui_Toolkit.init(this.getToolkitInit());
		} else {
			haxe_ui_Toolkit.init(this._options);
		}
		var preloadList = null;
		var preloader = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			preloader = new haxe_ui_Preloader();
			preloader.progress(0,preloadList.length);
			this.addComponent(preloader);
			preloader.validateComponent();
		}
		this.handlePreload(preloadList,onReady,onEnd,preloader);
	}
	,handlePreload: function(list,onReady,onEnd,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			haxe_ui_backend_AppImpl.prototype.init.call(this,onReady,onEnd);
			return;
		}
		var item = list.shift();
		switch(item.type) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 81, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onReady,onEnd,preloader);
		}
	}
	,addComponent: function(component) {
		haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component) {
		haxe_ui_core_Screen.get_instance().removeComponent(component);
	}
	,setComponentIndex: function(child,index) {
		haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppImpl.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
});
var haxe_ui_backend_ComponentSurface = function() {
};
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
haxe_ui_backend_ComponentSurface.prototype = {
	__class__: haxe_ui_backend_ComponentSurface
};
var haxe_ui_core_ComponentCommon = function() {
	haxe_ui_backend_ComponentSurface.call(this);
};
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
haxe_ui_core_ComponentCommon.prototype = $extend(haxe_ui_backend_ComponentSurface.prototype,{
	getTextDisplay: function() {
		return null;
	}
	,hasTextDisplay: function() {
		return false;
	}
	,getTextInput: function() {
		return null;
	}
	,hasTextInput: function() {
		return false;
	}
	,getImageDisplay: function() {
		return null;
	}
	,hasImageDisplay: function() {
		return false;
	}
	,__class__: haxe_ui_core_ComponentCommon
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
haxe_ui_core_IClonable.prototype = {
	cloneComponent: null
	,self: null
	,__class__: haxe_ui_core_IClonable
};
var haxe_ui_core_ComponentContainer = function() {
	this._id = null;
	this._layoutLocked = false;
	this._layout = null;
	this._ready = false;
	this.parentComponent = null;
	haxe_ui_core_ComponentCommon.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentContainer.prototype = $extend(haxe_ui_core_ComponentCommon.prototype,{
	behaviours: null
	,parentComponent: null
	,_ready: null
	,isReady: null
	,get_isReady: function() {
		return this._ready;
	}
	,_children: null
	,childComponents: null
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,registerBehaviours: function() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("text",haxe_ui_behaviours_DefaultBehaviour);
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_disabled: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		this.behaviours.set("disabled",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"disabled");
		return value;
	}
	,get_text: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		this.behaviours.set("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentContainer();
	}
	,__class__: haxe_ui_core_ComponentContainer
	,__properties__: {set_text:"set_text",get_text:"get_text",set_disabled:"set_disabled",get_disabled:"get_disabled",set_value:"set_value",get_value:"get_value",set_id:"set_id",get_id:"get_id",get_childComponents:"get_childComponents",get_isReady:"get_isReady"}
});
var haxe_ui_core_ComponentEvents = function() {
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	haxe_ui_core_ComponentContainer.call(this);
};
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentEvents.prototype = $extend(haxe_ui_core_ComponentContainer.prototype,{
	_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).hasClass(":mobile") && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,disableInteractivity: function(disable,recursive) {
		if(recursive == null) {
			recursive = true;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util__$Listener_Listener_$Impl_$.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util__$Listener_Listener_$Impl_$.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(this._disabledEvents != null) {
				var eventType2 = this._disabledEvents.keys();
				while(eventType2.hasNext()) {
					var eventType3 = eventType2.next();
					var listeners1 = this._disabledEvents.listeners(eventType3);
					if(listeners1 != null) {
						var listener2 = listeners1.copy().iterator();
						while(listener2.hasNext()) {
							var listener3 = listener2.next();
							this.registerEvent(eventType3,haxe_ui_util__$Listener_Listener_$Impl_$.toFunc(listener3));
						}
					}
				}
				this._disabledEvents = null;
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType2 = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType2);
				var listener = listeners.iterator();
				while(listener.hasNext()) {
					var listener1 = listener.next();
					this.__events.remove(eventType2,haxe_ui_util__$Listener_Listener_$Impl_$.toFunc(listener1));
				}
			}
		}
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentContainer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentContainer.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentEvents();
	}
	,__class__: haxe_ui_core_ComponentEvents
});
var haxe_ui_core_ComponentValidation = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_core_ComponentEvents.call(this);
};
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentValidation.prototype = $extend(haxe_ui_core_ComponentEvents.prototype,{
	_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid();
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var _this = this._delayedInvalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				var _this1 = this._delayedInvalidationFlags;
				var key = "all";
				if(__map_reserved[key] != null) {
					_this1.setReserved(key,true);
				} else {
					_this1.h[key] = true;
				}
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			var _this2 = this._delayedInvalidationFlags;
			if(__map_reserved[flag] != null) {
				_this2.setReserved(flag,true);
			} else {
				_this2.h[flag] = true;
			}
		} else {
			var tmp;
			if(flag != "all") {
				var _this3 = this._invalidationFlags;
				tmp = !(__map_reserved[flag] != null ? _this3.existsReserved(flag) : _this3.h.hasOwnProperty(flag));
			} else {
				tmp = false;
			}
			if(tmp) {
				var _this4 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this4.setReserved(flag,true);
				} else {
					_this4.h[flag] = true;
				}
			}
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw new js__$Boot_HaxeError("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
	}
	,invalidateComponentData: function() {
		this.invalidateComponent("data");
	}
	,invalidateComponentLayout: function() {
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout");
	}
	,invalidateComponentPosition: function() {
		this.invalidateComponent("position");
	}
	,invalidateComponentDisplay: function() {
		this.invalidateComponent("display");
	}
	,invalidateComponentStyle: function(force) {
		if(force == null) {
			force = false;
		}
		this.invalidateComponent("style");
		if(force == true) {
			this._style = null;
		}
	}
	,validateComponent: function() {
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this.validateInitialSize(isInitialized);
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		var flag2 = this._delayedInvalidationFlags.keys();
		while(flag2.hasNext()) {
			var flag3 = flag2.next();
			if(flag3 == "all") {
				this._isAllInvalid = true;
			} else {
				var _this = this._invalidationFlags;
				if(__map_reserved[flag3] != null) {
					_this.setReserved(flag3,true);
				} else {
					_this.h[flag3] = true;
				}
			}
			this._delayedInvalidationFlags.remove(flag3);
		}
		this._isValidating = false;
	}
	,validateNow: function() {
		this.syncComponentValidation();
	}
	,syncComponentValidation: function() {
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent();
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation();
			}
			if(++count >= 10) {
				throw new js__$Boot_HaxeError("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
		}
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			displayInvalid = this.validateComponentLayout() || displayInvalid;
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component));
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentEvents.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentEvents.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentValidation();
	}
	,__class__: haxe_ui_core_ComponentValidation
	,__properties__: $extend(haxe_ui_core_ComponentEvents.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth"})
});
var haxe_ui_core_ComponentLayout = function() {
	haxe_ui_core_ComponentValidation.call(this);
};
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentLayout.prototype = $extend(haxe_ui_core_ComponentValidation.prototype,{
	get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentValidation.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentValidation.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentLayout();
	}
	,__class__: haxe_ui_core_ComponentLayout
	,__properties__: $extend(haxe_ui_core_ComponentValidation.prototype.__properties__,{set_style:"set_style",get_style:"get_style"})
});
var haxe_ui_core_ComponentBounds = function() {
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	haxe_ui_core_ComponentLayout.call(this);
};
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentBounds.prototype = $extend(haxe_ui_core_ComponentLayout.prototype,{
	autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(this.get_style() != null) {
			if(w != null) {
				if(this.get_style().minWidth != null && w < this.get_style().minWidth) {
					w = this.get_style().minWidth;
				} else if(this.get_style().maxWidth != null && w > this.get_style().maxWidth) {
					w = this.get_style().maxWidth;
				}
			}
			if(h != null) {
				if(this.get_style().minHeight != null && h < this.get_style().minHeight) {
					h = this.get_style().minHeight;
				} else if(this.get_style().maxHeight != null && h > this.get_style().maxHeight) {
					h = this.get_style().maxHeight;
				}
			}
		}
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentWidth");
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentHeight");
		return value;
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"width");
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"height");
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,hitTest: function(left,top) {
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(cx <= 0 || cy <= 0) {
			return false;
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position");
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentLayout.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentLayout.prototype.cloneComponent.call(this);
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentBounds();
	}
	,__class__: haxe_ui_core_ComponentBounds
	,__properties__: $extend(haxe_ui_core_ComponentLayout.prototype.__properties__,{set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_ComponentBase = function() {
	haxe_ui_core_ComponentBounds.call(this);
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
haxe_ui_backend_ComponentBase.prototype = $extend(haxe_ui_core_ComponentBounds.prototype,{
	handleCreate: function(native) {
	}
	,handlePosition: function(left,top,style) {
	}
	,handleSize: function(width,height,style) {
	}
	,handleReady: function() {
	}
	,handleClipRect: function(value) {
	}
	,handleVisibility: function(show) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,handleAddComponent: function(child) {
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,applyStyle: function(style) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			var _this = this._classProperties;
			v = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		}
		if(v == null) {
			var c = js_Boot.getClass(this);
			var c1 = c.__name__.toLowerCase() + "." + name;
			var _this1 = haxe_ui_Toolkit.properties;
			v = __map_reserved[c1] != null ? _this1.getReserved(c1) : _this1.h[c1];
		}
		return v;
	}
	,_classProperties: null
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		var _this = this._classProperties;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,className: null
	,get_className: function() {
		if(((this) instanceof haxe_ui_containers_dialogs_Dialog)) {
			return haxe_ui_containers_dialogs_Dialog.__name__;
		}
		var c = js_Boot.getClass(this);
		return c.__name__;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentBounds.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentBounds.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(haxe_ui_core_ComponentBounds.prototype.__properties__,{get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isNativeScroller:"get_isNativeScroller"})
});
var haxe_ui_backend_ComponentImpl = function() {
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
		haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
		haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
	if(window.document.styleSheets.length == 0) {
		var head = window.document.head;
		var style = window.document.createElement("style");
		style.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(style);
	}
	var sheet = js_Boot.__cast(window.document.styleSheets[0] , CSSStyleSheet);
	if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
		haxe_ui_backend_ComponentImpl._stylesAdded = true;
		sheet.insertRule("#haxeui-container .haxeui-component {\r\n                position: absolute;\r\n                box-sizing: border-box;\r\n                -webkit-touch-callout: none;\r\n                -webkit-user-select: none;\r\n                -khtml-user-select: none;\r\n                -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n            }",sheet.cssRules.length);
	}
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g1 = 0;
		var _g11 = record.addedNodes.length;
		while(_g1 < _g11) {
			var i = _g1++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	element: null
	,_eventMap: null
	,_nativeElement: null
	,recursiveReady: function() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout");
		}
		component.ready();
		var _g = 0;
		var _g1 = component.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		var newElement = null;
		if(native == true) {
			if(((this) instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = new haxe_ui_backend_html5_native_NativeElement(this);
				if(this.element == null) {
					this.element = this._nativeElement.create();
				}
				this.element.classList.add("haxeui-component");
				this.element.style.overflow = "auto";
				haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			} else {
				var component = js_Boot.__cast(this , haxe_ui_core_Component);
				var nativeConfig = component.getNativeConfigProperties();
				if(nativeConfig != null && (__map_reserved["class"] != null ? nativeConfig.existsReserved("class") : nativeConfig.h.hasOwnProperty("class"))) {
					var name = __map_reserved["class"] != null ? nativeConfig.getReserved("class") : nativeConfig.h["class"];
					this._nativeElement = Type.createInstance($hxClasses[name],[this]);
					this._nativeElement.config = nativeConfig;
					newElement = this._nativeElement.create();
					newElement.classList.add("haxeui-component");
				}
			}
			if(newElement != null) {
				if(this.element != null) {
					var p = this.element.parentElement;
					if(p != null) {
						haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
						p.replaceChild(newElement,this.element);
					}
				}
				this.element = newElement;
				this.remapEvents();
			}
		}
		if(newElement == null) {
			if(((this) instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = null;
				if(this.element == null) {
					this.element = window.document.createElement("div");
				}
				this.element.scrollTop = 0;
				this.element.scrollLeft = 0;
				this.element.style.overflow = "hidden";
				this.element.classList.add("haxeui-component");
				haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			}
			newElement = window.document.createElement("div");
			newElement.classList.add("haxeui-component");
			if(((this) instanceof haxe_ui_components_Image)) {
				newElement.style.boxSizing = "initial";
			}
			if(this.element != null) {
				var p1 = this.element.parentElement;
				if(p1 != null) {
					haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
					p1.replaceChild(newElement,this.element);
				}
			}
			this.element = newElement;
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			this._nativeElement = null;
			this.remapEvents();
		}
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy = new haxe_ds_StringMap();
		var k = this._eventMap.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var _this = this._eventMap;
			var fn = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
			if(__map_reserved[k1] != null) {
				copy.setReserved(k1,fn);
			} else {
				copy.h[k1] = fn;
			}
			this.unmapEvent(k1,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var k2 = copy.keys();
		while(k2.hasNext()) {
			var k3 = k2.next();
			this.mapEvent(k3,__map_reserved[k3] != null ? copy.getReserved(k3) : copy.h[k3]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
		if(((this) instanceof haxe_ui_containers_TableView) && left != null && top != null && (js_Boot.__cast(this , haxe_ui_containers_TableView)).get_native() == true) {
			var c = js_Boot.__cast(this , haxe_ui_core_Component);
			var h = c.findComponent(null,haxe_ui_containers_Header);
			var tmp = "" + h.get_screenLeft() + "px";
			h.element.style.left = "" + tmp;
			var tmp1 = "" + h.get_screenTop() + "px";
			h.element.style.top = "" + tmp1;
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		if(((this) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.element.style.getPropertyValue("transform-origin") != null && this.element.style.getPropertyValue("transform-origin").length > 0) {
				var tw = width;
				var th = height;
				width = th;
				height = tw;
			}
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		}
		var _g = 0;
		var _g1 = (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			}
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
		if(((this) instanceof haxe_ui_components_Label)) {
			this.element.style.setProperty("pointer-events","none");
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		if(value != null && parent != null && (parent._nativeElement == null || ((c) instanceof haxe_ui_containers_Header))) {
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			if(((this) instanceof haxe_ui_containers_Header) && parent.get_native() == true) {
				if(this.element.style.position != "fixed") {
					this.element.style.position = "fixed";
				}
				var tmp1 = "" + (c.get_screenLeft() - value.left) + "px";
				this.element.style.left = "" + tmp1;
				var tmp2 = "" + (c.get_screenTop() - value.top) + "px";
				this.element.style.top = "" + tmp2;
			} else {
				var tmp3 = "" + (c.get_left() - value.left) + "px";
				this.element.style.left = "" + tmp3;
				var tmp4 = "" + (c.get_top() - value.top) + "px";
				this.element.style.top = "" + tmp4;
			}
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents().length - 1) {
			this.element.appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents()[index + 1].element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				var dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + dropShadow.distance + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp2 = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp3 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp2 + tmp3;
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _g1 = (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,__props: null
	,get: function(name) {
		if(this.__props == null) {
			return null;
		}
		var _this = this.__props;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,set: function(name,value) {
		if(this.__props == null) {
			this.__props = new haxe_ds_StringMap();
		}
		var _this = this.__props;
		var value1 = value;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value1);
		} else {
			_this.h[name] = value1;
		}
	}
	,has: function(name) {
		if(this.__props == null) {
			return false;
		}
		var _this = this.__props;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "change":
			var _this = this._eventMap;
			if((__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) == false) {
				var _this1 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this1.setReserved(type,listener);
				} else {
					_this1.h[type] = listener;
				}
				if(((this) instanceof haxe_ui_components_TextField) || ((this) instanceof haxe_ui_components_TextArea)) {
					var _this2 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					this.element.addEventListener(__map_reserved["keyup"] != null ? _this2.getReserved("keyup") : _this2.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
				} else if(((this) instanceof haxe_ui_core_InteractiveComponent)) {
					var _this3 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					this.element.addEventListener(__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type],$bind(this,this.__onChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var _this4 = this._eventMap;
			if((__map_reserved[type] != null ? _this4.existsReserved(type) : _this4.h.hasOwnProperty(type)) == false) {
				var _this5 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this5.getReserved(type) : _this5.h[type]) != null) {
					var _this6 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					this.element.addEventListener(__map_reserved[type] != null ? _this6.getReserved(type) : _this6.h[type],$bind(this,this.__onMouseEvent));
				}
				var _this7 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this7.setReserved(type,listener);
				} else {
					_this7.h[type] = listener;
				}
				var _this8 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.addEventListener(__map_reserved[type] != null ? _this8.getReserved(type) : _this8.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			var _this9 = this._eventMap;
			if((__map_reserved[type] != null ? _this9.existsReserved(type) : _this9.h.hasOwnProperty(type)) == false) {
				var _this10 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this10.setReserved(type,listener);
				} else {
					_this10.h[type] = listener;
				}
				var _this11 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.addEventListener(__map_reserved[type] != null ? _this11.getReserved(type) : _this11.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			var _this12 = this._eventMap;
			if(__map_reserved[type] != null) {
				_this12.setReserved(type,listener);
			} else {
				_this12.h[type] = listener;
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			var _this13 = this._eventMap;
			if((__map_reserved[type] != null ? _this13.existsReserved(type) : _this13.h.hasOwnProperty(type)) == false) {
				var _this14 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this14.setReserved(type,listener);
				} else {
					_this14.h[type] = listener;
				}
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			var _this15 = this._eventMap;
			if(__map_reserved[type] != null) {
				_this15.setReserved(type,listener);
			} else {
				_this15.h[type] = listener;
			}
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			this._eventMap.remove(type);
			if(((this) instanceof haxe_ui_components_TextField)) {
				var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.removeEventListener(__map_reserved["keyup"] != null ? _this.getReserved("keyup") : _this.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
			} else {
				var _this1 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.removeEventListener(__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type],$bind(this,this.__onChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			this._eventMap.remove(type);
			var _this2 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			this.element.removeEventListener(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type],$bind(this,this.__onMouseEvent));
			var _this3 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
			if((__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type]) != null) {
				var _this4 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				this.element.removeEventListener(__map_reserved[type] != null ? _this4.getReserved(type) : _this4.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			this._eventMap.remove(type);
			var _this5 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			this.element.removeEventListener(__map_reserved[type] != null ? _this5.getReserved(type) : _this5.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			this._eventMap.remove(type);
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			this._eventMap.remove(type);
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	,__onContextMenu: function(event) {
		event.preventDefault();
		var type = "rightclick";
		if(type != null) {
			var _this = this._eventMap;
			var fn = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_MouseEvent(type);
				uiEvent.screenX = event.pageX;
				uiEvent.screenY = event.pageY;
				fn(uiEvent);
			}
		}
		return false;
	}
	,__onChangeEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._eventMap;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var _this = this._eventMap;
		var fn = __map_reserved["change"] != null ? _this.getReserved("change") : _this.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_events_UIEvent("change");
			fn(uiEvent);
		}
	}
	,__onMouseEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			try {
				var tmp = type == "mousedown";
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			var _this1 = this._eventMap;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( e2 ) {
					haxe_CallStack.lastException = e2;
					var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
	}
	,__onMouseWheelEvent: function(event) {
		var _this = this._eventMap;
		var fn = __map_reserved["mousewheel"] != null ? _this.getReserved("mousewheel") : _this.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onKeyboardEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._eventMap;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					var me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	,__onScrollEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		var _this1 = this._eventMap;
		var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_events_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,set_depth: null
	,validateComponent: null
	,updateComponentDisplay: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_IComponentBase = function() { };
$hxClasses["haxe.ui.core.IComponentBase"] = haxe_ui_core_IComponentBase;
haxe_ui_core_IComponentBase.__name__ = "haxe.ui.core.IComponentBase";
haxe_ui_core_IComponentBase.__isInterface__ = true;
haxe_ui_core_IComponentBase.prototype = {
	mapEvent: null
	,handleAddComponent: null
	,__class__: haxe_ui_core_IComponentBase
};
var haxe_ui_core_Component = function() {
	this._initialSizeApplied = false;
	this.scriptAccess = true;
	this._includeInLayout = true;
	this.classes = [];
	this.customStyle = new haxe_ui_styles_Style();
	this._hidden = false;
	this.bindingRoot = false;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	this.registerComposite();
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating,haxe_ui_core_IComponentBase];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent.get_childComponents();
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	_defaultLayoutClass: null
	,create: function() {
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && (__map_reserved["class"] != null ? sizeProps.existsReserved("class") : sizeProps.h.hasOwnProperty("class"))) {
				var name = __map_reserved["class"] != null ? sizeProps.getReserved("class") : sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && (__map_reserved["class"] != null ? layoutProps.existsReserved("class") : layoutProps.h.hasOwnProperty("class"))) {
					var name1 = __map_reserved["class"] != null ? layoutProps.getReserved("class") : layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name1],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.customStyle.native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,userData: null
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_numComponents();
		} else if(this._children == null) {
			return 0;
		} else {
			return this._children.length;
		}
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		return child;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.removeAllComponents(true);
				child.unregisterEvents();
				child.destroyComponent();
			}
		}
		this.handleRemoveComponent(child,dispose);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		return child;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		this.handleRemoveComponentAt(index,dispose);
		var child = this._children[index];
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(invalidate == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout");
				}
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.unregisterEvents();
				child.destroyComponent();
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		this.onDestroy();
	}
	,onDestroy: function() {
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(!(searchType == "id" && this.get_id() == criteria)) {
				if(searchType == "css") {
					return this.hasClass(criteria) == true;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type) == true;
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g2 = 0;
			var _g3 = this.get_childComponents();
			while(_g2 < _g3.length) {
				var child1 = _g3[_g2];
				++_g2;
				var temp = child1.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.hasClass(styleName) == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY)) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
				}
				c = c.concat(child.findComponentsUnderPoint(screenX,screenY));
			}
		}
		return c;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index1 = -1;
		if(this._children != null && child != null) {
			index1 = this._children.indexOf(child);
		}
		return index1;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this.handleVisibility(false);
			this._hidden = true;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this.handleVisibility(true);
			this._hidden = false;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		return value;
	}
	,customStyle: null
	,classes: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style");
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,get_styleNames: function() {
		return this.classes.join(" ");
	}
	,set_styleNames: function(value) {
		if(value == null) {
			return value;
		}
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.addClass(x);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.customStyle.mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style");
		return value;
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c1 = js_Boot.getClass(this._layout);
			tmp = tmp1 == c1.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			this.initScript();
			if(this.get_childComponents() != null) {
				var _g = 0;
				var _g1 = this.get_childComponents();
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data");
				_gthis.invalidateComponent("style");
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,scriptAccess: null
	,_interp: null
	,_script: null
	,script: null
	,set_script: function(value) {
		this._script = value;
		return value;
	}
	,executeScriptCall: function(expr,variables) {
		var parser = new hscript_Parser();
		var line = parser.parseString(expr);
		var interp = this.findScriptInterp();
		var _this = interp.variables;
		if(__map_reserved["this"] != null) {
			_this.setReserved("this",this);
		} else {
			_this.h["this"] = this;
		}
		if(variables != null) {
			var k = variables.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				var _this1 = interp.variables;
				var value = __map_reserved[k1] != null ? variables.getReserved(k1) : variables.h[k1];
				if(__map_reserved[k1] != null) {
					_this1.setReserved(k1,value);
				} else {
					_this1.h[k1] = value;
				}
			}
		}
		interp.expr(line);
		interp.variables.remove("this");
		if(variables != null) {
			var k2 = variables.keys();
			while(k2.hasNext()) {
				var k3 = k2.next();
				interp.variables.remove(k3);
			}
		}
	}
	,findScriptInterp: function(refreshNamedComponents) {
		if(refreshNamedComponents == null) {
			refreshNamedComponents = true;
		}
		var interp = null;
		var c = this;
		while(c != null && interp == null) {
			if(c._interp != null) {
				interp = c._interp;
				break;
			}
			c = c.parentComponent;
		}
		if(interp == null) {
			c = this.get_rootComponent();
			c._interp = new haxe_ui_scripting_ScriptInterp();
			interp = c._interp;
		}
		if(refreshNamedComponents == true && c != null) {
			var comps = c.get_namedComponents();
			var _g = 0;
			while(_g < comps.length) {
				var comp = comps[_g];
				++_g;
				var safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
				var _this = interp.variables;
				if(__map_reserved[safeId] != null) {
					_this.setReserved(safeId,comp);
				} else {
					_this.h[safeId] = comp;
				}
			}
		}
		return interp;
	}
	,initScript: function() {
		if(this._script != null) {
			try {
				var parser = new hscript_Parser();
				var program = parser.parseString(this._script);
				this._interp = new haxe_ui_scripting_ScriptInterp();
				var comps = this.get_namedComponents();
				var _g = 0;
				while(_g < comps.length) {
					var comp = comps[_g];
					++_g;
					if(comp.scriptAccess == true) {
						var safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
						var _this = this._interp.variables;
						if(__map_reserved[safeId] != null) {
							_this.setReserved(safeId,comp);
						} else {
							_this.h[safeId] = comp;
						}
					}
				}
				this._interp.execute(program);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				haxe_Log.trace("Problem initializing script: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1162, className : "haxe.ui.core.Component", methodName : "initScript"});
				haxe_ui_debug_CallStackHelper.traceExceptionStack();
			}
		}
	}
	,_scriptEvents: null
	,scriptEvents: null
	,get_scriptEvents: function() {
		return this._scriptEvents;
	}
	,addScriptEvent: function(event,script) {
		event = event.toLowerCase();
		var eventName = StringTools.startsWith(event,"on") ? event.substring(2,event.length) : event;
		if(this._scriptEvents == null) {
			this._scriptEvents = new haxe_ds_StringMap();
		}
		var _this = this._scriptEvents;
		if(__map_reserved[event] != null) {
			_this.setReserved(event,script);
		} else {
			_this.h[event] = script;
		}
		var f = $bind(this,this._onScriptEvent);
		var eventId = event;
		this.registerEvent(eventName,function(event1) {
			f(eventId,event1);
		});
	}
	,_onScriptEvent: function(eventId,event) {
		if(this._scriptEvents != null) {
			var _this = this._scriptEvents;
			var script = __map_reserved[eventId] != null ? _this.getReserved(eventId) : _this.h[eventId];
			if(script != null) {
				event.cancel();
				var variables = new haxe_ds_StringMap();
				var value = event;
				if(__map_reserved["event"] != null) {
					variables.setReserved("event",value);
				} else {
					variables.h["event"] = value;
				}
				this.executeScriptCall(script,variables);
			}
		}
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			sizeChanged = this._compositeBuilder.validateComponentLayout() || sizeChanged;
		}
		return sizeChanged;
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		s.apply(this.customStyle);
		if(this._style == null || this._style.equalTo(s) == false) {
			this._style = s;
			this.applyStyle(s);
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null || this.get_componentWidth() <= 0 || this.get_componentHeight() <= 0) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(style.animationName != null) {
			var this1 = haxe_ui_Toolkit.styleSheet.get_animations();
			var key = style.animationName;
			var _this = this1;
			var animationKeyFrames = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
		} else if(this.get_componentAnimation() != null) {
			this.set_componentAnimation(null);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		c.set_hidden(this.get_hidden());
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		if(this.get_color() != null) {
			c.set_color(this.get_color());
		}
		if(this.get_backgroundColor() != null) {
			c.set_backgroundColor(this.get_backgroundColor());
		}
		if(this.get_borderColor() != null) {
			c.set_borderColor(this.get_borderColor());
		}
		if(this.get_borderSize() != null) {
			c.set_borderSize(this.get_borderSize());
		}
		if(this.get_borderRadius() != null) {
			c.set_borderRadius(this.get_borderRadius());
		}
		if(this.get_paddingLeft() != null) {
			c.set_paddingLeft(this.get_paddingLeft());
		}
		if(this.get_paddingRight() != null) {
			c.set_paddingRight(this.get_paddingRight());
		}
		if(this.get_paddingTop() != null) {
			c.set_paddingTop(this.get_paddingTop());
		}
		if(this.get_paddingBottom() != null) {
			c.set_paddingBottom(this.get_paddingBottom());
		}
		if(this.get_marginLeft() != null) {
			c.set_marginLeft(this.get_marginLeft());
		}
		if(this.get_marginRight() != null) {
			c.set_marginRight(this.get_marginRight());
		}
		if(this.get_marginTop() != null) {
			c.set_marginTop(this.get_marginTop());
		}
		if(this.get_marginBottom() != null) {
			c.set_marginBottom(this.get_marginBottom());
		}
		if(this.get_clip() != null) {
			c.set_clip(this.get_clip());
		}
		if(this.get_opacity() != null) {
			c.set_opacity(this.get_opacity());
		}
		if(this.get_horizontalAlign() != null) {
			c.set_horizontalAlign(this.get_horizontalAlign());
		}
		if(this.get_verticalAlign() != null) {
			c.set_verticalAlign(this.get_verticalAlign());
		}
		var tmp = this._ready == false;
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this._scriptEvents != null) {
			var k = this._scriptEvents.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				var _this = this._scriptEvents;
				c.addScriptEvent(k1,__map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1]);
			}
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,get_color: function() {
		if(this.customStyle.color != null) {
			return this.customStyle.color;
		}
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.customStyle.color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.color = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_backgroundColor: function() {
		if(this.customStyle.backgroundColor != null) {
			return this.customStyle.backgroundColor;
		}
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.customStyle.backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.backgroundColor = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_borderColor: function() {
		if(this.customStyle.borderColor != null) {
			return this.customStyle.borderColor;
		}
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.customStyle.borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderColor = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_borderSize: function() {
		if(this.customStyle.borderSize != null) {
			return this.customStyle.borderSize;
		}
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return this.get_style().borderSize;
	}
	,set_borderSize: function(value) {
		if(this.customStyle.borderSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderSize = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_borderRadius: function() {
		if(this.customStyle.borderRadius != null) {
			return this.customStyle.borderRadius;
		}
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return this.get_style().borderRadius;
	}
	,set_borderRadius: function(value) {
		if(this.customStyle.borderRadius == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderRadius = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingLeft: function() {
		if(this.customStyle.paddingLeft != null) {
			return this.customStyle.paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(this.customStyle.paddingLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingLeft = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingRight: function() {
		if(this.customStyle.paddingRight != null) {
			return this.customStyle.paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,set_paddingRight: function(value) {
		if(this.customStyle.paddingRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingRight = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingTop: function() {
		if(this.customStyle.paddingTop != null) {
			return this.customStyle.paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,set_paddingTop: function(value) {
		if(this.customStyle.paddingTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingTop = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingBottom: function() {
		if(this.customStyle.paddingBottom != null) {
			return this.customStyle.paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(this.customStyle.paddingBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingBottom = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_marginLeft: function() {
		if(this.customStyle.marginLeft != null) {
			return this.customStyle.marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,set_marginLeft: function(value) {
		if(this.customStyle.marginLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginLeft = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_marginRight: function() {
		if(this.customStyle.marginRight != null) {
			return this.customStyle.marginRight;
		}
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return this.get_style().marginRight;
	}
	,set_marginRight: function(value) {
		if(this.customStyle.marginRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginRight = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_marginTop: function() {
		if(this.customStyle.marginTop != null) {
			return this.customStyle.marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_marginTop: function(value) {
		if(this.customStyle.marginTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginTop = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_marginBottom: function() {
		if(this.customStyle.marginBottom != null) {
			return this.customStyle.marginBottom;
		}
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return this.get_style().marginBottom;
	}
	,set_marginBottom: function(value) {
		if(this.customStyle.marginBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginBottom = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_clip: function() {
		if(this.customStyle.clip != null) {
			return this.customStyle.clip;
		}
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.customStyle.clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.clip = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_opacity: function() {
		if(this.customStyle.opacity != null) {
			return this.customStyle.opacity;
		}
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.customStyle.opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.opacity = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.customStyle.horizontalAlign != null) {
			return this.customStyle.horizontalAlign;
		}
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.customStyle.horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.horizontalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.customStyle.verticalAlign != null) {
			return this.customStyle.verticalAlign;
		}
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.customStyle.verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.verticalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this.__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this.__onAnimationStart);
			this.__onAnimationStart = null;
		}
		if(value != null) {
			this.__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this.__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this.__onAnimationEnd);
			this.__onAnimationEnd = null;
		}
		if(value != null) {
			this.__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this.__onClick != null) {
			this.unregisterEvent("click",this.__onClick);
			this.__onClick = null;
		}
		if(value != null) {
			this.__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,__onRightClick: null
	,onRightClick: null
	,set_onRightClick: function(value) {
		if(this.__onRightClick != null) {
			this.unregisterEvent("rightclick",this.__onRightClick);
			this.__onRightClick = null;
		}
		if(value != null) {
			this.__onRightClick = value;
			this.registerEvent("rightclick",value);
		}
		return value;
	}
	,__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this.__onChange != null) {
			this.unregisterEvent("change",this.__onChange);
			this.__onChange = null;
		}
		if(value != null) {
			this.__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onRightClick:"set_onRightClick",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationStart:"set_onAnimationStart",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",get_scriptEvents:"get_scriptEvents",set_script:"set_script",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_Preloader = function() {
	haxe_ui_core_Component.call(this);
	this.set_id("preloader");
	this.set_styleString("width:auto;height:auto;");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_core_Component;
haxe_ui_Preloader.prototype = $extend(haxe_ui_core_Component.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		this.addComponent(label);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			this.set_left(haxe_ui_core_Screen.get_instance().get_width() / 2 - this.get_width() / 2);
			this.set_top(haxe_ui_core_Screen.get_instance().get_height() / 2 - this.get_height() / 2);
		}
		return b;
	}
	,_current: null
	,_max: null
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			var text = label.get_text();
			if(StringTools.endsWith(text,"....")) {
				text = "Loading";
			}
			label.set_text(text);
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
haxe_ui_util_Properties.prototype = {
	_props: null
	,exists: function(name) {
		var _this = this._props;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,getProp: function(name,defaultValue) {
		var v = defaultValue;
		var _this = this._props;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this._props;
			v = __map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0x" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		var _this = this._props;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,names: function() {
		return this._props.keys();
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			var this1 = this._props;
			var value = p.getProp(name1);
			var _this = this1;
			if(__map_reserved[name1] != null) {
				_this.setReserved(name1,value);
			} else {
				_this.h[name1] = value;
			}
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var _this = this.sections;
		var array = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(array == null) {
			array = [];
			var _this1 = this.sections;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,array);
			} else {
				_this1.h[name] = array;
			}
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var _this = this.sections;
		var array = __map_reserved[section] != null ? _this.getReserved(section) : _this.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var key = item.values.keys();
			while(key.hasNext()) {
				var key1 = key.next();
				var tmp;
				if(key1 == field) {
					var _this1 = item.values;
					tmp = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]) == value;
				} else {
					tmp = false;
				}
				if(tmp) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		var _this = haxe_ui_util_GenericConfig.cache;
		if(__map_reserved[q] != null ? _this.existsReserved(q) : _this.h.hasOwnProperty(q)) {
			var _this1 = haxe_ui_util_GenericConfig.cache;
			if(__map_reserved[q] != null) {
				return _this1.getReserved(q);
			} else {
				return _this1.h[q];
			}
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				var _this2 = ref.values;
				value = __map_reserved[v] != null ? _this2.getReserved(v) : _this2.h[v];
				break;
			}
			if(ref == null) {
				var _this3 = haxe_ui_util_GenericConfig.cache;
				if(__map_reserved[q] != null) {
					_this3.setReserved(q,defaultValue);
				} else {
					_this3.h[q] = defaultValue;
				}
				return defaultValue;
			}
		}
		if(conditionRef != null) {
			var n = q.indexOf("]");
			var nq = q.substring(0,n + 1) + ".@condition";
			var condition = this.query(nq,null,null);
			if(condition != null) {
				var interp = new haxe_ui_scripting_ScriptInterp();
				var parser = new hscript_Parser();
				var line = parser.parseString(condition);
				var _this4 = interp.variables;
				var value1 = conditionRef;
				if(__map_reserved["this"] != null) {
					_this4.setReserved("this",value1);
				} else {
					_this4.h["this"] = value1;
				}
				var r = interp.expr(line);
				if(r == false) {
					return defaultValue;
				}
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		if(conditionRef != null) {
			var n = q.indexOf("]");
			var nq = q.substring(0,n + 1) + ".@condition";
			var condition = this.query(nq,null,null);
			if(condition != null) {
				var interp = new haxe_ui_scripting_ScriptInterp();
				var parser = new hscript_Parser();
				var line = parser.parseString(condition);
				var _this = interp.variables;
				var value = conditionRef;
				if(__map_reserved["this"] != null) {
					_this.setReserved("this",value);
				} else {
					_this.h["this"] = value;
				}
				var r = interp.expr(line);
				if(r == false) {
					return null;
				}
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var key = s.get_animations().keys();
			while(key.hasNext()) {
				var key1 = key.next();
				var _this = s.get_animations();
				var a = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
				var _this1 = this._animations;
				if(__map_reserved[key1] != null) {
					_this1.setReserved(key1,a);
				} else {
					_this1.h[key1] = a;
				}
			}
		}
		return this._animations;
	}
	,addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets",get_backendProperties:"get_backendProperties",set_theme:"set_theme",get_theme:"get_theme"};
haxe_ui_Toolkit.get_theme = function() {
	return haxe_ui_Toolkit._theme;
};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.get_backendProperties = function() {
	haxe_ui_Toolkit.buildBackend();
	return haxe_ui_Toolkit._backendProperties;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_scripting_ScriptInterp.addClassAlias("Component","haxe.ui.core.Component");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarEvent","haxe.ui.components.CalendarEvent");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Calendar","haxe.ui.components.Calendar");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalSlider","haxe.ui.components.HorizontalSlider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabBar","haxe.ui.components.TabBar");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Slider","haxe.ui.components.Slider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalProgress","haxe.ui.components.VerticalProgress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Range","haxe.ui.components.Range");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextField","haxe.ui.components.TextField");
	haxe_ui_scripting_ScriptInterp.addClassAlias("NumberStepper","haxe.ui.components.NumberStepper");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalSlider","haxe.ui.components.VerticalSlider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DropDown","haxe.ui.components.DropDown");
	haxe_ui_scripting_ScriptInterp.addClassAlias("IDropDownHandler","haxe.ui.components.IDropDownHandler");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DropDownHandler","haxe.ui.components.DropDownHandler");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ListDropDownHandler","haxe.ui.components.ListDropDownHandler");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarDropDownHandler","haxe.ui.components.CalendarDropDownHandler");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HGrid","haxe.ui.components.HGrid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Toggle","haxe.ui.components.Toggle");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Spacer","haxe.ui.components.Spacer");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Column","haxe.ui.components.Column");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalRange","haxe.ui.components.VerticalRange");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Label","haxe.ui.components.Label");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextArea","haxe.ui.components.TextArea");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Switch","haxe.ui.components.Switch");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Scroll","haxe.ui.components.Scroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalProgress","haxe.ui.components.HorizontalProgress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Progress","haxe.ui.components.Progress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalScroll","haxe.ui.components.HorizontalScroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Button","haxe.ui.components.Button");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VGrid","haxe.ui.components.VGrid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalScroll","haxe.ui.components.VerticalScroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Image","haxe.ui.components.Image");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Stepper","haxe.ui.components.Stepper");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBox","haxe.ui.components.CheckBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBox","haxe.ui.components.OptionBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalRange","haxe.ui.components.HorizontalRange");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ListView","haxe.ui.containers.ListView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("IVirtualContainer","haxe.ui.containers.IVirtualContainer");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarView","haxe.ui.containers.CalendarView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Grid","haxe.ui.containers.Grid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VBox","haxe.ui.containers.VBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabView","haxe.ui.containers.TabView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollView","haxe.ui.containers.ScrollView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Box","haxe.ui.containers.Box");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Header","haxe.ui.containers.Header");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HBox","haxe.ui.containers.HBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Absolute","haxe.ui.containers.Absolute");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Accordion","haxe.ui.containers.Accordion");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TableView","haxe.ui.containers.TableView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Group","haxe.ui.containers.Group");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Stack","haxe.ui.containers.Stack");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ContinuousHBox","haxe.ui.containers.ContinuousHBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuEvent","haxe.ui.containers.menus.MenuEvent");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Menu","haxe.ui.containers.menus.Menu");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuItem","haxe.ui.containers.menus.MenuItem");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuOptionBox","haxe.ui.containers.menus.MenuOptionBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuCheckBox","haxe.ui.containers.menus.MenuCheckBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuBar","haxe.ui.containers.menus.MenuBar");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MenuSeparator","haxe.ui.containers.menus.MenuSeparator");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Std","Std");
	haxe_ui_scripting_ScriptInterp.addStaticClass("Std",Std);
	haxe_ui_scripting_ScriptInterp.addClassAlias("StringTools","StringTools");
	haxe_ui_scripting_ScriptInterp.addStaticClass("StringTools",StringTools);
	haxe_ui_scripting_ScriptInterp.addClassAlias("Screen","haxe.ui.core.Screen");
	haxe_ui_scripting_ScriptInterp.addStaticClass("Screen",haxe_ui_core_Screen);
	haxe_ui_scripting_ScriptInterp.addClassAlias("MessageBox","haxe.ui.containers.dialogs.MessageBox");
	haxe_ui_scripting_ScriptInterp.addStaticClass("MessageBox",haxe_ui_containers_dialogs_MessageBox);
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.98000000000000043);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.97000000000000064);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.96000000000000085);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.95000000000000107);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.94000000000000128);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.93000000000000149);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.92000000000000171);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.91000000000000192);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.90000000000000213);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.89000000000000234);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.88000000000000256);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.87000000000000277);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.86000000000000298);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8500000000000032);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.84000000000000341);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.83000000000000362);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.82000000000000384);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.81000000000000405);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.80000000000000426);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","styles/native/main.css",-1);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","kb-editor/styles/global.css",0.);
	haxe_ui_core_ComponentClassMap.register("wiremappingtable","kbe.components.WireMappingTable");
	haxe_ui_core_ComponentClassMap.register("vslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("vscroll","haxe.ui.components.VerticalScroll");
	haxe_ui_core_ComponentClassMap.register("vrange","haxe.ui.components.VerticalRange");
	haxe_ui_core_ComponentClassMap.register("vprogress","haxe.ui.components.VerticalProgress");
	haxe_ui_core_ComponentClassMap.register("vgrid","haxe.ui.components.VGrid");
	haxe_ui_core_ComponentClassMap.register("verticalslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("verticalscroll","haxe.ui.components.VerticalScroll");
	haxe_ui_core_ComponentClassMap.register("verticalrange","haxe.ui.components.VerticalRange");
	haxe_ui_core_ComponentClassMap.register("verticalprogress","haxe.ui.components.VerticalProgress");
	haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("toggle","haxe.ui.components.Toggle");
	haxe_ui_core_ComponentClassMap.register("textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("textarea","haxe.ui.components.TextArea");
	haxe_ui_core_ComponentClassMap.register("text","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("tabview","haxe.ui.containers.TabView");
	haxe_ui_core_ComponentClassMap.register("tableview","haxe.ui.containers.TableView");
	haxe_ui_core_ComponentClassMap.register("tabbar","haxe.ui.components.TabBar");
	haxe_ui_core_ComponentClassMap.register("switch","haxe.ui.components.Switch");
	haxe_ui_core_ComponentClassMap.register("stepper","haxe.ui.components.Stepper");
	haxe_ui_core_ComponentClassMap.register("stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("scrollview","haxe.ui.containers.ScrollView");
	haxe_ui_core_ComponentClassMap.register("scroll","haxe.ui.components.Scroll");
	haxe_ui_core_ComponentClassMap.register("range","haxe.ui.components.Range");
	haxe_ui_core_ComponentClassMap.register("propertytext","kbe.components.properties.PropertyText");
	haxe_ui_core_ComponentClassMap.register("propertyitem","kbe.components.properties.PropertyItem");
	haxe_ui_core_ComponentClassMap.register("propertygroup","haxe.ui.containers.properties.PropertyGroup");
	haxe_ui_core_ComponentClassMap.register("propertygrid","haxe.ui.containers.properties.PropertyGrid");
	haxe_ui_core_ComponentClassMap.register("propertyeditor","kbe.components.properties.PropertyEditor");
	haxe_ui_core_ComponentClassMap.register("property","haxe.ui.containers.properties.Property");
	haxe_ui_core_ComponentClassMap.register("progress","haxe.ui.components.Progress");
	haxe_ui_core_ComponentClassMap.register("optionbox","haxe.ui.components.OptionBox");
	haxe_ui_core_ComponentClassMap.register("onewaybutton","kbe.components.OneWayButton");
	haxe_ui_core_ComponentClassMap.register("numberstepper","haxe.ui.components.NumberStepper");
	haxe_ui_core_ComponentClassMap.register("numbereditor","kbe.components.NumberEditor");
	haxe_ui_core_ComponentClassMap.register("menuseparator","haxe.ui.containers.menus.MenuSeparator");
	haxe_ui_core_ComponentClassMap.register("menuoptionbox","haxe.ui.containers.menus.MenuOptionBox");
	haxe_ui_core_ComponentClassMap.register("menuitem","haxe.ui.containers.menus.MenuItem");
	haxe_ui_core_ComponentClassMap.register("menucheckbox","haxe.ui.containers.menus.MenuCheckBox");
	haxe_ui_core_ComponentClassMap.register("menubar","haxe.ui.containers.menus.MenuBar");
	haxe_ui_core_ComponentClassMap.register("menu","haxe.ui.containers.menus.Menu");
	haxe_ui_core_ComponentClassMap.register("listview","haxe.ui.containers.ListView");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("keyboardcontainer","kbe.components.KeyboardContainer");
	haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("integereditor","kbe.components.IntegerEditor");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("hslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("hscroll","haxe.ui.components.HorizontalScroll");
	haxe_ui_core_ComponentClassMap.register("hrange","haxe.ui.components.HorizontalRange");
	haxe_ui_core_ComponentClassMap.register("hprogress","haxe.ui.components.HorizontalProgress");
	haxe_ui_core_ComponentClassMap.register("horizontalslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("horizontalscroll","haxe.ui.components.HorizontalScroll");
	haxe_ui_core_ComponentClassMap.register("horizontalrange","haxe.ui.components.HorizontalRange");
	haxe_ui_core_ComponentClassMap.register("horizontalprogress","haxe.ui.components.HorizontalProgress");
	haxe_ui_core_ComponentClassMap.register("hgrid","haxe.ui.components.HGrid");
	haxe_ui_core_ComponentClassMap.register("header","haxe.ui.containers.Header");
	haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("group","haxe.ui.containers.Group");
	haxe_ui_core_ComponentClassMap.register("grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("floateditor","kbe.components.FloatEditor");
	haxe_ui_core_ComponentClassMap.register("dropdown","haxe.ui.components.DropDown");
	haxe_ui_core_ComponentClassMap.register("dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_core_ComponentClassMap.register("continuoushbox","haxe.ui.containers.ContinuousHBox");
	haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("column","haxe.ui.components.Column");
	haxe_ui_core_ComponentClassMap.register("checkbox","haxe.ui.components.CheckBox");
	haxe_ui_core_ComponentClassMap.register("calendarview","haxe.ui.containers.CalendarView");
	haxe_ui_core_ComponentClassMap.register("calendar","haxe.ui.components.Calendar");
	haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("basicitemrenderer","haxe.ui.core.BasicItemRenderer");
	haxe_ui_core_ComponentClassMap.register("accordion","haxe.ui.containers.Accordion");
	haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
	haxe_ui_core_LayoutClassMap.register("virtuallayout","haxe.ui.layouts.VirtualLayout");
	haxe_ui_core_LayoutClassMap.register("virtual","haxe.ui.layouts.VirtualLayout");
	haxe_ui_core_LayoutClassMap.register("verticalvirtuallayout","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_core_LayoutClassMap.register("verticalvirtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_core_LayoutClassMap.register("verticallayout","haxe.ui.layouts.VerticalLayout");
	haxe_ui_core_LayoutClassMap.register("verticalgridlayout","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_core_LayoutClassMap.register("verticalgrid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_core_LayoutClassMap.register("vertical","haxe.ui.layouts.VerticalLayout");
	haxe_ui_core_LayoutClassMap.register("scrollviewlayout","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_core_LayoutClassMap.register("scrollview","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_core_LayoutClassMap.register("layout","haxe.ui.layouts.Layout");
	haxe_ui_core_LayoutClassMap.register("horizontallayout","haxe.ui.layouts.HorizontalLayout");
	haxe_ui_core_LayoutClassMap.register("horizontalgridlayout","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_core_LayoutClassMap.register("horizontalgrid","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_core_LayoutClassMap.register("horizontalcontinuouslayout","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_core_LayoutClassMap.register("horizontalcontinuous","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_core_LayoutClassMap.register("horizontal","haxe.ui.layouts.HorizontalLayout");
	haxe_ui_core_LayoutClassMap.register("delegatelayout","haxe.ui.layouts.DelegateLayout");
	haxe_ui_core_LayoutClassMap.register("delegate","haxe.ui.layouts.DelegateLayout");
	haxe_ui_core_LayoutClassMap.register("defaultlayout","haxe.ui.layouts.DefaultLayout");
	haxe_ui_core_LayoutClassMap.register("default","haxe.ui.layouts.DefaultLayout");
	haxe_ui_core_LayoutClassMap.register("absolutelayout","haxe.ui.layouts.AbsoluteLayout");
	haxe_ui_core_LayoutClassMap.register("absolute","haxe.ui.layouts.AbsoluteLayout");
	haxe_ui_core_LayoutClassMap.register("","haxe.ui.layouts.Layout");
	var section1 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this = section1.values;
	if(__map_reserved["style"] != null) {
		_this.setReserved("style","padding:0px; padding-bottom: 1px");
	} else {
		_this.h["style"] = "padding:0px; padding-bottom: 1px";
	}
	var _this1 = section1.values;
	if(__map_reserved["nodeType"] != null) {
		_this1.setReserved("nodeType","button");
	} else {
		_this1.h["nodeType"] = "button";
	}
	var _this2 = section1.values;
	if(__map_reserved["id"] != null) {
		_this2.setReserved("id","haxe.ui.components.Button");
	} else {
		_this2.h["id"] = "haxe.ui.components.Button";
	}
	var _this3 = section1.values;
	if(__map_reserved["class"] != null) {
		_this3.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this3.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section2 = section1.addSection("layout");
	var _this4 = section2.values;
	if(__map_reserved["class"] != null) {
		_this4.setReserved("class","haxe.ui.backend.html5.native.layouts.ButtonLayout");
	} else {
		_this4.h["class"] = "haxe.ui.backend.html5.native.layouts.ButtonLayout";
	}
	var section21 = section1.addSection("behaviour");
	var _this5 = section21.values;
	if(__map_reserved["style"] != null) {
		_this5.setReserved("style","margin-top:-2px;margin-left:-2px;");
	} else {
		_this5.h["style"] = "margin-top:-2px;margin-left:-2px;";
	}
	var _this6 = section21.values;
	if(__map_reserved["id"] != null) {
		_this6.setReserved("id","text");
	} else {
		_this6.h["id"] = "text";
	}
	var _this7 = section21.values;
	if(__map_reserved["class"] != null) {
		_this7.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this7.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var section22 = section1.addSection("behaviour");
	var _this8 = section22.values;
	if(__map_reserved["id"] != null) {
		_this8.setReserved("id","icon");
	} else {
		_this8.h["id"] = "icon";
	}
	var _this9 = section22.values;
	if(__map_reserved["class"] != null) {
		_this9.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementImage");
	} else {
		_this9.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementImage";
	}
	var section23 = section1.addSection("behaviour");
	var _this10 = section23.values;
	if(__map_reserved["id"] != null) {
		_this10.setReserved("id","disabled");
	} else {
		_this10.h["id"] = "disabled";
	}
	var _this11 = section23.values;
	if(__map_reserved["class"] != null) {
		_this11.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this11.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section11 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this12 = section11.values;
	if(__map_reserved["type"] != null) {
		_this12.setReserved("type","checkbox");
	} else {
		_this12.h["type"] = "checkbox";
	}
	var _this13 = section11.values;
	if(__map_reserved["id"] != null) {
		_this13.setReserved("id","haxe.ui.components.CheckBox");
	} else {
		_this13.h["id"] = "haxe.ui.components.CheckBox";
	}
	var _this14 = section11.values;
	if(__map_reserved["class"] != null) {
		_this14.setReserved("class","haxe.ui.backend.html5.native.LabeledInputElement");
	} else {
		_this14.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
	}
	var section24 = section11.addSection("size");
	var _this15 = section24.values;
	if(__map_reserved["incrementWidthBy"] != null) {
		_this15.setReserved("incrementWidthBy","20");
	} else {
		_this15.h["incrementWidthBy"] = "20";
	}
	var _this16 = section24.values;
	if(__map_reserved["incrementHeightBy"] != null) {
		_this16.setReserved("incrementHeightBy","0");
	} else {
		_this16.h["incrementHeightBy"] = "0";
	}
	var _this17 = section24.values;
	if(__map_reserved["class"] != null) {
		_this17.setReserved("class","haxe.ui.backend.html5.native.size.TextSize");
	} else {
		_this17.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
	}
	var section25 = section11.addSection("behaviour");
	var _this18 = section25.values;
	if(__map_reserved["index"] != null) {
		_this18.setReserved("index","last");
	} else {
		_this18.h["index"] = "last";
	}
	var _this19 = section25.values;
	if(__map_reserved["id"] != null) {
		_this19.setReserved("id","text");
	} else {
		_this19.h["id"] = "text";
	}
	var _this20 = section25.values;
	if(__map_reserved["class"] != null) {
		_this20.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this20.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var section26 = section11.addSection("behaviour");
	var _this21 = section26.values;
	if(__map_reserved["removeIfNegative"] != null) {
		_this21.setReserved("removeIfNegative","true");
	} else {
		_this21.h["removeIfNegative"] = "true";
	}
	var _this22 = section26.values;
	if(__map_reserved["name"] != null) {
		_this22.setReserved("name","checked");
	} else {
		_this22.h["name"] = "checked";
	}
	var _this23 = section26.values;
	if(__map_reserved["id"] != null) {
		_this23.setReserved("id","selected");
	} else {
		_this23.h["id"] = "selected";
	}
	var _this24 = section26.values;
	if(__map_reserved["class"] != null) {
		_this24.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this24.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var _this25 = section26.values;
	if(__map_reserved["child"] != null) {
		_this25.setReserved("child","input");
	} else {
		_this25.h["child"] = "input";
	}
	var section27 = section11.addSection("behaviour");
	var _this26 = section27.values;
	if(__map_reserved["id"] != null) {
		_this26.setReserved("id","disabled");
	} else {
		_this26.h["id"] = "disabled";
	}
	var _this27 = section27.values;
	if(__map_reserved["class"] != null) {
		_this27.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this27.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section12 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this28 = section12.values;
	if(__map_reserved["type"] != null) {
		_this28.setReserved("type","radio");
	} else {
		_this28.h["type"] = "radio";
	}
	var _this29 = section12.values;
	if(__map_reserved["id"] != null) {
		_this29.setReserved("id","haxe.ui.components.OptionBox");
	} else {
		_this29.h["id"] = "haxe.ui.components.OptionBox";
	}
	var _this30 = section12.values;
	if(__map_reserved["class"] != null) {
		_this30.setReserved("class","haxe.ui.backend.html5.native.LabeledInputElement");
	} else {
		_this30.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
	}
	var section28 = section12.addSection("size");
	var _this31 = section28.values;
	if(__map_reserved["incrementWidthBy"] != null) {
		_this31.setReserved("incrementWidthBy","20");
	} else {
		_this31.h["incrementWidthBy"] = "20";
	}
	var _this32 = section28.values;
	if(__map_reserved["incrementHeightBy"] != null) {
		_this32.setReserved("incrementHeightBy","0");
	} else {
		_this32.h["incrementHeightBy"] = "0";
	}
	var _this33 = section28.values;
	if(__map_reserved["class"] != null) {
		_this33.setReserved("class","haxe.ui.backend.html5.native.size.TextSize");
	} else {
		_this33.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
	}
	var section29 = section12.addSection("behaviour");
	var _this34 = section29.values;
	if(__map_reserved["index"] != null) {
		_this34.setReserved("index","last");
	} else {
		_this34.h["index"] = "last";
	}
	var _this35 = section29.values;
	if(__map_reserved["id"] != null) {
		_this35.setReserved("id","text");
	} else {
		_this35.h["id"] = "text";
	}
	var _this36 = section29.values;
	if(__map_reserved["class"] != null) {
		_this36.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this36.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var section210 = section12.addSection("behaviour");
	var _this37 = section210.values;
	if(__map_reserved["removeIfNegative"] != null) {
		_this37.setReserved("removeIfNegative","true");
	} else {
		_this37.h["removeIfNegative"] = "true";
	}
	var _this38 = section210.values;
	if(__map_reserved["name"] != null) {
		_this38.setReserved("name","checked");
	} else {
		_this38.h["name"] = "checked";
	}
	var _this39 = section210.values;
	if(__map_reserved["id"] != null) {
		_this39.setReserved("id","selected");
	} else {
		_this39.h["id"] = "selected";
	}
	var _this40 = section210.values;
	if(__map_reserved["class"] != null) {
		_this40.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this40.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var _this41 = section210.values;
	if(__map_reserved["child"] != null) {
		_this41.setReserved("child","input");
	} else {
		_this41.h["child"] = "input";
	}
	var section211 = section12.addSection("behaviour");
	var _this42 = section211.values;
	if(__map_reserved["removeIfNegative"] != null) {
		_this42.setReserved("removeIfNegative","true");
	} else {
		_this42.h["removeIfNegative"] = "true";
	}
	var _this43 = section211.values;
	if(__map_reserved["name"] != null) {
		_this43.setReserved("name","name");
	} else {
		_this43.h["name"] = "name";
	}
	var _this44 = section211.values;
	if(__map_reserved["id"] != null) {
		_this44.setReserved("id","componentGroup");
	} else {
		_this44.h["id"] = "componentGroup";
	}
	var _this45 = section211.values;
	if(__map_reserved["class"] != null) {
		_this45.setReserved("class","haxe.ui.backend.html5.native.behaviours.RadioGroup");
	} else {
		_this45.h["class"] = "haxe.ui.backend.html5.native.behaviours.RadioGroup";
	}
	var _this46 = section211.values;
	if(__map_reserved["child"] != null) {
		_this46.setReserved("child","input");
	} else {
		_this46.h["child"] = "input";
	}
	var section212 = section12.addSection("behaviour");
	var _this47 = section212.values;
	if(__map_reserved["id"] != null) {
		_this47.setReserved("id","disabled");
	} else {
		_this47.h["id"] = "disabled";
	}
	var _this48 = section212.values;
	if(__map_reserved["class"] != null) {
		_this48.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this48.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section13 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this49 = section13.values;
	if(__map_reserved["style"] != null) {
		_this49.setReserved("style","padding-left:2px;cursor:pointer;");
	} else {
		_this49.h["style"] = "padding-left:2px;cursor:pointer;";
	}
	var _this50 = section13.values;
	if(__map_reserved["nodeType"] != null) {
		_this50.setReserved("nodeType","input");
	} else {
		_this50.h["nodeType"] = "input";
	}
	var _this51 = section13.values;
	if(__map_reserved["id"] != null) {
		_this51.setReserved("id","haxe.ui.components.TextField");
	} else {
		_this51.h["id"] = "haxe.ui.components.TextField";
	}
	var _this52 = section13.values;
	if(__map_reserved["class"] != null) {
		_this52.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this52.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section213 = section13.addSection("size");
	var _this53 = section213.values;
	if(__map_reserved["class"] != null) {
		_this53.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this53.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section214 = section13.addSection("behaviour");
	var _this54 = section214.values;
	if(__map_reserved["id"] != null) {
		_this54.setReserved("id","text");
	} else {
		_this54.h["id"] = "text";
	}
	var _this55 = section214.values;
	if(__map_reserved["class"] != null) {
		_this55.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementValue");
	} else {
		_this55.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
	}
	var section215 = section13.addSection("behaviour");
	var _this56 = section215.values;
	if(__map_reserved["id"] != null) {
		_this56.setReserved("id","placeholder");
	} else {
		_this56.h["id"] = "placeholder";
	}
	var _this57 = section215.values;
	if(__map_reserved["class"] != null) {
		_this57.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementPlaceholder");
	} else {
		_this57.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementPlaceholder";
	}
	var section216 = section13.addSection("behaviour");
	var _this58 = section216.values;
	if(__map_reserved["id"] != null) {
		_this58.setReserved("id","disabled");
	} else {
		_this58.h["id"] = "disabled";
	}
	var _this59 = section216.values;
	if(__map_reserved["class"] != null) {
		_this59.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this59.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section14 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this60 = section14.values;
	if(__map_reserved["type"] != null) {
		_this60.setReserved("type","number");
	} else {
		_this60.h["type"] = "number";
	}
	var _this61 = section14.values;
	if(__map_reserved["style"] != null) {
		_this61.setReserved("style","padding-left:2px;cursor:pointer;");
	} else {
		_this61.h["style"] = "padding-left:2px;cursor:pointer;";
	}
	var _this62 = section14.values;
	if(__map_reserved["nodeType"] != null) {
		_this62.setReserved("nodeType","input");
	} else {
		_this62.h["nodeType"] = "input";
	}
	var _this63 = section14.values;
	if(__map_reserved["id"] != null) {
		_this63.setReserved("id","haxe.ui.components.NumberStepper");
	} else {
		_this63.h["id"] = "haxe.ui.components.NumberStepper";
	}
	var _this64 = section14.values;
	if(__map_reserved["class"] != null) {
		_this64.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this64.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section217 = section14.addSection("size");
	var _this65 = section217.values;
	if(__map_reserved["class"] != null) {
		_this65.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this65.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section218 = section14.addSection("behaviour");
	var _this66 = section218.values;
	if(__map_reserved["id"] != null) {
		_this66.setReserved("id","text");
	} else {
		_this66.h["id"] = "text";
	}
	var _this67 = section218.values;
	if(__map_reserved["class"] != null) {
		_this67.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementValue");
	} else {
		_this67.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
	}
	var section219 = section14.addSection("behaviour");
	var _this68 = section219.values;
	if(__map_reserved["name"] != null) {
		_this68.setReserved("name","step");
	} else {
		_this68.h["name"] = "step";
	}
	var _this69 = section219.values;
	if(__map_reserved["id"] != null) {
		_this69.setReserved("id","step");
	} else {
		_this69.h["id"] = "step";
	}
	var _this70 = section219.values;
	if(__map_reserved["class"] != null) {
		_this70.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this70.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section220 = section14.addSection("behaviour");
	var _this71 = section220.values;
	if(__map_reserved["id"] != null) {
		_this71.setReserved("id","pos");
	} else {
		_this71.h["id"] = "pos";
	}
	var _this72 = section220.values;
	if(__map_reserved["class"] != null) {
		_this72.setReserved("class","haxe.ui.core.DefaultBehaviour");
	} else {
		_this72.h["class"] = "haxe.ui.core.DefaultBehaviour";
	}
	var section221 = section14.addSection("behaviour");
	var _this73 = section221.values;
	if(__map_reserved["id"] != null) {
		_this73.setReserved("id","disabled");
	} else {
		_this73.h["id"] = "disabled";
	}
	var _this74 = section221.values;
	if(__map_reserved["class"] != null) {
		_this74.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this74.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section15 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this75 = section15.values;
	if(__map_reserved["style"] != null) {
		_this75.setReserved("style","resize:none;line-height:1.4;");
	} else {
		_this75.h["style"] = "resize:none;line-height:1.4;";
	}
	var _this76 = section15.values;
	if(__map_reserved["nodeType"] != null) {
		_this76.setReserved("nodeType","textarea");
	} else {
		_this76.h["nodeType"] = "textarea";
	}
	var _this77 = section15.values;
	if(__map_reserved["id"] != null) {
		_this77.setReserved("id","haxe.ui.components.TextArea");
	} else {
		_this77.h["id"] = "haxe.ui.components.TextArea";
	}
	var _this78 = section15.values;
	if(__map_reserved["class"] != null) {
		_this78.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this78.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section222 = section15.addSection("size");
	var _this79 = section222.values;
	if(__map_reserved["class"] != null) {
		_this79.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this79.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section223 = section15.addSection("behaviour");
	var _this80 = section223.values;
	if(__map_reserved["id"] != null) {
		_this80.setReserved("id","text");
	} else {
		_this80.h["id"] = "text";
	}
	var _this81 = section223.values;
	if(__map_reserved["class"] != null) {
		_this81.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementValue");
	} else {
		_this81.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
	}
	var section224 = section15.addSection("behaviour");
	var _this82 = section224.values;
	if(__map_reserved["id"] != null) {
		_this82.setReserved("id","disabled");
	} else {
		_this82.h["id"] = "disabled";
	}
	var _this83 = section224.values;
	if(__map_reserved["class"] != null) {
		_this83.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this83.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section16 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this84 = section16.values;
	if(__map_reserved["id"] != null) {
		_this84.setReserved("id","haxe.ui.containers.ScrollView");
	} else {
		_this84.h["id"] = "haxe.ui.containers.ScrollView";
	}
	var _this85 = section16.values;
	if(__map_reserved["class"] != null) {
		_this85.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this85.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section225 = section16.addSection("builder");
	var _this86 = section225.values;
	if(__map_reserved["class"] != null) {
		_this86.setReserved("class","haxe.ui.backend.html5.native.builders.ScrollViewBuilder");
	} else {
		_this86.h["class"] = "haxe.ui.backend.html5.native.builders.ScrollViewBuilder";
	}
	var section226 = section16.addSection("behaviour");
	var _this87 = section226.values;
	if(__map_reserved["id"] != null) {
		_this87.setReserved("id","disabled");
	} else {
		_this87.h["id"] = "disabled";
	}
	var _this88 = section226.values;
	if(__map_reserved["class"] != null) {
		_this88.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this88.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section227 = section16.addSection("behaviour");
	var _this89 = section227.values;
	if(__map_reserved["id"] != null) {
		_this89.setReserved("id","hscrollPos");
	} else {
		_this89.h["id"] = "hscrollPos";
	}
	var _this90 = section227.values;
	if(__map_reserved["class"] != null) {
		_this90.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementScrollLeft");
	} else {
		_this90.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollLeft";
	}
	var section228 = section16.addSection("behaviour");
	var _this91 = section228.values;
	if(__map_reserved["id"] != null) {
		_this91.setReserved("id","vscrollPos");
	} else {
		_this91.h["id"] = "vscrollPos";
	}
	var _this92 = section228.values;
	if(__map_reserved["class"] != null) {
		_this92.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementScrollTop");
	} else {
		_this92.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollTop";
	}
	var section17 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this93 = section17.values;
	if(__map_reserved["id"] != null) {
		_this93.setReserved("id","haxe.ui.containers.ListView");
	} else {
		_this93.h["id"] = "haxe.ui.containers.ListView";
	}
	var _this94 = section17.values;
	if(__map_reserved["class"] != null) {
		_this94.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this94.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section229 = section17.addSection("behaviour");
	var _this95 = section229.values;
	if(__map_reserved["id"] != null) {
		_this95.setReserved("id","disabled");
	} else {
		_this95.h["id"] = "disabled";
	}
	var _this96 = section229.values;
	if(__map_reserved["class"] != null) {
		_this96.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this96.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section18 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this97 = section18.values;
	if(__map_reserved["id"] != null) {
		_this97.setReserved("id","haxe.ui.containers.TableView");
	} else {
		_this97.h["id"] = "haxe.ui.containers.TableView";
	}
	var _this98 = section18.values;
	if(__map_reserved["class"] != null) {
		_this98.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this98.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section230 = section18.addSection("behaviour");
	var _this99 = section230.values;
	if(__map_reserved["id"] != null) {
		_this99.setReserved("id","disabled");
	} else {
		_this99.h["id"] = "disabled";
	}
	var _this100 = section230.values;
	if(__map_reserved["class"] != null) {
		_this100.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this100.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section19 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this101 = section19.values;
	if(__map_reserved["style"] != null) {
		_this101.setReserved("style","padding:3px;");
	} else {
		_this101.h["style"] = "padding:3px;";
	}
	var _this102 = section19.values;
	if(__map_reserved["nodeType"] != null) {
		_this102.setReserved("nodeType","select");
	} else {
		_this102.h["nodeType"] = "select";
	}
	var _this103 = section19.values;
	if(__map_reserved["id"] != null) {
		_this103.setReserved("id","haxe.ui.components.DropDown");
	} else {
		_this103.h["id"] = "haxe.ui.components.DropDown";
	}
	var _this104 = section19.values;
	if(__map_reserved["class"] != null) {
		_this104.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this104.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this105 = section19.values;
	if(__map_reserved["allowChildren"] != null) {
		_this105.setReserved("allowChildren","false");
	} else {
		_this105.h["allowChildren"] = "false";
	}
	var section231 = section19.addSection("size");
	var _this106 = section231.values;
	if(__map_reserved["class"] != null) {
		_this106.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this106.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section232 = section19.addSection("behaviour");
	var _this107 = section232.values;
	if(__map_reserved["id"] != null) {
		_this107.setReserved("id","dataSource");
	} else {
		_this107.h["id"] = "dataSource";
	}
	var _this108 = section232.values;
	if(__map_reserved["class"] != null) {
		_this108.setReserved("class","haxe.ui.backend.html5.native.behaviours.SelectDataSource");
	} else {
		_this108.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectDataSource";
	}
	var section233 = section19.addSection("behaviour");
	var _this109 = section233.values;
	if(__map_reserved["id"] != null) {
		_this109.setReserved("id","selectedItem");
	} else {
		_this109.h["id"] = "selectedItem";
	}
	var _this110 = section233.values;
	if(__map_reserved["class"] != null) {
		_this110.setReserved("class","haxe.ui.backend.html5.native.behaviours.SelectedItem");
	} else {
		_this110.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectedItem";
	}
	var section234 = section19.addSection("behaviour");
	var _this111 = section234.values;
	if(__map_reserved["id"] != null) {
		_this111.setReserved("id","disabled");
	} else {
		_this111.h["id"] = "disabled";
	}
	var _this112 = section234.values;
	if(__map_reserved["class"] != null) {
		_this112.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this112.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section110 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this113 = section110.values;
	if(__map_reserved["nodeType"] != null) {
		_this113.setReserved("nodeType","progress");
	} else {
		_this113.h["nodeType"] = "progress";
	}
	var _this114 = section110.values;
	if(__map_reserved["id"] != null) {
		_this114.setReserved("id","haxe.ui.components.HorizontalProgress");
	} else {
		_this114.h["id"] = "haxe.ui.components.HorizontalProgress";
	}
	var _this115 = section110.values;
	if(__map_reserved["class"] != null) {
		_this115.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this115.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section235 = section110.addSection("size");
	var _this116 = section235.values;
	if(__map_reserved["class"] != null) {
		_this116.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this116.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section236 = section110.addSection("behaviour");
	var _this117 = section236.values;
	if(__map_reserved["name"] != null) {
		_this117.setReserved("name","max");
	} else {
		_this117.h["name"] = "max";
	}
	var _this118 = section236.values;
	if(__map_reserved["id"] != null) {
		_this118.setReserved("id","max");
	} else {
		_this118.h["id"] = "max";
	}
	var _this119 = section236.values;
	if(__map_reserved["class"] != null) {
		_this119.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this119.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section237 = section110.addSection("behaviour");
	var _this120 = section237.values;
	if(__map_reserved["name"] != null) {
		_this120.setReserved("name","value");
	} else {
		_this120.h["name"] = "value";
	}
	var _this121 = section237.values;
	if(__map_reserved["id"] != null) {
		_this121.setReserved("id","end");
	} else {
		_this121.h["id"] = "end";
	}
	var _this122 = section237.values;
	if(__map_reserved["class"] != null) {
		_this122.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this122.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section238 = section110.addSection("behaviour");
	var _this123 = section238.values;
	if(__map_reserved["remove"] != null) {
		_this123.setReserved("remove","true");
	} else {
		_this123.h["remove"] = "true";
	}
	var _this124 = section238.values;
	if(__map_reserved["name"] != null) {
		_this124.setReserved("name","value");
	} else {
		_this124.h["name"] = "value";
	}
	var _this125 = section238.values;
	if(__map_reserved["id"] != null) {
		_this125.setReserved("id","indeterminate");
	} else {
		_this125.h["id"] = "indeterminate";
	}
	var _this126 = section238.values;
	if(__map_reserved["class"] != null) {
		_this126.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this126.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var section239 = section110.addSection("behaviour");
	var _this127 = section239.values;
	if(__map_reserved["id"] != null) {
		_this127.setReserved("id","disabled");
	} else {
		_this127.h["id"] = "disabled";
	}
	var _this128 = section239.values;
	if(__map_reserved["class"] != null) {
		_this128.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this128.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section111 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this129 = section111.values;
	if(__map_reserved["style"] != null) {
		_this129.setReserved("style","-webkit-transform: rotate(-90deg) translateY(-1000%);-webkit-transform-origin: 100% 0%;-moz-orient: vertical;writing-mode: bt-lr;");
	} else {
		_this129.h["style"] = "-webkit-transform: rotate(-90deg) translateY(-1000%);-webkit-transform-origin: 100% 0%;-moz-orient: vertical;writing-mode: bt-lr;";
	}
	var _this130 = section111.values;
	if(__map_reserved["orient"] != null) {
		_this130.setReserved("orient","vertical");
	} else {
		_this130.h["orient"] = "vertical";
	}
	var _this131 = section111.values;
	if(__map_reserved["nodeType"] != null) {
		_this131.setReserved("nodeType","progress");
	} else {
		_this131.h["nodeType"] = "progress";
	}
	var _this132 = section111.values;
	if(__map_reserved["id"] != null) {
		_this132.setReserved("id","haxe.ui.components.VerticalProgress");
	} else {
		_this132.h["id"] = "haxe.ui.components.VerticalProgress";
	}
	var _this133 = section111.values;
	if(__map_reserved["class"] != null) {
		_this133.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this133.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var section240 = section111.addSection("size");
	var _this134 = section240.values;
	if(__map_reserved["class"] != null) {
		_this134.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this134.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section241 = section111.addSection("behaviour");
	var _this135 = section241.values;
	if(__map_reserved["name"] != null) {
		_this135.setReserved("name","max");
	} else {
		_this135.h["name"] = "max";
	}
	var _this136 = section241.values;
	if(__map_reserved["id"] != null) {
		_this136.setReserved("id","max");
	} else {
		_this136.h["id"] = "max";
	}
	var _this137 = section241.values;
	if(__map_reserved["class"] != null) {
		_this137.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this137.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section242 = section111.addSection("behaviour");
	var _this138 = section242.values;
	if(__map_reserved["name"] != null) {
		_this138.setReserved("name","value");
	} else {
		_this138.h["name"] = "value";
	}
	var _this139 = section242.values;
	if(__map_reserved["id"] != null) {
		_this139.setReserved("id","end");
	} else {
		_this139.h["id"] = "end";
	}
	var _this140 = section242.values;
	if(__map_reserved["class"] != null) {
		_this140.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this140.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section243 = section111.addSection("behaviour");
	var _this141 = section243.values;
	if(__map_reserved["remove"] != null) {
		_this141.setReserved("remove","true");
	} else {
		_this141.h["remove"] = "true";
	}
	var _this142 = section243.values;
	if(__map_reserved["name"] != null) {
		_this142.setReserved("name","value");
	} else {
		_this142.h["name"] = "value";
	}
	var _this143 = section243.values;
	if(__map_reserved["id"] != null) {
		_this143.setReserved("id","indeterminate");
	} else {
		_this143.h["id"] = "indeterminate";
	}
	var _this144 = section243.values;
	if(__map_reserved["class"] != null) {
		_this144.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this144.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var section244 = section111.addSection("behaviour");
	var _this145 = section244.values;
	if(__map_reserved["id"] != null) {
		_this145.setReserved("id","disabled");
	} else {
		_this145.h["id"] = "disabled";
	}
	var _this146 = section244.values;
	if(__map_reserved["class"] != null) {
		_this146.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this146.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section112 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this147 = section112.values;
	if(__map_reserved["type"] != null) {
		_this147.setReserved("type","range");
	} else {
		_this147.h["type"] = "range";
	}
	var _this148 = section112.values;
	if(__map_reserved["style"] != null) {
		_this148.setReserved("style","margin: 0;padding:0;");
	} else {
		_this148.h["style"] = "margin: 0;padding:0;";
	}
	var _this149 = section112.values;
	if(__map_reserved["nodeType"] != null) {
		_this149.setReserved("nodeType","input");
	} else {
		_this149.h["nodeType"] = "input";
	}
	var _this150 = section112.values;
	if(__map_reserved["id"] != null) {
		_this150.setReserved("id","haxe.ui.components.HorizontalSlider");
	} else {
		_this150.h["id"] = "haxe.ui.components.HorizontalSlider";
	}
	var _this151 = section112.values;
	if(__map_reserved["class"] != null) {
		_this151.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this151.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this152 = section112.values;
	if(__map_reserved["allowChildren"] != null) {
		_this152.setReserved("allowChildren","false");
	} else {
		_this152.h["allowChildren"] = "false";
	}
	var section245 = section112.addSection("size");
	var _this153 = section245.values;
	if(__map_reserved["class"] != null) {
		_this153.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this153.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section246 = section112.addSection("behaviour");
	var _this154 = section246.values;
	if(__map_reserved["name"] != null) {
		_this154.setReserved("name","min");
	} else {
		_this154.h["name"] = "min";
	}
	var _this155 = section246.values;
	if(__map_reserved["id"] != null) {
		_this155.setReserved("id","min");
	} else {
		_this155.h["id"] = "min";
	}
	var _this156 = section246.values;
	if(__map_reserved["class"] != null) {
		_this156.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this156.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section247 = section112.addSection("behaviour");
	var _this157 = section247.values;
	if(__map_reserved["name"] != null) {
		_this157.setReserved("name","max");
	} else {
		_this157.h["name"] = "max";
	}
	var _this158 = section247.values;
	if(__map_reserved["id"] != null) {
		_this158.setReserved("id","max");
	} else {
		_this158.h["id"] = "max";
	}
	var _this159 = section247.values;
	if(__map_reserved["class"] != null) {
		_this159.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this159.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section248 = section112.addSection("behaviour");
	var _this160 = section248.values;
	if(__map_reserved["name"] != null) {
		_this160.setReserved("name","value");
	} else {
		_this160.h["name"] = "value";
	}
	var _this161 = section248.values;
	if(__map_reserved["id"] != null) {
		_this161.setReserved("id","pos");
	} else {
		_this161.h["id"] = "pos";
	}
	var _this162 = section248.values;
	if(__map_reserved["class"] != null) {
		_this162.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this162.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section249 = section112.addSection("behaviour");
	var _this163 = section249.values;
	if(__map_reserved["name"] != null) {
		_this163.setReserved("name","value");
	} else {
		_this163.h["name"] = "value";
	}
	var _this164 = section249.values;
	if(__map_reserved["id"] != null) {
		_this164.setReserved("id","start");
	} else {
		_this164.h["id"] = "start";
	}
	var _this165 = section249.values;
	if(__map_reserved["class"] != null) {
		_this165.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this165.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section250 = section112.addSection("behaviour");
	var _this166 = section250.values;
	if(__map_reserved["name"] != null) {
		_this166.setReserved("name","value");
	} else {
		_this166.h["name"] = "value";
	}
	var _this167 = section250.values;
	if(__map_reserved["id"] != null) {
		_this167.setReserved("id","end");
	} else {
		_this167.h["id"] = "end";
	}
	var _this168 = section250.values;
	if(__map_reserved["class"] != null) {
		_this168.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this168.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section251 = section112.addSection("behaviour");
	var _this169 = section251.values;
	if(__map_reserved["id"] != null) {
		_this169.setReserved("id","disabled");
	} else {
		_this169.h["id"] = "disabled";
	}
	var _this170 = section251.values;
	if(__map_reserved["class"] != null) {
		_this170.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this170.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var section113 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this171 = section113.values;
	if(__map_reserved["type"] != null) {
		_this171.setReserved("type","range");
	} else {
		_this171.h["type"] = "range";
	}
	var _this172 = section113.values;
	if(__map_reserved["style"] != null) {
		_this172.setReserved("style","padding:0;margin: 0;-webkit-appearance: slider-vertical;-moz-orient: vertical;writing-mode: bt-lr;");
	} else {
		_this172.h["style"] = "padding:0;margin: 0;-webkit-appearance: slider-vertical;-moz-orient: vertical;writing-mode: bt-lr;";
	}
	var _this173 = section113.values;
	if(__map_reserved["orient"] != null) {
		_this173.setReserved("orient","vertical");
	} else {
		_this173.h["orient"] = "vertical";
	}
	var _this174 = section113.values;
	if(__map_reserved["nodeType"] != null) {
		_this174.setReserved("nodeType","input");
	} else {
		_this174.h["nodeType"] = "input";
	}
	var _this175 = section113.values;
	if(__map_reserved["id"] != null) {
		_this175.setReserved("id","haxe.ui.components.VerticalSlider");
	} else {
		_this175.h["id"] = "haxe.ui.components.VerticalSlider";
	}
	var _this176 = section113.values;
	if(__map_reserved["class"] != null) {
		_this176.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this176.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this177 = section113.values;
	if(__map_reserved["allowChildren"] != null) {
		_this177.setReserved("allowChildren","false");
	} else {
		_this177.h["allowChildren"] = "false";
	}
	var section252 = section113.addSection("size");
	var _this178 = section252.values;
	if(__map_reserved["class"] != null) {
		_this178.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this178.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var section253 = section113.addSection("behaviour");
	var _this179 = section253.values;
	if(__map_reserved["name"] != null) {
		_this179.setReserved("name","min");
	} else {
		_this179.h["name"] = "min";
	}
	var _this180 = section253.values;
	if(__map_reserved["id"] != null) {
		_this180.setReserved("id","min");
	} else {
		_this180.h["id"] = "min";
	}
	var _this181 = section253.values;
	if(__map_reserved["class"] != null) {
		_this181.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this181.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section254 = section113.addSection("behaviour");
	var _this182 = section254.values;
	if(__map_reserved["name"] != null) {
		_this182.setReserved("name","max");
	} else {
		_this182.h["name"] = "max";
	}
	var _this183 = section254.values;
	if(__map_reserved["id"] != null) {
		_this183.setReserved("id","max");
	} else {
		_this183.h["id"] = "max";
	}
	var _this184 = section254.values;
	if(__map_reserved["class"] != null) {
		_this184.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this184.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section255 = section113.addSection("behaviour");
	var _this185 = section255.values;
	if(__map_reserved["name"] != null) {
		_this185.setReserved("name","value");
	} else {
		_this185.h["name"] = "value";
	}
	var _this186 = section255.values;
	if(__map_reserved["id"] != null) {
		_this186.setReserved("id","pos");
	} else {
		_this186.h["id"] = "pos";
	}
	var _this187 = section255.values;
	if(__map_reserved["class"] != null) {
		_this187.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this187.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section256 = section113.addSection("behaviour");
	var _this188 = section256.values;
	if(__map_reserved["name"] != null) {
		_this188.setReserved("name","value");
	} else {
		_this188.h["name"] = "value";
	}
	var _this189 = section256.values;
	if(__map_reserved["id"] != null) {
		_this189.setReserved("id","start");
	} else {
		_this189.h["id"] = "start";
	}
	var _this190 = section256.values;
	if(__map_reserved["class"] != null) {
		_this190.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this190.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section257 = section113.addSection("behaviour");
	var _this191 = section257.values;
	if(__map_reserved["name"] != null) {
		_this191.setReserved("name","value");
	} else {
		_this191.h["name"] = "value";
	}
	var _this192 = section257.values;
	if(__map_reserved["id"] != null) {
		_this192.setReserved("id","end");
	} else {
		_this192.h["id"] = "end";
	}
	var _this193 = section257.values;
	if(__map_reserved["class"] != null) {
		_this193.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementProperty");
	} else {
		_this193.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
	}
	var section258 = section113.addSection("behaviour");
	var _this194 = section258.values;
	if(__map_reserved["id"] != null) {
		_this194.setReserved("id","disabled");
	} else {
		_this194.h["id"] = "disabled";
	}
	var _this195 = section258.values;
	if(__map_reserved["class"] != null) {
		_this195.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this195.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_Toolkit._backendProperties.setProp("haxe.ui.html5.container","body");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == 9) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.messageBox = function(message,title,type,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	if(type == null) {
		type = "haxeui-core/styles/default/dialogs/information.png";
	}
	var messageBox = new haxe_ui_containers_dialogs_MessageBox();
	messageBox.set_type(type);
	messageBox.set_message(message);
	messageBox.modal = modal;
	if(title != null) {
		messageBox.set_title(title);
	}
	messageBox.show();
	if(callback != null) {
		messageBox.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return messageBox;
};
haxe_ui_Toolkit.dialog = function(contents,title,buttons,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	var dialog = new haxe_ui_containers_dialogs_Dialog();
	dialog.modal = modal;
	if(title != null) {
		dialog.set_title(title);
	}
	if(buttons != null) {
		dialog.buttons = buttons;
	}
	dialog.addComponent(contents);
	dialog.show();
	if(callback != null) {
		dialog.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return dialog;
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.componentFromAsset = function(assetId) {
	var data = haxe_ui_ToolkitAssets.get_instance().getText(assetId);
	return haxe_ui_Toolkit.componentFromString(data,null,new haxe_ui_parsers_ui_resolvers_AssetResourceResolver(assetId));
};
haxe_ui_Toolkit.componentFromString = function(data,type,resourceResolver,callback) {
	if(data == null || data.length == 0) {
		return null;
	}
	if(type == null) {
		if(StringTools.startsWith(StringTools.trim(data),"<")) {
			type = "xml";
		}
	}
	var parser = haxe_ui_parsers_ui_ComponentParser.get(type);
	if(parser == null) {
		haxe_Log.trace("WARNING: type \"" + type + "\" not recognised",{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 174, className : "haxe.ui.Toolkit", methodName : "componentFromString"});
		return null;
	}
	var c = parser.parse(data,resourceResolver);
	var component = haxe_ui_Toolkit.buildComponentFromInfo(c,callback);
	var fullScript = "";
	var _g = 0;
	var _g1 = c.scriptlets;
	while(_g < _g1.length) {
		var scriptString = _g1[_g];
		++_g;
		fullScript += scriptString;
	}
	component.set_script(fullScript);
	return component;
};
haxe_ui_Toolkit.buildComponentFromInfo = function(c,callback) {
	if(c.condition != null && new haxe_ui_scripting_ConditionEvaluator().evaluate(c.condition) == false) {
		return null;
	}
	var className = haxe_ui_core_ComponentClassMap.get(c.type.toLowerCase());
	if(className == null) {
		haxe_Log.trace("WARNING: no class found for component: " + c.type,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 198, className : "haxe.ui.Toolkit", methodName : "buildComponentFromInfo"});
		return null;
	}
	var component = Type.createInstance($hxClasses[className],[]);
	if(component == null) {
		haxe_Log.trace("WARNING: could not create class instance: " + className,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 204, className : "haxe.ui.Toolkit", methodName : "buildComponentFromInfo"});
		return null;
	}
	if(c.id != null) {
		component.set_id(c.id);
	}
	if(c.left != null) {
		component.set_left(c.left);
	}
	if(c.top != null) {
		component.set_top(c.top);
	}
	if(c.width != null) {
		component.set_width(c.width);
	}
	if(c.height != null) {
		component.set_height(c.height);
	}
	if(c.percentWidth != null) {
		component.set_percentWidth(c.percentWidth);
	}
	if(c.percentHeight != null) {
		component.set_percentHeight(c.percentHeight);
	}
	if(c.text != null) {
		component.set_text(c.text);
	}
	if(c.styleNames != null) {
		component.set_styleNames(c.styleNames);
	}
	if(c.style != null) {
		component.set_styleString(c.style);
	}
	if(c.layout != null) {
		var layout = haxe_ui_Toolkit.buildLayoutFromInfo(c.layout);
		component.set_layout(layout);
	}
	if(((component) instanceof haxe_ui_containers_ScrollView)) {
		var scrollview = js_Boot.__cast(component , haxe_ui_containers_ScrollView);
		if(c.contentWidth != null) {
			scrollview.set_contentWidth(c.contentWidth);
		}
		if(c.contentHeight != null) {
			scrollview.set_contentHeight(c.contentHeight);
		}
		if(c.percentContentWidth != null) {
			scrollview.set_percentContentWidth(c.percentContentWidth);
		}
		if(c.percentContentHeight != null) {
			scrollview.set_percentContentHeight(c.percentContentHeight);
		}
	}
	var propName = c.properties.keys();
	while(propName.hasNext()) {
		var propName1 = propName.next();
		var _this = c.properties;
		var propValue = __map_reserved[propName1] != null ? _this.getReserved(propName1) : _this.h[propName1];
		var _this1 = haxe_ui_core_ComponentFieldMap.MAP;
		if(__map_reserved[propName1] != null ? _this1.existsReserved(propName1) : _this1.h.hasOwnProperty(propName1)) {
			var _this2 = haxe_ui_core_ComponentFieldMap.MAP;
			propName1 = __map_reserved[propName1] != null ? _this2.getReserved(propName1) : _this2.h[propName1];
		} else {
			propName1 = propName1;
		}
		if(StringTools.startsWith(propName1,"on")) {
			component.addScriptEvent(propName1,propValue);
		} else {
			propValue = haxe_ui_util_TypeConverter.convert(propValue);
			Reflect.setProperty(component,propName1,propValue);
		}
	}
	if(js_Boot.__implements(component,haxe_ui_core_IDataComponent) && c.data != null) {
		(js_Boot.__cast(component , haxe_ui_core_IDataComponent)).set_dataSource(new haxe_ui_data_DataSourceFactory().fromString(c.get_dataString(),haxe_ui_data_ArrayDataSource));
	}
	var _g = 0;
	var _g1 = c.children;
	while(_g < _g1.length) {
		var childInfo = _g1[_g];
		++_g;
		var childComponent = haxe_ui_Toolkit.buildComponentFromInfo(childInfo,callback);
		if(childComponent != null) {
			component.addComponent(childComponent);
		}
	}
	if(callback != null) {
		callback(component);
	}
	return component;
};
haxe_ui_Toolkit.buildLayoutFromInfo = function(l) {
	var className = haxe_ui_core_LayoutClassMap.get(l.type.toLowerCase());
	if(className == null) {
		haxe_Log.trace("WARNING: no class found for layout: " + l.type,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 263, className : "haxe.ui.Toolkit", methodName : "buildLayoutFromInfo"});
		return null;
	}
	var layout = Type.createInstance($hxClasses[className],[]);
	if(layout == null) {
		haxe_Log.trace("WARNING: could not create class instance: " + className,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 269, className : "haxe.ui.Toolkit", methodName : "buildLayoutFromInfo"});
		return null;
	}
	var propName = l.properties.keys();
	while(propName.hasNext()) {
		var propName1 = propName.next();
		var _this = l.properties;
		var propValue = __map_reserved[propName1] != null ? _this.getReserved(propName1) : _this.h[propName1];
		Reflect.setProperty(layout,propName1,haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(propValue));
	}
	return layout;
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.autoScaleDPIThreshold) {
				haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.autoScaleDPIThreshold);
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.autoScaleDPIThreshold) {
				haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.autoScaleDPIThreshold);
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		callback(null);
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageFromBytes: function(bytes,callback) {
		callback(null);
	}
	,getFontInternal: function(resourceId,callback) {
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e1) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e1) {
			window.console.log(e1);
			callback(null);
		};
		var blob = new Blob([bytes.b.bufferValue]);
		var blobUrl = URL.createObjectURL(blob);
		image.src = blobUrl;
	}
	,getFontInternal: function(resourceId,callback) {
		haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
			var fontInfo = { data : f};
			callback(fontInfo);
		},function(f1) {
			callback(null);
		});
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	preloadList: null
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var tmp;
		if(this._fontCache != null) {
			var _this = this._fontCache;
			tmp = (__map_reserved[resourceId] != null ? _this.getReserved(resourceId) : _this.h[resourceId]) != null;
		} else {
			tmp = false;
		}
		if(tmp && useCache == true) {
			var _this1 = this._fontCache;
			var tmp1 = __map_reserved[resourceId] != null ? _this1.getReserved(resourceId) : _this1.h[resourceId];
			callback(tmp1);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		var _this = this._fontCache;
		if(__map_reserved[resourceId] != null) {
			_this.setReserved(resourceId,font);
		} else {
			_this.h[resourceId] = font;
		}
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		var tmp;
		if(this._imageCache != null) {
			var _this = this._imageCache;
			tmp = (__map_reserved[resourceId] != null ? _this.getReserved(resourceId) : _this.h[resourceId]) != null;
		} else {
			tmp = false;
		}
		if(tmp && useCache == true) {
			var _this1 = this._imageCache;
			var tmp1 = __map_reserved[resourceId] != null ? _this1.getReserved(resourceId) : _this1.h[resourceId];
			callback(tmp1);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 106, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		var _this = this._imageCache;
		if(__map_reserved[resourceId] != null) {
			_this.setReserved(resourceId,imageInfo);
		} else {
			_this.h[resourceId] = imageInfo;
		}
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return null;
	}
	,_plugins: null
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	_props: null
	,invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		var _this = this._props;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var _this = this._props;
		var v = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_containers_Box = function() {
	haxe_ui_core_Component.call(this);
	this.set_layout(new haxe_ui_layouts_DefaultLayout());
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		this.behaviours.set("icon",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_backend_DialogBase = function() {
	this._buttonsCreated = false;
	this.button = null;
	this.centerDialog = true;
	this.draggable = false;
	this.buttons = null;
	this.modal = true;
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	this.dialogContainer = new haxe_ui_containers_VBox();
	this.dialogContainer.set_id("dialog-container");
	this.dialogContainer.set_styleNames("dialog-container");
	this.addComponent(this.dialogContainer);
	this.dialogTitle = new haxe_ui_containers_HBox();
	this.dialogTitle.set_id("dialog-title");
	this.dialogTitle.set_styleNames("dialog-title");
	this.dialogContainer.addComponent(this.dialogTitle);
	this.dialogTitleLabel = new haxe_ui_components_Label();
	this.dialogTitleLabel.set_id("dialog-title-label");
	this.dialogTitleLabel.set_styleNames("dialog-title-label");
	this.dialogTitleLabel.set_text("HaxeUI");
	this.dialogTitle.addComponent(this.dialogTitleLabel);
	this.dialogCloseButton = new haxe_ui_components_Image();
	this.dialogCloseButton.set_id("dialog-close-button");
	this.dialogCloseButton.set_styleNames("dialog-close-button");
	this.dialogTitle.addComponent(this.dialogCloseButton);
	this.dialogContent = new haxe_ui_containers_VBox();
	this.dialogContent.set_id("dialog-content");
	this.dialogContent.set_styleNames("dialog-content");
	this.dialogContainer.addComponent(this.dialogContent);
	this.dialogFooterContainer = new haxe_ui_containers_Box();
	this.dialogFooterContainer.set_percentWidth(100);
	this.dialogFooterContainer.set_id("dialog-footer-container");
	this.dialogFooterContainer.set_styleNames("dialog-footer-container");
	this.dialogContainer.addComponent(this.dialogFooterContainer);
	this.dialogFooter = new haxe_ui_containers_HBox();
	this.dialogFooter.set_id("dialog-footer");
	this.dialogFooter.set_styleNames("dialog-footer");
	this.dialogFooterContainer.addComponent(this.dialogFooter);
	this.dialogFooterContainer.hide();
	this.dialogCloseButton.set_onClick(function(e) {
		_gthis.hideDialog("Cancel");
	});
};
$hxClasses["haxe.ui.backend.DialogBase"] = haxe_ui_backend_DialogBase;
haxe_ui_backend_DialogBase.__name__ = "haxe.ui.backend.DialogBase";
haxe_ui_backend_DialogBase.__super__ = haxe_ui_containers_Box;
haxe_ui_backend_DialogBase.prototype = $extend(haxe_ui_containers_Box.prototype,{
	modal: null
	,buttons: null
	,draggable: null
	,centerDialog: null
	,button: null
	,_overlay: null
	,dialogContainer: null
	,dialogTitle: null
	,dialogTitleLabel: null
	,dialogCloseButton: null
	,dialogContent: null
	,dialogFooterContainer: null
	,dialogFooter: null
	,showDialog: function(modal) {
		if(modal == null) {
			modal = true;
		}
		this.modal = modal;
		this.show();
	}
	,show: function() {
		if(this.modal) {
			this._overlay = new haxe_ui_core_Component();
			this._overlay.set_id("modal-background");
			this._overlay.addClass("modal-background");
			this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
		}
		this.createButtons();
		haxe_ui_core_Screen.get_instance().addComponent(this);
		this.syncComponentValidation();
		if(this.get_autoHeight() == false) {
			this.dialogContainer.set_percentHeight(100);
			this.dialogContent.set_percentHeight(100);
		}
		if(this.centerDialog) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog));
		}
	}
	,_buttonsCreated: null
	,createButtons: function() {
		if(this._buttonsCreated == true) {
			return;
		}
		if(this.buttons != null) {
			var _g = 0;
			var _g1 = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toArray(this.buttons);
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				var buttonComponent = new haxe_ui_components_Button();
				buttonComponent.set_text(haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(button));
				buttonComponent.userData = button;
				buttonComponent.registerEvent("click",$bind(this,this.onFooterButtonClick));
				this.addFooterComponent(buttonComponent);
			}
			this._buttonsCreated = true;
		}
	}
	,get_closable: function() {
		return !this.dialogCloseButton.get_hidden();
	}
	,set_closable: function(value) {
		if(value == true) {
			this.dialogCloseButton.show();
		} else {
			this.dialogCloseButton.hide();
		}
		return value;
	}
	,validateDialog: function(button,fn) {
		fn(true);
	}
	,hide: function() {
		var _gthis = this;
		this.validateDialog(this.button,function(result) {
			if(result == true) {
				if(_gthis.modal && _gthis._overlay != null) {
					haxe_ui_core_Screen.get_instance().removeComponent(_gthis._overlay);
				}
				haxe_ui_core_Screen.get_instance().removeComponent(_gthis);
				var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed");
				event.button = _gthis.button;
				_gthis.dispatch(event);
			}
		});
	}
	,hideDialog: function(button) {
		this.button = button;
		this.hide();
	}
	,get_title: function() {
		return this.dialogTitleLabel.get_text();
	}
	,set_title: function(value) {
		this.dialogTitleLabel.set_text(value);
		return value;
	}
	,addComponent: function(child) {
		if(child.hasClass("dialog-container")) {
			return haxe_ui_containers_Box.prototype.addComponent.call(this,child);
		}
		return this.dialogContent.addComponent(child);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		this.dialogTitle.set_width(this.get_layout().get_innerWidth());
		if(this.get_autoWidth() == false) {
			this.dialogContent.set_width(this.get_layout().get_innerWidth());
		}
		return b;
	}
	,addFooterComponent: function(c) {
		this.dialogFooterContainer.show();
		this.dialogFooter.addComponent(c);
	}
	,centerDialogComponent: function(dialog) {
		dialog.syncComponentValidation();
		var x = haxe_ui_core_Screen.get_instance().get_width() / 2 - dialog.get_componentWidth() / 2;
		var y = haxe_ui_core_Screen.get_instance().get_height() / 2 - dialog.get_componentHeight() / 2;
		dialog.moveComponent(x,y);
	}
	,onFooterButtonClick: function(event) {
		this.hideDialog(event.target.userData);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_DialogBase();
	}
	,__class__: haxe_ui_backend_DialogBase
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_title:"set_title",get_title:"get_title",set_closable:"set_closable",get_closable:"get_closable"})
});
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
	}
	,postClone: function(event) {
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_backend_ImageSurface = function() {
};
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
haxe_ui_backend_ImageSurface.prototype = {
	__class__: haxe_ui_backend_ImageSurface
};
var haxe_ui_backend_ImageBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	haxe_ui_backend_ImageSurface.call(this);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageBase.prototype = $extend(haxe_ui_backend_ImageSurface.prototype,{
	parentComponent: null
	,aspectRatio: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,dispose: function() {
	}
	,validateData: function() {
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.borderRadius = "inherit";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	element: null
	,dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_containers_dialogs_Dialog = function() {
	haxe_ui_backend_DialogBase.call(this);
};
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = "haxe.ui.containers.dialogs.Dialog";
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_backend_DialogBase;
haxe_ui_containers_dialogs_Dialog.prototype = $extend(haxe_ui_backend_DialogBase.prototype,{
	__onDialogClosed: null
	,onDialogClosed: null
	,set_onDialogClosed: function(value) {
		if(this.__onDialogClosed != null) {
			this.unregisterEvent("dialogClosed",this.__onClick);
			this.__onDialogClosed = null;
		}
		this.registerEvent("dialogClosed",value);
		this.__onDialogClosed = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_DialogBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_DialogBase.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
	,__class__: haxe_ui_containers_dialogs_Dialog
	,__properties__: $extend(haxe_ui_backend_DialogBase.prototype.__properties__,{set_onDialogClosed:"set_onDialogClosed"})
});
var haxe_ui_backend_MessageBoxBase = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	hbox.set_styleString("spacing:10px;");
	this.addComponent(hbox);
	this.iconImage = new haxe_ui_components_Image();
	this.iconImage.set_id("iconImage");
	hbox.addComponent(this.iconImage);
	this.messageLabel = new haxe_ui_components_Label();
	this.messageLabel.set_id("messageLabel");
	this.messageLabel.set_percentWidth(100);
	hbox.addComponent(this.messageLabel);
};
$hxClasses["haxe.ui.backend.MessageBoxBase"] = haxe_ui_backend_MessageBoxBase;
haxe_ui_backend_MessageBoxBase.__name__ = "haxe.ui.backend.MessageBoxBase";
haxe_ui_backend_MessageBoxBase.__super__ = haxe_ui_containers_dialogs_Dialog;
haxe_ui_backend_MessageBoxBase.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	iconImage: null
	,messageLabel: null
	,get_message: function() {
		return this.messageLabel.get_text();
	}
	,set_message: function(value) {
		this.messageLabel.set_text(value);
		return value;
	}
	,get_type: function() {
		return this.iconImage.get_resource();
	}
	,set_type: function(value) {
		this.iconImage.set_resource(haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.toString(value));
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_MessageBoxBase();
	}
	,__class__: haxe_ui_backend_MessageBoxBase
	,__properties__: $extend(haxe_ui_containers_dialogs_Dialog.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_message:"set_message",get_message:"get_message"})
});
var haxe_ui_backend_PlatformBase = function() {
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,__class__: haxe_ui_backend_PlatformBase
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_ScreenBase = function() {
	this._focus = null;
	this._topLevelComponents = [];
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	_topLevelComponents: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		this._focus = value;
		return this._focus;
	}
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,dpi: null
	,get_dpi: function() {
		return 72;
	}
	,get_title: function() {
		return null;
	}
	,set_title: function(s) {
		return s;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,addComponent: function(component) {
	}
	,removeComponent: function(component) {
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,resizeComponent: function(c) {
		if(c.get_percentWidth() > 0) {
			c.set_width(this.get_width() * c.get_percentWidth() / 100);
		}
		if(c.get_percentHeight() > 0) {
			c.set_height(this.get_height() * c.get_percentHeight() / 100);
		}
	}
	,supportsEvent: function(type) {
		return false;
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_height:"get_height",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",set_options:"set_options",get_options:"get_options",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._hasListener = false;
	this._percentContainerHeightAdded = false;
	this._percentContainerWidthAdded = false;
	haxe_ui_backend_ScreenBase.call(this);
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		var cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		var cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		var c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,get_width: function() {
		var cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			var _g = 0;
			var _g1 = this._topLevelComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		return cx;
	}
	,get_height: function() {
		var cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			var _g = 0;
			var _g1 = this._topLevelComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		return cy;
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		this._topLevelComponents.push(component);
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
	}
	,_percentContainerWidthAdded: null
	,addPercentContainerWidth: function() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		var sheet = js_Boot.__cast(window.document.styleSheets[0] , CSSStyleSheet);
		sheet.insertRule("#haxeui-container-parent {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
	}
	,_percentContainerHeightAdded: null
	,addPercentContainerHeight: function() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		var sheet = js_Boot.__cast(window.document.styleSheets[0] , CSSStyleSheet);
		sheet.insertRule("#haxeui-container-parent {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
	}
	,removeComponent: function(component) {
		HxOverrides.remove(this._topLevelComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,container: null
	,get_container: function() {
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		return c;
	}
	,_hasListener: null
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.addEventListener("resize",function(e) {
			var _g = 0;
			var _g1 = _gthis._topLevelComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				_gthis.resizeComponent(c);
			}
		});
	}
	,supportsEvent: function(type) {
		var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
		return (__map_reserved[type] != null ? _this.getReserved(type) : _this.h[type]) != null;
	}
	,mapEvent: function(type,listener) {
		var _gthis = this;
		var container = window.document.body;
		switch(type) {
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var tmp;
			if(type == "mousemove") {
				var _this = this._mapping;
				tmp = (__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) == false;
			} else {
				tmp = false;
			}
			if(tmp && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == true) {
				var fn = null;
				fn = function(e) {
					var _this1 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					var fn1 = __map_reserved["mousemove"] != null ? _this1.getReserved("mousemove") : _this1.h["mousemove"];
					container.removeEventListener(fn1,fn);
					var _this2 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					if((__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type]) != null) {
						var _this3 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
						var fn2 = __map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type];
						container.removeEventListener(fn2,fn);
					}
					var _this4 = _gthis._mapping;
					if((__map_reserved[type] != null ? _this4.existsReserved(type) : _this4.h.hasOwnProperty(type)) == false) {
						var _this5 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
						if((__map_reserved[type] != null ? _this5.getReserved(type) : _this5.h[type]) != null) {
							var _this6 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
							var fn3 = __map_reserved[type] != null ? _this6.getReserved(type) : _this6.h[type];
							container.addEventListener(fn3,$bind(_gthis,_gthis.__onMouseEvent));
						}
						var _this7 = _gthis._mapping;
						if(__map_reserved[type] != null) {
							_this7.setReserved(type,listener);
						} else {
							_this7.h[type] = listener;
						}
						var _this8 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
						var fn4 = __map_reserved["mousemove"] != null ? _this8.getReserved("mousemove") : _this8.h["mousemove"];
						container.addEventListener(fn4,$bind(_gthis,_gthis.__onMouseEvent));
					}
				};
				var _this9 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				var tmp1 = __map_reserved["mousemove"] != null ? _this9.getReserved("mousemove") : _this9.h["mousemove"];
				container.addEventListener(tmp1,fn);
				var _this10 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this10.getReserved(type) : _this10.h[type]) != null) {
					var _this11 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					var tmp2 = __map_reserved[type] != null ? _this11.getReserved(type) : _this11.h[type];
					container.addEventListener(tmp2,fn);
				}
				return;
			}
			var _this12 = this._mapping;
			if((__map_reserved[type] != null ? _this12.existsReserved(type) : _this12.h.hasOwnProperty(type)) == false) {
				var _this13 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this13.getReserved(type) : _this13.h[type]) != null) {
					var _this14 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					var tmp3 = __map_reserved[type] != null ? _this14.getReserved(type) : _this14.h[type];
					container.addEventListener(tmp3,$bind(this,this.__onMouseEvent));
				}
				var _this15 = this._mapping;
				if(__map_reserved[type] != null) {
					_this15.setReserved(type,listener);
				} else {
					_this15.h[type] = listener;
				}
				var _this16 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				var tmp4 = __map_reserved[type] != null ? _this16.getReserved(type) : _this16.h[type];
				container.addEventListener(tmp4,$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			var _this17 = this._mapping;
			if((__map_reserved[type] != null ? _this17.existsReserved(type) : _this17.h.hasOwnProperty(type)) == false) {
				var _this18 = this._mapping;
				if(__map_reserved[type] != null) {
					_this18.setReserved(type,listener);
				} else {
					_this18.h[type] = listener;
				}
				var _this19 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				var tmp5 = __map_reserved[type] != null ? _this19.getReserved(type) : _this19.h[type];
				container.addEventListener(tmp5,$bind(this,this.__onKeyEvent));
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			this._mapping.remove(type);
			var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			container.removeEventListener(__map_reserved[type] != null ? _this.getReserved(type) : _this.h[type],$bind(this,this.__onMouseEvent));
			var _this1 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
			if((__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type]) != null) {
				var _this2 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				container.removeEventListener(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			this._mapping.remove(type);
			var _this3 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			container.removeEventListener(__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type],$bind(this,this.__onKeyEvent));
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._mapping;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( e ) {
					haxe_CallStack.lastException = e;
					var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
	}
	,__onKeyEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			var _this1 = this._mapping;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{get_container:"get_container"})
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,focus: function() {
	}
	,blur: function() {
	}
	,validateData: function() {
	}
	,validateStyle: function() {
		return false;
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,measureText: function() {
	}
	,__class__: haxe_ui_backend_TextBase
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._fixedHeight = false;
	this._fixedWidth = false;
	haxe_ui_backend_TextBase.call(this);
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	element: null
	,validateData: function() {
		var html = this.normalizeText(this._text);
		this.element.textContent = html;
	}
	,_rawFontName: null
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "normal";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "nowrap") {
			this.element.style.whiteSpace = "nowrap";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
		if(measureTextRequired == true) {
			this._fixedWidth = false;
			this._fixedHeight = false;
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,_fixedWidth: null
	,_fixedHeight: null
	,validateDisplay: function() {
		var style = this.element.style;
		if(this._width > 0) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
	}
	,measureText: function() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		if(this._fixedWidth == false) {
			this._textWidth = div.clientWidth;
		}
		if(this._fixedHeight == false) {
			var fontSize = parseFloat(StringTools.replace(div.style.fontSize,"px",""));
			var offset = 0;
			if(fontSize > 14) {
				offset = Math.ceil(fontSize / 14);
			}
			this._textHeight = div.clientHeight - offset;
		}
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.wordBreak = this.element.style.wordBreak;
		div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		div.textContent = this.normalizeText(t);
	}
	,normalizeText: function(text) {
		var html = haxe_ui_backend_html5_HtmlUtils.escape(text);
		html = StringTools.replace(html,"\\n","\n");
		html = StringTools.replace(html,"\r\n","<br/>");
		html = StringTools.replace(html,"\r","<br/>");
		html = StringTools.replace(html,"\n","<br/>");
		return html;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
});
var haxe_ui_backend_TextInputImpl = function() {
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	focus: function() {
		this.element.focus({preventScroll: true});
	}
	,blur: function() {
		this.element.blur();
	}
	,onChangeEvent: function(e) {
		var newText = null;
		if(((this.parentComponent) instanceof haxe_ui_components_TextArea)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		if(((this.element) instanceof HTMLTextAreaElement)) {
			this._textWidth = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollWidth;
			this._textHeight = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollHeight;
		} else {
			haxe_ui_backend_TextDisplayImpl.prototype.measureText.call(this);
		}
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,createElement: function() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "nowrap";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.style.marginLeft = "-1px";
			el.style.marginTop = "-1px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "normal";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.width = "";
		div.innerHTML = this.normalizeText(t);
	}
	,normalizeText: function(text) {
		return StringTools.replace(text,"\\n","\n");
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.prototype = {
	_timer: null
	,stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item) {
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item1 = this._displayQueue[i];
			item1.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.namedChild = function(el,child,index) {
	if(index == null) {
		index = 0;
	}
	if(child != null) {
		var list = el.getElementsByTagName(child);
		if(list.length == 0) {
			return null;
		}
		el = list.item(index);
	}
	return el;
};
haxe_ui_backend_html5_HtmlUtils.onValidationStop = function(e) {
	var tmp = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER != null;
};
haxe_ui_backend_html5_HtmlUtils.createDivHelper = function() {
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = window.document.createElement("div");
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.position = "absolute";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.top = "-99999px";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.left = "-99999px";
		window.document.body.appendChild(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.createDivHelper();
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.innerHTML = text;
	if(fontSize > 0) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "" + fontSize + "px";
	}
	if(fontName != null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = fontName;
	}
	return new haxe_ui_geom_Size(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientWidth + addWidth,haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(style.borderLeftSize > 0) {
			css.borderWidth = "" + style.borderLeftSize + "px";
			css.borderStyle = "solid";
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && style.borderTopSize > 0) {
			css.borderTopWidth = "" + style.borderTopSize + "px";
			css.borderTopStyle = "solid";
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && style.borderLeftSize > 0) {
			css.borderLeftWidth = "" + style.borderLeftSize + "px";
			css.borderLeftStyle = "solid";
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && style.borderBottomSize > 0) {
			css.borderBottomWidth = "" + style.borderBottomSize + "px";
			css.borderBottomStyle = "solid";
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && style.borderRightSize > 0) {
			css.borderRightWidth = "" + style.borderRightSize + "px";
			css.borderRightStyle = "solid";
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		if(style.borderOpacity == null) {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
		}
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	var background = [];
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					var tmp = "linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")";
					background.push(tmp);
				} else if(gradientStyle == "horizontal") {
					var tmp1 = "linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")";
					background.push(tmp1);
				}
			} else if(gradientStyle == "vertical") {
				var tmp2 = "linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")";
				background.push(tmp2);
			} else if(gradientStyle == "horizontal") {
				var tmp3 = "linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")";
				background.push(tmp3);
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && style.borderRadius > 0) {
		css.borderRadius = "" + style.borderRadius + "px";
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		if(component.element.nodeName == "BUTTON") {
			css.border = "none";
		}
		haxe_ui_Toolkit.get_assets().getImage(style.backgroundImage,function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			var slice = null;
			if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
				slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					background.push("url(" + imageInfo.data.src + ")");
					if(style.backgroundImageRepeat == null) {
						css.backgroundRepeat = "no-repeat";
					} else if(style.backgroundImageRepeat == "repeat") {
						css.backgroundRepeat = "repeat";
					} else if(style.backgroundImageRepeat == "stretch") {
						css.backgroundRepeat = "no-repeat";
						css.backgroundSize = "" + ("" + width + "px") + " " + ("" + height + "px");
					}
				} else {
					var canvas = window.document.createElement("canvas");
					canvas.width = width;
					canvas.height = height;
					var ctx = canvas.getContext("2d",null);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
					var data = canvas.toDataURL();
					background.push("url(" + data + ")");
				}
			} else {
				var rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas1 = window.document.createElement("canvas");
				canvas1.width = width;
				canvas1.height = height;
				var ctx1 = canvas1.getContext("2d",null);
				ctx1.imageSmoothingEnabled = false;
				var _g = 0;
				var _g1 = srcRects.length;
				while(_g < _g1) {
					var i = _g++;
					var srcRect = new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx1,imageInfo.data,srcRect,dstRect);
				}
				var data1 = canvas1.toDataURL();
				background.push("url(" + data1 + ")");
			}
			background.reverse();
			css.background = background.join(",");
		});
	} else {
		css.background = background[0];
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	ctx.drawImage(img,srcRect.left,srcRect.top,srcRect.width,srcRect.height,dstRect.left,dstRect.top,dstRect.width,dstRect.height);
};
var haxe_ui_backend_html5_UserAgent = function() {
	this._unknown = false;
	this._msie = false;
	this._firefox = false;
	this._safari = false;
	this._chrome = false;
	this._opera = false;
	var ua = window.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	_opera: null
	,opera: null
	,get_opera: function() {
		return this._opera;
	}
	,_chrome: null
	,chrome: null
	,get_chrome: function() {
		return this._chrome;
	}
	,_safari: null
	,safari: null
	,get_safari: function() {
		return this._safari;
	}
	,_firefox: null
	,firefox: null
	,get_firefox: function() {
		return this._firefox;
	}
	,_msie: null
	,msie: null
	,get_msie: function() {
		return this._msie;
	}
	,_unknown: null
	,unknown: null
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_native_NativeElement = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.backend.html5.native.NativeElement"] = haxe_ui_backend_html5_native_NativeElement;
haxe_ui_backend_html5_native_NativeElement.__name__ = "haxe.ui.backend.html5.native.NativeElement";
haxe_ui_backend_html5_native_NativeElement.prototype = {
	_component: null
	,config: null
	,create: function() {
		var nodeType = this.getConfigValue("nodeType","div");
		var el = window.document.createElement(nodeType);
		el.style.boxSizing = "border-box";
		var type = this.getConfigValue("type");
		if(type != null) {
			el.setAttribute("type",type);
		}
		var orient = this.getConfigValue("orient");
		if(orient != null) {
			el.setAttribute("orient",orient);
		}
		var style = this.getConfigValue("style");
		if(style != null) {
			var styles = style.split(";");
			var _g = 0;
			while(_g < styles.length) {
				var s = styles[_g];
				++_g;
				s = StringTools.trim(s);
				if(s.length == 0) {
					continue;
				}
				var parts = s.split(":");
				if(StringTools.startsWith(StringTools.trim(parts[0]),"-webkit") && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == false) {
					continue;
				}
				el.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
			}
		}
		return el;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,__class__: haxe_ui_backend_html5_native_NativeElement
};
var haxe_ui_backend_html5_native_LabeledInputElement = function(component) {
	haxe_ui_backend_html5_native_NativeElement.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.LabeledInputElement"] = haxe_ui_backend_html5_native_LabeledInputElement;
haxe_ui_backend_html5_native_LabeledInputElement.__name__ = "haxe.ui.backend.html5.native.LabeledInputElement";
haxe_ui_backend_html5_native_LabeledInputElement.__super__ = haxe_ui_backend_html5_native_NativeElement;
haxe_ui_backend_html5_native_LabeledInputElement.prototype = $extend(haxe_ui_backend_html5_native_NativeElement.prototype,{
	create: function() {
		var type = this.getConfigValue("type","button");
		var input = window.document.createElement("input");
		input.style.display = "inline";
		input.style.verticalAlign = "middle";
		input.style.margin = "0";
		input.style.marginRight = "2px";
		input.type = type;
		var label = window.document.createElement("label");
		label.appendChild(input);
		return label;
	}
	,__class__: haxe_ui_backend_html5_native_LabeledInputElement
});
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return null;
	}
	,run: function(param) {
		return null;
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data");
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_backend_html5_native_behaviours_ElementAttribute = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementAttribute"] = haxe_ui_backend_html5_native_behaviours_ElementAttribute;
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_html5_native_behaviours_ElementAttribute.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var el = this._component.element;
		var name = this.getConfigValue("name");
		if(name == null) {
			return;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		if(this.getConfigValueBool("remove",false) == true) {
			if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
				el.removeAttribute(name);
			}
			return;
		}
		el.setAttribute(name,haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		var removeIfNegative = this.getConfigValueBool("removeIfNegative",false);
		if((this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(this._value) == true && haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) && removeIfNegative == true) {
			el.removeAttribute(name);
			return;
		}
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementAttribute
});
var haxe_ui_backend_html5_native_behaviours_ElementDisabled = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementDisabled"] = haxe_ui_backend_html5_native_behaviours_ElementDisabled;
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementDisabled.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			el.setAttribute("disabled","true");
			var _g = 0;
			var _g1 = el.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.setAttribute("disabled","true");
			}
		} else {
			el.removeAttribute("disabled");
			var _g2 = 0;
			var _g11 = el.children;
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				child1.removeAttribute("disabled");
			}
		}
	}
	,get: function() {
		var el = this._component.element;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(el.getAttribute("disabled") == "true");
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementDisabled
});
var haxe_ui_backend_html5_native_behaviours_ElementImage = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementImage"] = haxe_ui_backend_html5_native_behaviours_ElementImage;
haxe_ui_backend_html5_native_behaviours_ElementImage.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementImage";
haxe_ui_backend_html5_native_behaviours_ElementImage.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_html5_native_behaviours_ElementImage.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var _gthis = this;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			return;
		}
		var el = this._component.element;
		var img = null;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		} else {
			img = window.document.createElement("img");
			img.style.display = "inline";
			img.style.verticalAlign = "middle";
			img.style.marginTop = "-1px";
			el.appendChild(img);
		}
		var imageLoader = new haxe_ui_util_ImageLoader(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		imageLoader.load(function(imageInfo) {
			if(imageInfo != null) {
				img.src = imageInfo.data.src;
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		});
		haxe_ui_ToolkitAssets.get_instance().getImage(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value),function(image) {
			var tmp = image != null && image.data != null;
		});
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementImage
});
var haxe_ui_backend_html5_native_behaviours_ElementPlaceholder = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementPlaceholder"] = haxe_ui_backend_html5_native_behaviours_ElementPlaceholder;
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementPlaceholder";
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).placeholder = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
		} else if(((el) instanceof HTMLInputElement)) {
			(js_Boot.__cast(el , HTMLInputElement)).placeholder = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
		}
	}
	,get: function() {
		var el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(el , HTMLTextAreaElement)).placeholder);
		} else if(((el) instanceof HTMLInputElement)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(el , HTMLInputElement)).placeholder);
		} else {
			return null;
		}
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementPlaceholder
});
var haxe_ui_backend_html5_native_behaviours_ElementProperty = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementProperty"] = haxe_ui_backend_html5_native_behaviours_ElementProperty;
haxe_ui_backend_html5_native_behaviours_ElementProperty.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
haxe_ui_backend_html5_native_behaviours_ElementProperty.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementProperty.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		var name = this.getConfigValue("name");
		if(name == null) {
			return;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		Reflect.setProperty(el,name,haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,get: function() {
		var el = this._component.element;
		var name = this.getConfigValue("name");
		if(name == null) {
			return null;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(Reflect.getProperty(el,name));
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementProperty
});
var haxe_ui_backend_html5_native_behaviours_ElementScrollLeft = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollLeft"] = haxe_ui_backend_html5_native_behaviours_ElementScrollLeft;
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementScrollLeft";
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		this._component.element.scrollLeft = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._component.element.scrollLeft);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollLeft
});
var haxe_ui_backend_html5_native_behaviours_ElementScrollTop = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollTop"] = haxe_ui_backend_html5_native_behaviours_ElementScrollTop;
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementScrollTop";
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		this._component.element.scrollTop = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._component.element.scrollTop);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollTop
});
var haxe_ui_backend_html5_native_behaviours_ElementText = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementText"] = haxe_ui_backend_html5_native_behaviours_ElementText;
haxe_ui_backend_html5_native_behaviours_ElementText.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementText";
haxe_ui_backend_html5_native_behaviours_ElementText.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementText.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		el.textContent = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
	}
	,get: function() {
		var el = this._component.element;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(el.textContent);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementText
});
var haxe_ui_backend_html5_native_behaviours_ElementValue = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementValue"] = haxe_ui_backend_html5_native_behaviours_ElementValue;
haxe_ui_backend_html5_native_behaviours_ElementValue.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementValue";
haxe_ui_backend_html5_native_behaviours_ElementValue.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_html5_native_behaviours_ElementValue.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).value = StringTools.replace(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value),"\\n","\n");
		} else {
			el.setAttribute("value",haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		}
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementValue
});
var haxe_ui_backend_html5_native_behaviours_RadioGroup = function(component) {
	haxe_ui_backend_html5_native_behaviours_ElementAttribute.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.RadioGroup"] = haxe_ui_backend_html5_native_behaviours_RadioGroup;
haxe_ui_backend_html5_native_behaviours_RadioGroup.__name__ = "haxe.ui.backend.html5.native.behaviours.RadioGroup";
haxe_ui_backend_html5_native_behaviours_RadioGroup.__super__ = haxe_ui_backend_html5_native_behaviours_ElementAttribute;
haxe_ui_backend_html5_native_behaviours_RadioGroup.prototype = $extend(haxe_ui_backend_html5_native_behaviours_ElementAttribute.prototype,{
	validateData: function() {
		haxe_ui_backend_html5_native_behaviours_ElementAttribute.prototype.validateData.call(this);
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value),this._component);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_RadioGroup
});
var haxe_ui_backend_html5_native_behaviours_SelectDataSource = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectDataSource"] = haxe_ui_backend_html5_native_behaviours_SelectDataSource;
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__name__ = "haxe.ui.backend.html5.native.behaviours.SelectDataSource";
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_SelectDataSource.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	set: function(value) {
		var ds = haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(value);
		var el = this._component.element;
		while(el.childElementCount > 0) el.removeChild(el.children[0]);
		if(ds != null) {
			var _g = 0;
			var _g1 = ds.get_size();
			while(_g < _g1) {
				var n = _g++;
				var item = ds.get(n);
				if(item.value != null) {
					var option = window.document.createElement("option");
					option.text = item.value;
					el.appendChild(option);
				}
			}
		}
		this._component.set("dataSource",ds);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SelectDataSource
});
var haxe_ui_backend_html5_native_behaviours_SelectedItem = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectedItem"] = haxe_ui_backend_html5_native_behaviours_SelectedItem;
haxe_ui_backend_html5_native_behaviours_SelectedItem.__name__ = "haxe.ui.backend.html5.native.behaviours.SelectedItem";
haxe_ui_backend_html5_native_behaviours_SelectedItem.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_backend_html5_native_behaviours_SelectedItem.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var data = null;
		if(this._component.element.nodeName == "SELECT") {
			if(this._component.has("dataSource") == true) {
				var selectElement = js_Boot.__cast(this._component.element , HTMLSelectElement);
				var ds = this._component.get("dataSource");
				data = ds.get(selectElement.selectedIndex);
			}
		}
		return data;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SelectedItem
});
var haxe_ui_backend_html5_native_behaviours_SpanText = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SpanText"] = haxe_ui_backend_html5_native_behaviours_SpanText;
haxe_ui_backend_html5_native_behaviours_SpanText.__name__ = "haxe.ui.backend.html5.native.behaviours.SpanText";
haxe_ui_backend_html5_native_behaviours_SpanText.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_html5_native_behaviours_SpanText.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var el = this._component.element;
		var span = this.getSpan(el);
		var checkbox = this.getInput(el,"checkbox");
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(span);
			if(checkbox != null) {
				checkbox.style.marginTop = "-15px";
			}
			return;
		}
		if(span == null) {
			span = window.document.createElement("span");
			span.style.display = "inline-block";
			span.style.verticalAlign = "middle";
			var style = this.getConfigValue("style");
			if(style != null) {
				var styles = style.split(";");
				var _g = 0;
				while(_g < styles.length) {
					var s = styles[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length == 0) {
						continue;
					}
					var parts = s.split(":");
					span.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
				}
			}
			if(checkbox != null) {
				checkbox.style.marginTop = "0";
			}
			el.appendChild(span);
		}
		var invalidate = false;
		if(this._component.get_autoWidth() == true) {
			this._component.element.style.width = null;
			invalidate = true;
		}
		if(this._component.get_autoHeight() == true) {
			this._component.element.style.height = null;
			invalidate = true;
		}
		span.textContent = haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value);
		if(invalidate == true) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	,getSpan: function(el) {
		var span = null;
		var list = el.getElementsByTagName("span");
		if(list.length != 0) {
			span = list.item(0);
		}
		return span;
	}
	,getInput: function(el,type) {
		var input = null;
		var list = el.getElementsByTagName("input");
		if(list.length != 0) {
			var _g = 0;
			var _g1 = list.length;
			while(_g < _g1) {
				var n = _g++;
				var child = list.item(n);
				if(((child) instanceof HTMLInputElement) && (js_Boot.__cast(child , HTMLInputElement)).type == type) {
					input = child;
					break;
				}
			}
		}
		return input;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SpanText
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_backend_html5_native_builders_ScrollViewBuilder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.builders.ScrollViewBuilder"] = haxe_ui_backend_html5_native_builders_ScrollViewBuilder;
haxe_ui_backend_html5_native_builders_ScrollViewBuilder.__name__ = "haxe.ui.backend.html5.native.builders.ScrollViewBuilder";
haxe_ui_backend_html5_native_builders_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_backend_html5_native_builders_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_contents: null
	,create: function() {
		this.createContentContainer("vertical");
	}
	,addComponent: function(child) {
		if(child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child.hasClass("scrollview-contents") == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(child.hasClass("scrollview-contents") == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
		}
	}
	,__class__: haxe_ui_backend_html5_native_builders_ScrollViewBuilder
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_backend_html5_native_layouts_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.layouts.ButtonLayout"] = haxe_ui_backend_html5_native_layouts_ButtonLayout;
haxe_ui_backend_html5_native_layouts_ButtonLayout.__name__ = "haxe.ui.backend.html5.native.layouts.ButtonLayout";
haxe_ui_backend_html5_native_layouts_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_backend_html5_native_layouts_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	calcAutoSize: function(exclusions) {
		var textSize = haxe_ui_backend_html5_HtmlUtils.measureText(this.get_component().get_text(),0,0,this.get_component().get_style().fontSize,this.get_component().get_style().fontName);
		var iconCX = this.getIconWidth();
		var iconCY = this.getIconHeight();
		var cx = textSize.width;
		var cy = textSize.height;
		var iconPosition = this.get_component().get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
			cy += iconCY + this.get_component().get_style().verticalSpacing;
		} else {
			cx += iconCX + this.get_component().get_style().horizontalSpacing;
			if(iconCY > cy) {
				cy = iconCY;
			}
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		size.width += this.get_paddingLeft() + this.get_paddingRight() + 6;
		size.height += this.get_paddingTop() + this.get_paddingBottom() + 2;
		return size;
	}
	,repositionChildren: function() {
		var el = this.get_component().element;
		if(el.childElementCount == 2) {
			var first = el.firstElementChild;
			var last = el.lastElementChild;
			var _g = this.get_component().get_style().iconPosition;
			if(_g == null) {
				if(((first) instanceof HTMLImageElement) == false) {
					haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
				}
			} else {
				switch(_g) {
				case "bottom":case "right":
					if(((last) instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				case "left":case "top":
					if(((first) instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				default:
				}
			}
			var img = this.getIcon();
			if(img != null) {
				var _g1 = this.get_component().get_style().iconPosition;
				if(_g1 == null) {
					var tmp = "" + this._component.get_style().horizontalSpacing + "px";
					img.style.marginRight = tmp;
				} else {
					switch(_g1) {
					case "bottom":
						var tmp1 = "" + this._component.get_style().verticalSpacing + "px";
						img.style.marginTop = tmp1;
						break;
					case "left":
						var tmp2 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginRight = tmp2;
						break;
					case "right":
						var tmp3 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginLeft = tmp3;
						break;
					case "top":
						var tmp4 = "" + this._component.get_style().verticalSpacing + "px";
						img.style.marginBottom = tmp4;
						break;
					default:
						var tmp5 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginRight = tmp5;
					}
				}
			}
			var text = this.getText();
			if(text != null) {
				var _g11 = this.get_component().get_style().iconPosition;
				if(_g11 == null) {
					text.style.display = "inline-block";
				} else {
					switch(_g11) {
					case "left":case "right":
						text.style.display = "inline-block";
						break;
					case "bottom":case "top":
						text.style.display = "block";
						break;
					default:
					}
				}
			}
		}
	}
	,getIconWidth: function() {
		var cx = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	,getIconHeight: function() {
		var cy = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	,getIcon: function() {
		var img = null;
		var el = this.get_component().element;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
	,getText: function() {
		var span = null;
		var el = this.get_component().element;
		var list = el.getElementsByTagName("span");
		if(list != null && list.length == 1) {
			span = list.item(0);
		}
		return span;
	}
	,__class__: haxe_ui_backend_html5_native_layouts_ButtonLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_backend_html5_native_size_ButtonSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ButtonSize"] = haxe_ui_backend_html5_native_size_ButtonSize;
haxe_ui_backend_html5_native_size_ButtonSize.__name__ = "haxe.ui.backend.html5.native.size.ButtonSize";
haxe_ui_backend_html5_native_size_ButtonSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ButtonSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		var iconCX = this.getIconWidth();
		var cx = size.width;
		var iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
		} else {
			cx += iconCX + this.component.get_style().horizontalSpacing;
		}
		return cx + this.getInt("incrementWidthBy");
	}
	,get_height: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		var iconCY = this.getIconHeight();
		var cy = size.height;
		var iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			cy += iconCY + this.component.get_style().verticalSpacing;
		} else if(iconCY > cy) {
			cy = iconCY;
		}
		return cy + this.getInt("incrementHeightBy");
	}
	,getIconWidth: function() {
		var cx = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	,getIconHeight: function() {
		var cy = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	,getIcon: function() {
		var img = null;
		var el = this.component.element;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
	,__class__: haxe_ui_backend_html5_native_size_ButtonSize
});
var haxe_ui_backend_html5_native_size_ComponentSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ComponentSize"] = haxe_ui_backend_html5_native_size_ComponentSize;
haxe_ui_backend_html5_native_size_ComponentSize.__name__ = "haxe.ui.backend.html5.native.size.ComponentSize";
haxe_ui_backend_html5_native_size_ComponentSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ComponentSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var w = this.component.get_componentWidth();
		if(w == null || w <= 0) {
			w = this.getInt("defaultWidth");
		}
		return w;
	}
	,get_height: function() {
		var h = this.component.get_componentHeight();
		if(h == null || h <= 0) {
			h = this.getInt("defaultHeight");
		}
		return h;
	}
	,__class__: haxe_ui_backend_html5_native_size_ComponentSize
});
var haxe_ui_backend_html5_native_size_ElementSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ElementSize"] = haxe_ui_backend_html5_native_size_ElementSize;
haxe_ui_backend_html5_native_size_ElementSize.__name__ = "haxe.ui.backend.html5.native.size.ElementSize";
haxe_ui_backend_html5_native_size_ElementSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ElementSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var w = this.component.element.offsetWidth;
		if(((this.component) instanceof haxe_ui_components_VerticalSlider)) {
			if(w == this.component.element.offsetHeight) {
				w = 21;
			}
		} else if(((this.component) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				w = this.component.element.offsetHeight;
			}
		}
		return w;
	}
	,get_height: function() {
		var h = this.component.element.offsetHeight;
		if(((this.component) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				h = this.component.element.offsetWidth;
			}
		}
		return h;
	}
	,__class__: haxe_ui_backend_html5_native_size_ElementSize
});
var haxe_ui_backend_html5_native_size_FontHeight = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.FontHeight"] = haxe_ui_backend_html5_native_size_FontHeight;
haxe_ui_backend_html5_native_size_FontHeight.__name__ = "haxe.ui.backend.html5.native.size.FontHeight";
haxe_ui_backend_html5_native_size_FontHeight.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_FontHeight.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		return this.component.get_width();
	}
	,get_height: function() {
		return haxe_ui_backend_html5_HtmlUtils.measureText("|").height + this.getInt("incrementBy");
	}
	,__class__: haxe_ui_backend_html5_native_size_FontHeight
});
var haxe_ui_backend_html5_native_size_TextSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.TextSize"] = haxe_ui_backend_html5_native_size_TextSize;
haxe_ui_backend_html5_native_size_TextSize.__name__ = "haxe.ui.backend.html5.native.size.TextSize";
haxe_ui_backend_html5_native_size_TextSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_TextSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		return size.width + this.getInt("incrementWidthBy");
	}
	,get_height: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		return size.height + this.getInt("incrementHeightBy");
	}
	,__class__: haxe_ui_backend_html5_native_size_TextSize
});
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g = 0;
	var _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g < _g1) {
		var ix = _g++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		var _this = this._registry;
		if(__map_reserved[id] != null) {
			_this.setReserved(id,info);
		} else {
			_this.h[id] = info;
		}
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,isRegistered: function(id) {
		var _this = this._registry;
		if(__map_reserved[id] != null) {
			return _this.existsReserved(id);
		} else {
			return _this.h.hasOwnProperty(id);
		}
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var id = this._registry.keys();
		while(id.hasNext()) {
			var id1 = id.next();
			ids.push(id1);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id2 = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id2 + "]");
			if(nativeProps != null && (__map_reserved["class"] != null ? nativeProps.existsReserved("class") : nativeProps.h.hasOwnProperty("class"))) {
				var _this = this._registry;
				var registered = __map_reserved[id2] != null ? _this.getReserved(id2) : _this.h[id2];
				var name = __map_reserved["class"] != null ? nativeProps.getReserved("class") : nativeProps.h["class"];
				var info = { id : id2, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				var _this1 = this._registry;
				if(__map_reserved[id2] != null) {
					_this1.setReserved(id2,info);
				} else {
					_this1.h[id2] = info;
				}
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var _this = this._instances;
			var b = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(((b) instanceof haxe_ui_behaviours_DataBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_DataBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,get_updateOrder: function() {
		return this._updateOrder;
	}
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var key = this._instances.keys();
			while(key.hasNext()) {
				var key1 = key.next();
				if(this._actualUpdateOrder.indexOf(key1) == -1) {
					this._actualUpdateOrder.push(key1);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var _this = this._instances;
			var b = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var _this = this._instances;
		var b = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(b == null && create == true) {
			var _this1 = this._registry;
			var info = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					var _this2 = this._instances;
					if(__map_reserved[id] != null) {
						_this2.setReserved(id,b);
					} else {
						_this2.h[id] = b;
					}
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw new js__$Boot_HaxeError("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var registeredKey = this._registry.keys();
		while(registeredKey.hasNext()) {
			var registeredKey1 = registeredKey.next();
			var _this = this._registry;
			var v = (__map_reserved[registeredKey1] != null ? _this.getReserved(registeredKey1) : _this.h[registeredKey1]).defaultValue;
			var _this1 = this._instances;
			var instance = __map_reserved[registeredKey1] != null ? _this1.getReserved(registeredKey1) : _this1.h[registeredKey1];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				var _this2 = this._cache;
				if(__map_reserved[registeredKey1] != null) {
					_this2.setReserved(registeredKey1,v);
				} else {
					_this2.h[registeredKey1] = v;
				}
			}
		}
	}
	,detatch: function() {
		var _this = this._instances;
		var b = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(b.hasNext()) {
			var b1 = b.next();
			b1.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var _this = this._cache;
			var v = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		b.set(value);
		var _this = this._registry;
		var info = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		info.isSet = true;
		this.unlock();
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			b._component.dispatch(event);
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var _this = this._registry;
			var info = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var key = this._registry.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			if(order.indexOf(key1) == -1) {
				order.push(key1);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key2 = order[_g];
			++_g;
			var _this = this._registry;
			var r = __map_reserved[key2] != null ? _this.getReserved(key2) : _this.h[key2];
			if(r.defaultValue != null) {
				this.set(key2,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder",get_updateOrder:"get_updateOrder"}
};
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_behaviours_LayoutBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_LayoutBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this.get())) {
			return;
		}
		this._value = value;
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_behaviours_LayoutBehaviour
});
var haxe_ui_binding_PropertyInfo = function() {
	this.objects = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.binding.PropertyInfo"] = haxe_ui_binding_PropertyInfo;
haxe_ui_binding_PropertyInfo.__name__ = "haxe.ui.binding.PropertyInfo";
haxe_ui_binding_PropertyInfo.prototype = {
	name: null
	,script: null
	,objects: null
	,addObject: function(objectId,objectProp) {
		var _this = this.objects;
		var array = __map_reserved[objectId] != null ? _this.getReserved(objectId) : _this.h[objectId];
		if(array == null) {
			array = [];
			var _this1 = this.objects;
			if(__map_reserved[objectId] != null) {
				_this1.setReserved(objectId,array);
			} else {
				_this1.h[objectId] = array;
			}
		}
		if(array.indexOf(objectProp) == -1) {
			array.push(objectProp);
		}
	}
	,__class__: haxe_ui_binding_PropertyInfo
};
var haxe_ui_binding_TargetInfo = function() {
	this.props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.binding.TargetInfo"] = haxe_ui_binding_TargetInfo;
haxe_ui_binding_TargetInfo.__name__ = "haxe.ui.binding.TargetInfo";
haxe_ui_binding_TargetInfo.prototype = {
	props: null
	,addBinding: function(sourceProp,target,targetProp) {
		var _this = this.props;
		var map = __map_reserved[sourceProp] != null ? _this.getReserved(sourceProp) : _this.h[sourceProp];
		if(map == null) {
			map = new haxe_ds_ObjectMap();
			var _this1 = this.props;
			if(__map_reserved[sourceProp] != null) {
				_this1.setReserved(sourceProp,map);
			} else {
				_this1.h[sourceProp] = map;
			}
		}
		var array = map.h[target.__id__];
		if(array == null) {
			array = [];
			map.set(target,array);
		}
		array.push(targetProp);
	}
	,__class__: haxe_ui_binding_TargetInfo
};
var haxe_ui_binding_BindingInfo = function() {
	this.props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.binding.BindingInfo"] = haxe_ui_binding_BindingInfo;
haxe_ui_binding_BindingInfo.__name__ = "haxe.ui.binding.BindingInfo";
haxe_ui_binding_BindingInfo.prototype = {
	props: null
	,addProp: function(name,script) {
		var _this = this.props;
		var p = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(p == null) {
			p = new haxe_ui_binding_PropertyInfo();
			p.name = name;
			p.script = script;
			var _this1 = this.props;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,p);
			} else {
				_this1.h[name] = p;
			}
		}
		return p;
	}
	,__class__: haxe_ui_binding_BindingInfo
};
var haxe_ui_binding_BindingManager = function() {
	this.interp = new haxe_ui_scripting_ScriptInterp();
};
$hxClasses["haxe.ui.binding.BindingManager"] = haxe_ui_binding_BindingManager;
haxe_ui_binding_BindingManager.__name__ = "haxe.ui.binding.BindingManager";
haxe_ui_binding_BindingManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_binding_BindingManager.get_instance = function() {
	if(haxe_ui_binding_BindingManager._instance == null) {
		haxe_ui_binding_BindingManager._instance = new haxe_ui_binding_BindingManager();
	}
	return haxe_ui_binding_BindingManager._instance;
};
haxe_ui_binding_BindingManager.prototype = {
	add: function(c,prop,script) {
		var n1 = script.indexOf("${");
		while(n1 != -1) {
			var n2 = script.indexOf("}",n1);
			var scriptPart = HxOverrides.substr(script,n1 + 2,n2 - n1 - 2);
			var parser = new hscript_Parser();
			var expr = parser.parseString(scriptPart);
			var info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
			if(info == null) {
				info = new haxe_ui_binding_BindingInfo();
				haxe_ui_binding_BindingManager.bindingInfo.set(c,info);
			}
			var propInfo = info.addProp(prop,script);
			this.extractFields(expr,propInfo);
			var objectId = propInfo.objects.keys();
			while(objectId.hasNext()) {
				var objectId1 = objectId.next();
				var _g = 0;
				var _this = propInfo.objects;
				var _g1 = __map_reserved[objectId1] != null ? _this.getReserved(objectId1) : _this.h[objectId1];
				while(_g < _g1.length) {
					var fieldId = _g1[_g];
					++_g;
					var _this1 = haxe_ui_binding_BindingManager.targets;
					var targetInfo = __map_reserved[objectId1] != null ? _this1.getReserved(objectId1) : _this1.h[objectId1];
					if(targetInfo == null) {
						targetInfo = new haxe_ui_binding_TargetInfo();
						var _this2 = haxe_ui_binding_BindingManager.targets;
						if(__map_reserved[objectId1] != null) {
							_this2.setReserved(objectId1,targetInfo);
						} else {
							_this2.h[objectId1] = targetInfo;
						}
					}
					targetInfo.addBinding(fieldId,c,propInfo);
				}
			}
			this.handleProp(c,propInfo);
			n1 = script.indexOf("${",n2);
		}
	}
	,componentPropChanged: function(c,prop) {
		if(c == null || c.get_id() == null) {
			return;
		}
		var this1 = haxe_ui_binding_BindingManager.targets;
		var key = c.get_id();
		var _this = this1;
		var targetInfo = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(targetInfo == null) {
			return;
		}
		var _this1 = targetInfo.props;
		var map = __map_reserved[prop] != null ? _this1.getReserved(prop) : _this1.h[prop];
		if(map == null) {
			return;
		}
		var t = map.keys();
		while(t.hasNext()) {
			var t1 = t.next();
			var array = map.h[t1.__id__];
			var _g = 0;
			while(_g < array.length) {
				var prop1 = array[_g];
				++_g;
				this.handleProp(t1,prop1);
			}
		}
	}
	,handleProp: function(t,prop) {
		var result = this.interpolate(prop.script,prop,t);
		var currentType = Type.typeof(Reflect.getProperty(t,prop.name));
		if(currentType == ValueType.TFloat) {
			result = parseFloat(Std.string(result));
		} else if(currentType == ValueType.TInt) {
			result = Std.parseInt(Std.string(result));
		} else if(currentType == ValueType.TBool) {
			result = Std.string(result) == "true";
		}
		Reflect.setProperty(t,prop.name,result);
	}
	,interpolate: function(s,prop,t) {
		var copy = s;
		var n1 = copy.indexOf("${");
		while(n1 != -1) {
			var n2 = copy.indexOf("}",n1);
			var before = HxOverrides.substr(copy,0,n1);
			var after = HxOverrides.substr(copy,n2 + 1,copy.length);
			var script = HxOverrides.substr(copy,n1 + 2,n2 - n1 - 2);
			var result = this.exec(script,prop,t);
			copy = before + result + after;
			n1 = copy.indexOf("${");
		}
		return copy;
	}
	,interp: null
	,exec: function(script,prop,t) {
		var parser = new hscript_Parser();
		var expr = parser.parseString(script);
		var root = this.findRoot(t);
		var objectId = prop.objects.keys();
		while(objectId.hasNext()) {
			var objectId1 = objectId.next();
			var _this = this.interp.variables;
			var value = root.findComponent(objectId1);
			if(__map_reserved[objectId1] != null) {
				_this.setReserved(objectId1,value);
			} else {
				_this.h[objectId1] = value;
			}
		}
		var _this1 = this.interp.variables;
		if(__map_reserved["this"] != null) {
			_this1.setReserved("this",t);
		} else {
			_this1.h["this"] = t;
		}
		var result = null;
		try {
			result = this.interp.expr(expr);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		}
		return result;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,extractFields: function(expr,propInfo) {
		switch(expr._hx_index) {
		case 0:
			var _g5 = expr.c;
			break;
		case 1:
			var objectId = expr.v;
			propInfo.addObject(objectId,"value");
			break;
		case 5:
			var _g12 = expr.f;
			var _g11 = expr.e;
			switch(_g11._hx_index) {
			case 1:
				var fieldId = _g12;
				var objectId1 = _g11.v;
				propInfo.addObject(objectId1,fieldId);
				break;
			case 5:
				var _g14 = _g11.e;
				if(_g14._hx_index == 1) {
					var fieldId1 = _g11.f;
					var objectId2 = _g14.v;
					propInfo.addObject(objectId2,fieldId1);
				} else {
					haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 232, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
				}
				break;
			default:
				haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 232, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
			}
			break;
		case 6:
			var e2 = expr.e2;
			var e1 = expr.e1;
			var op = expr.op;
			this.extractFields(e1,propInfo);
			this.extractFields(e2,propInfo);
			break;
		case 7:
			var e = expr.e;
			var prefix = expr.prefix;
			var op1 = expr.op;
			this.extractFields(e,propInfo);
			break;
		case 8:
			var params = expr.params;
			var e3 = expr.e;
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.extractFields(p,propInfo);
			}
			break;
		case 17:
			var values = expr.e;
			var _g1 = 0;
			while(_g1 < values.length) {
				var v = values[_g1];
				++_g1;
				this.extractFields(v,propInfo);
			}
			break;
		default:
			haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 232, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
		}
	}
	,__class__: haxe_ui_binding_BindingManager
};
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._allowFocus = true;
	this._focus = false;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			this.addClass(":active");
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findAncestor(null,haxe_ui_containers_ScrollView);
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			this.removeClass(":active");
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data");
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(style.icon != null) {
			this.set_icon(style.icon);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(50));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
	}
	,get_repeater: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		this.behaviours.set("repeater",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeater");
		return value;
	}
	,get_repeatInterval: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		this.behaviours.set("repeatInterval",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeatInterval");
		return value;
	}
	,get_easeInRepeater: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		this.behaviours.set("easeInRepeater",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"easeInRepeater");
		return value;
	}
	,get_remainPressed: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		this.behaviours.set("remainPressed",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"remainPressed");
		return value;
	}
	,get_toggle: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		this.behaviours.set("toggle",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"toggle");
		return value;
	}
	,get_selected: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,get_icon: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		this.behaviours.set("icon",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	,get_iconPosition: function() {
		if(this.customStyle.iconPosition != null) {
			return this.customStyle.iconPosition;
		}
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.customStyle.iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.iconPosition = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.customStyle.fontSize != null) {
			return this.customStyle.fontSize;
		}
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return this.get_style().fontSize;
	}
	,set_fontSize: function(value) {
		if(this.customStyle.fontSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.fontSize = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.customStyle.textAlign != null) {
			return this.customStyle.textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.customStyle.textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.textAlign = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_iconPosition() != null) {
			c.set_iconPosition(this.get_iconPosition());
		}
		if(this.get_fontSize() != null) {
			c.set_fontSize(this.get_fontSize());
		}
		if(this.get_textAlign() != null) {
			c.set_textAlign(this.get_textAlign());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(this._component.get_autoWidth() == false) {
			var ucx = this.get_usableSize();
			if(label != null) {
				var cx = ucx.width;
				if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
					cx -= icon.get_width() + this.get_verticalSpacing();
				}
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		var icon = this.get_component().findComponent("button-icon",null,false);
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x1 = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x1 += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x1 += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x1 + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx1 = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x2 = this.get_component().get_componentWidth() / 2 - cx1 / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x2 = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x2 + this.marginLeft(label) - this.marginRight(label));
					x2 += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x2 + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x2 + this.marginLeft(icon) - this.marginRight(icon));
					x2 += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x2 + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("button-label");
			label.scriptAccess = false;
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.scriptAccess = false;
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) {
			button.removeClass(":down");
		} else {
			button.addClass(":down");
		}
		button.removeClass(":hover");
		(js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents)).dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.hasClass(":down")) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover");
		} else {
			this._button.addClass(":down");
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down");
		}
		this._button.removeClass(":hover");
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		if(haxe_ui_focus_FocusManager.get_instance().get_focusInfo() != null && haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus != null) {
			haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus.set_focus(false);
		}
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down");
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._button.removeClass(":down");
		if(event.touchEvent == false && this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover");
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onRepeatTimer: function() {
		if(this._button.hasClass(":hover") && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down");
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover");
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,applyStyle: function(style) {
		var label = this._button.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor || label.customStyle.textAlign != style.textAlign)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.customStyle.textAlign = style.textAlign;
			label.invalidateComponent("style");
		}
		var icon = this._button.findComponent("button-icon",null,false);
		if(icon != null && icon.customStyle.cursor != style.cursor) {
			icon.customStyle.cursor = style.cursor;
			icon.invalidateComponent("style");
		}
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_UIEvent
});
var haxe_ui_components_CalendarEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.components.CalendarEvent"] = haxe_ui_components_CalendarEvent;
haxe_ui_components_CalendarEvent.__name__ = "haxe.ui.components.CalendarEvent";
haxe_ui_components_CalendarEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_components_CalendarEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_components_CalendarEvent
});
var haxe_ui_containers_Grid = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalGridLayout());
	(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(2);
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_Calendar = function() {
	haxe_ui_containers_Grid.call(this);
	this.set_columns(7);
	this.behaviours.register("previousMonth",haxe_ui_components__$Calendar_PreviousMonthBehaviour);
	this.behaviours.register("nextMonth",haxe_ui_components__$Calendar_NextMonthBehaviour);
	this.behaviours.register("previousYear",haxe_ui_components__$Calendar_PreviousYearBehaviour);
	this.behaviours.register("nextYear",haxe_ui_components__$Calendar_NextYearBehaviour);
};
$hxClasses["haxe.ui.components.Calendar"] = haxe_ui_components_Calendar;
haxe_ui_components_Calendar.__name__ = "haxe.ui.components.Calendar";
haxe_ui_components_Calendar.__super__ = haxe_ui_containers_Grid;
haxe_ui_components_Calendar.prototype = $extend(haxe_ui_containers_Grid.prototype,{
	previousMonth: function() {
		this.behaviours.call("previousMonth");
	}
	,nextMonth: function() {
		this.behaviours.call("nextMonth");
	}
	,previousYear: function() {
		this.behaviours.call("previousYear");
	}
	,nextYear: function() {
		this.behaviours.call("nextYear");
	}
	,registerComposite: function() {
		haxe_ui_containers_Grid.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Calendar_Events;
		this._compositeBuilderClass = haxe_ui_components__$Calendar_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Grid.prototype.registerBehaviours.call(this);
		this.behaviours.register("date",haxe_ui_components__$Calendar_DateBehaviour);
		this.behaviours.register("selectedDate",haxe_ui_components__$Calendar_SelectedDateBehaviour);
	}
	,get_date: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDate(this.behaviours.get("date"));
	}
	,set_date: function(value) {
		this.behaviours.set("date",haxe_ui_util__$Variant_Variant_$Impl_$.fromDate(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"date");
		return value;
	}
	,get_selectedDate: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		this.behaviours.set("selectedDate",haxe_ui_util__$Variant_Variant_$Impl_$.fromDate(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedDate");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Grid.prototype.cloneComponent.call(this);
		if(this.get_date() != null) {
			c.set_date(this.get_date());
		}
		if(this.get_selectedDate() != null) {
			c.set_selectedDate(this.get_selectedDate());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Calendar();
	}
	,__class__: haxe_ui_components_Calendar
	,__properties__: $extend(haxe_ui_containers_Grid.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
var haxe_ui_components__$Calendar_PreviousMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousMonthBehaviour"] = haxe_ui_components__$Calendar_PreviousMonthBehaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousMonthBehaviour";
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousMonthBehaviour
});
var haxe_ui_components__$Calendar_NextMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextMonthBehaviour"] = haxe_ui_components__$Calendar_NextMonthBehaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.__name__ = "haxe.ui.components._Calendar.NextMonthBehaviour";
haxe_ui_components__$Calendar_NextMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextMonthBehaviour
});
var haxe_ui_components__$Calendar_PreviousYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousYearBehaviour"] = haxe_ui_components__$Calendar_PreviousYearBehaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousYearBehaviour";
haxe_ui_components__$Calendar_PreviousYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousYearBehaviour
});
var haxe_ui_components__$Calendar_NextYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextYearBehaviour"] = haxe_ui_components__$Calendar_NextYearBehaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.__name__ = "haxe.ui.components._Calendar.NextYearBehaviour";
haxe_ui_components__$Calendar_NextYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextYearBehaviour
});
var haxe_ui_components__$Calendar_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.SelectedDateBehaviour"] = haxe_ui_components__$Calendar_SelectedDateBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.__name__ = "haxe.ui.components._Calendar.SelectedDateBehaviour";
haxe_ui_components__$Calendar_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var date = haxe_ui_util__$Variant_Variant_$Impl_$.toDate(value);
		this._component.invalidateComponent("data");
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(calendar.get_date());
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Calendar_SelectedDateBehaviour
});
var haxe_ui_components__$Calendar_DateBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.DateBehaviour"] = haxe_ui_components__$Calendar_DateBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.__name__ = "haxe.ui.components._Calendar.DateBehaviour";
haxe_ui_components__$Calendar_DateBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var date = haxe_ui_util__$Variant_Variant_$Impl_$.toDate(this._value);
		var year = date.getFullYear();
		var month = date.getMonth();
		var day = date.getDate();
		var startDay = new Date(year,month,1,0,0,0).getDay();
		var endDay = haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year);
		var _g = 0;
		var _g1 = this._component.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_opacity(.3);
			child.removeClass("calendar-off-day");
			child.removeClass("calendar-day");
			child.removeClass("calendar-day-selected");
			child.removeClass(":hover");
		}
		var prevMonth = haxe_ui_components__$Calendar_DateUtils.previousMonth(date);
		var last = haxe_ui_components__$Calendar_DateUtils.getEndDay(prevMonth.getMonth(),prevMonth.getFullYear());
		var n = startDay - 1;
		var _g2 = 0;
		var _g3 = startDay;
		while(_g2 < _g3) {
			var i = _g2++;
			var item = this._component.get_childComponents()[n];
			item.addClass("calendar-off-day");
			--n;
			item.set_text("" + last);
			--last;
		}
		var selectedDate = (js_Boot.__cast(this._component , haxe_ui_components_Calendar)).get_selectedDate();
		if(selectedDate == null) {
			selectedDate = new Date();
		}
		var _g4 = 0;
		var _g5 = endDay;
		while(_g4 < _g5) {
			var i1 = _g4++;
			var item1 = this._component.get_childComponents()[i1 + startDay];
			item1.addClass("calendar-day");
			item1.set_opacity(1);
			item1.set_hidden(false);
			item1.set_text("" + (i1 + 1));
			if(i1 + 1 == selectedDate.getDate() && month == selectedDate.getMonth() && year == selectedDate.getFullYear()) {
				item1.addClass("calendar-day-selected");
			}
			last = i1 + startDay;
		}
		++last;
		var n1 = 0;
		var _g6 = last;
		var _g7 = this._component.get_childComponents().length;
		while(_g6 < _g7) {
			var i2 = _g6++;
			var item2 = this._component.get_childComponents()[i2];
			item2.addClass("calendar-off-day");
			item2.set_text("" + (n1 + 1));
			++n1;
		}
		this._component.registerInternalEvents(null,true);
		this._component.dispatch(new haxe_ui_components_CalendarEvent("datechange"));
	}
	,__class__: haxe_ui_components__$Calendar_DateBehaviour
});
var haxe_ui_components__$Calendar_DateUtils = function() { };
$hxClasses["haxe.ui.components._Calendar.DateUtils"] = haxe_ui_components__$Calendar_DateUtils;
haxe_ui_components__$Calendar_DateUtils.__name__ = "haxe.ui.components._Calendar.DateUtils";
haxe_ui_components__$Calendar_DateUtils.getEndDay = function(month,year) {
	var endDay = -1;
	switch(month) {
	case 1:
		if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) {
			endDay = 29;
		} else {
			endDay = 28;
		}
		break;
	case 3:case 5:case 8:case 10:
		endDay = 30;
		break;
	default:
		endDay = 31;
	}
	return endDay;
};
haxe_ui_components__$Calendar_DateUtils.previousMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--month;
	if(month < 0) {
		month = 11;
		--year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++month;
	if(month > 11) {
		month = 0;
		++year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.previousYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
var haxe_ui_components__$Calendar_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.components._Calendar.Events"] = haxe_ui_components__$Calendar_Events;
haxe_ui_components__$Calendar_Events.__name__ = "haxe.ui.components._Calendar.Events";
haxe_ui_components__$Calendar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Calendar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		this.unregister();
		var _g = 0;
		var _g1 = this._target.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.hasEvent("click",$bind(this,this.onDayClicked)) == false && child.hasClass("calendar-day")) {
				child.registerEvent("click",$bind(this,this.onDayClicked));
			}
		}
	}
	,unregister: function() {
		var _g = 0;
		var _g1 = this._target.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onDayClicked));
		}
	}
	,onDayClicked: function(event) {
		var calendar = js_Boot.__cast(this._target , haxe_ui_components_Calendar);
		var day = Std.parseInt(event.target.get_text());
		var month = calendar.get_date().getMonth();
		var year = calendar.get_date().getFullYear();
		calendar.set_selectedDate(new Date(year,month,day,0,0,0));
	}
	,__class__: haxe_ui_components__$Calendar_Events
});
var haxe_ui_components__$Calendar_Builder = function(calendar) {
	haxe_ui_core_CompositeBuilder.call(this,calendar);
	this._calendar = calendar;
};
$hxClasses["haxe.ui.components._Calendar.Builder"] = haxe_ui_components__$Calendar_Builder;
haxe_ui_components__$Calendar_Builder.__name__ = "haxe.ui.components._Calendar.Builder";
haxe_ui_components__$Calendar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Calendar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendar: null
	,create: function() {
		var item = new haxe_ui_components_Button();
		item.set_width(25);
		item.set_height(25);
		this._calendar.addComponent(item);
		var item1 = new haxe_ui_components_Button();
		item1.set_width(25);
		item1.set_height(25);
		this._calendar.addComponent(item1);
		var item2 = new haxe_ui_components_Button();
		item2.set_width(25);
		item2.set_height(25);
		this._calendar.addComponent(item2);
		var item3 = new haxe_ui_components_Button();
		item3.set_width(25);
		item3.set_height(25);
		this._calendar.addComponent(item3);
		var item4 = new haxe_ui_components_Button();
		item4.set_width(25);
		item4.set_height(25);
		this._calendar.addComponent(item4);
		var item5 = new haxe_ui_components_Button();
		item5.set_width(25);
		item5.set_height(25);
		this._calendar.addComponent(item5);
		var item6 = new haxe_ui_components_Button();
		item6.set_width(25);
		item6.set_height(25);
		this._calendar.addComponent(item6);
		var item7 = new haxe_ui_components_Button();
		item7.set_width(25);
		item7.set_height(25);
		this._calendar.addComponent(item7);
		var item8 = new haxe_ui_components_Button();
		item8.set_width(25);
		item8.set_height(25);
		this._calendar.addComponent(item8);
		var item9 = new haxe_ui_components_Button();
		item9.set_width(25);
		item9.set_height(25);
		this._calendar.addComponent(item9);
		var item10 = new haxe_ui_components_Button();
		item10.set_width(25);
		item10.set_height(25);
		this._calendar.addComponent(item10);
		var item11 = new haxe_ui_components_Button();
		item11.set_width(25);
		item11.set_height(25);
		this._calendar.addComponent(item11);
		var item12 = new haxe_ui_components_Button();
		item12.set_width(25);
		item12.set_height(25);
		this._calendar.addComponent(item12);
		var item13 = new haxe_ui_components_Button();
		item13.set_width(25);
		item13.set_height(25);
		this._calendar.addComponent(item13);
		var item14 = new haxe_ui_components_Button();
		item14.set_width(25);
		item14.set_height(25);
		this._calendar.addComponent(item14);
		var item15 = new haxe_ui_components_Button();
		item15.set_width(25);
		item15.set_height(25);
		this._calendar.addComponent(item15);
		var item16 = new haxe_ui_components_Button();
		item16.set_width(25);
		item16.set_height(25);
		this._calendar.addComponent(item16);
		var item17 = new haxe_ui_components_Button();
		item17.set_width(25);
		item17.set_height(25);
		this._calendar.addComponent(item17);
		var item18 = new haxe_ui_components_Button();
		item18.set_width(25);
		item18.set_height(25);
		this._calendar.addComponent(item18);
		var item19 = new haxe_ui_components_Button();
		item19.set_width(25);
		item19.set_height(25);
		this._calendar.addComponent(item19);
		var item20 = new haxe_ui_components_Button();
		item20.set_width(25);
		item20.set_height(25);
		this._calendar.addComponent(item20);
		var item21 = new haxe_ui_components_Button();
		item21.set_width(25);
		item21.set_height(25);
		this._calendar.addComponent(item21);
		var item22 = new haxe_ui_components_Button();
		item22.set_width(25);
		item22.set_height(25);
		this._calendar.addComponent(item22);
		var item23 = new haxe_ui_components_Button();
		item23.set_width(25);
		item23.set_height(25);
		this._calendar.addComponent(item23);
		var item24 = new haxe_ui_components_Button();
		item24.set_width(25);
		item24.set_height(25);
		this._calendar.addComponent(item24);
		var item25 = new haxe_ui_components_Button();
		item25.set_width(25);
		item25.set_height(25);
		this._calendar.addComponent(item25);
		var item26 = new haxe_ui_components_Button();
		item26.set_width(25);
		item26.set_height(25);
		this._calendar.addComponent(item26);
		var item27 = new haxe_ui_components_Button();
		item27.set_width(25);
		item27.set_height(25);
		this._calendar.addComponent(item27);
		var item28 = new haxe_ui_components_Button();
		item28.set_width(25);
		item28.set_height(25);
		this._calendar.addComponent(item28);
		var item29 = new haxe_ui_components_Button();
		item29.set_width(25);
		item29.set_height(25);
		this._calendar.addComponent(item29);
		var item30 = new haxe_ui_components_Button();
		item30.set_width(25);
		item30.set_height(25);
		this._calendar.addComponent(item30);
		var item31 = new haxe_ui_components_Button();
		item31.set_width(25);
		item31.set_height(25);
		this._calendar.addComponent(item31);
		var item32 = new haxe_ui_components_Button();
		item32.set_width(25);
		item32.set_height(25);
		this._calendar.addComponent(item32);
		var item33 = new haxe_ui_components_Button();
		item33.set_width(25);
		item33.set_height(25);
		this._calendar.addComponent(item33);
		var item34 = new haxe_ui_components_Button();
		item34.set_width(25);
		item34.set_height(25);
		this._calendar.addComponent(item34);
		var item35 = new haxe_ui_components_Button();
		item35.set_width(25);
		item35.set_height(25);
		this._calendar.addComponent(item35);
		var item36 = new haxe_ui_components_Button();
		item36.set_width(25);
		item36.set_height(25);
		this._calendar.addComponent(item36);
		var item37 = new haxe_ui_components_Button();
		item37.set_width(25);
		item37.set_height(25);
		this._calendar.addComponent(item37);
		var item38 = new haxe_ui_components_Button();
		item38.set_width(25);
		item38.set_height(25);
		this._calendar.addComponent(item38);
		var item39 = new haxe_ui_components_Button();
		item39.set_width(25);
		item39.set_height(25);
		this._calendar.addComponent(item39);
		var item40 = new haxe_ui_components_Button();
		item40.set_width(25);
		item40.set_height(25);
		this._calendar.addComponent(item40);
		var item41 = new haxe_ui_components_Button();
		item41.set_width(25);
		item41.set_height(25);
		this._calendar.addComponent(item41);
		this._calendar.syncComponentValidation();
		this._calendar.set_date(new Date());
	}
	,__class__: haxe_ui_components__$Calendar_Builder
});
var haxe_ui_components_CheckBox = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components__$CheckBox_Value = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components._CheckBox.Value"] = haxe_ui_components__$CheckBox_Value;
haxe_ui_components__$CheckBox_Value.__name__ = "haxe.ui.components._CheckBox.Value";
haxe_ui_components__$CheckBox_Value.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components__$CheckBox_Value.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	onReady: function() {
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			this.addComponent(icon);
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(style.icon);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$CheckBox_Value();
	}
	,__class__: haxe_ui_components__$CheckBox_Value
});
var haxe_ui_components__$CheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.scriptAccess = false;
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
var haxe_ui_components__$CheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var valueComponent = this._component.findComponent(null,haxe_ui_components__$CheckBox_Value);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
var haxe_ui_components__$CheckBox_Events = function(checkbox) {
	haxe_ui_events_Events.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$CheckBox_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_checkbox: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components__$CheckBox_Value).addClass(":hover");
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components__$CheckBox_Value).removeClass(":hover");
	}
	,onClick: function(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
	,__class__: haxe_ui_components__$CheckBox_Events
});
var haxe_ui_components_CheckBoxBuilder = function(checkbox) {
	haxe_ui_core_CompositeBuilder.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_CheckBoxBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		if(this._checkbox.findComponent(null,haxe_ui_components__$CheckBox_Value) == null) {
			var value = new haxe_ui_components__$CheckBox_Value();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.scriptAccess = false;
			this._checkbox.addComponent(value);
		}
	}
	,applyStyle: function(style) {
		var label = this._checkbox.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.invalidateComponent("style");
		}
	}
	,get_cssName: function() {
		return "checkbox";
	}
	,__class__: haxe_ui_components_CheckBoxBuilder
});
var haxe_ui_components_Column = function() {
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = "haxe.ui.components.Column";
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
haxe_ui_components_Column.prototype = $extend(haxe_ui_components_Button.prototype,{
	get_sortable: function() {
		return this.hasClass("sortable");
	}
	,set_sortable: function(value) {
		if(value == true) {
			this.addClass("sortable");
		} else {
			this.removeClass("sortable");
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Column();
	}
	,__class__: haxe_ui_components_Column
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_sortable:"set_sortable",get_sortable:"get_sortable"})
});
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
haxe_ui_core_IDataComponent.prototype = {
	get_dataSource: null
	,set_dataSource: null
	,__class__: haxe_ui_core_IDataComponent
	,__properties__: {set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_components_DropDown = function() {
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = "haxe.ui.components.DropDown";
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
haxe_ui_components_DropDown.prototype = $extend(haxe_ui_components_Button.prototype,{
	registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_DropDownEvents;
		this._compositeBuilderClass = haxe_ui_components__$DropDown_DropDownBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
		this.behaviours.register("handlerStyleNames",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$DropDown_DataSourceBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("list"));
		this.behaviours.register("virtual",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("dropdownWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownSize",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("selectedIndex",haxe_ui_components__$DropDown_SelectedIndexBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedItem",haxe_ui_components__$DropDown_SelectedItemBehaviour);
	}
	,get_handlerStyleNames: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("handlerStyleNames"));
	}
	,set_handlerStyleNames: function(value) {
		this.behaviours.set("handlerStyleNames",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"handlerStyleNames");
		return value;
	}
	,get_dataSource: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		this.behaviours.set("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	,get_type: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("type"));
	}
	,set_type: function(value) {
		this.behaviours.set("type",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"type");
		return value;
	}
	,get_virtual: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		this.behaviours.set("virtual",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"virtual");
		return value;
	}
	,get_dropdownWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("dropdownWidth"));
	}
	,set_dropdownWidth: function(value) {
		this.behaviours.set("dropdownWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dropdownWidth");
		return value;
	}
	,get_dropdownHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("dropdownHeight"));
	}
	,set_dropdownHeight: function(value) {
		this.behaviours.set("dropdownHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dropdownHeight");
		return value;
	}
	,get_dropdownSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("dropdownSize"));
	}
	,set_dropdownSize: function(value) {
		this.behaviours.set("dropdownSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dropdownSize");
		return value;
	}
	,get_selectedIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.set("selectedItem",value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItem");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_DropDown();
	}
	,__class__: haxe_ui_components_DropDown
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_dropdownSize:"set_dropdownSize",get_dropdownSize:"get_dropdownSize",set_dropdownHeight:"set_dropdownHeight",get_dropdownHeight:"get_dropdownHeight",set_dropdownWidth:"set_dropdownWidth",get_dropdownWidth:"get_dropdownWidth",set_virtual:"set_virtual",get_virtual:"get_virtual",set_type:"set_type",get_type:"get_type",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_handlerStyleNames:"set_handlerStyleNames",get_handlerStyleNames:"get_handlerStyleNames"})
});
var haxe_ui_components__$DropDown_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.DataSourceBehaviour"] = haxe_ui_components__$DropDown_DataSourceBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.__name__ = "haxe.ui.components._DropDown.DataSourceBehaviour";
haxe_ui_components__$DropDown_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		handler.reset();
		if(this._component.get_text() == null) {
			(js_Boot.__cast(this._component , haxe_ui_components_DropDown)).set_selectedIndex(0);
		}
	}
	,__class__: haxe_ui_components__$DropDown_DataSourceBehaviour
});
var haxe_ui_components__$DropDown_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedIndexBehaviour"] = haxe_ui_components__$DropDown_SelectedIndexBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedIndexBehaviour";
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._value));
	}
	,get: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(handler.get_selectedIndex());
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._value));
	}
	,__class__: haxe_ui_components__$DropDown_SelectedIndexBehaviour
});
var haxe_ui_components__$DropDown_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedItemBehaviour"] = haxe_ui_components__$DropDown_SelectedItemBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedItemBehaviour";
haxe_ui_components__$DropDown_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		return handler.get_selectedItem();
	}
	,__class__: haxe_ui_components__$DropDown_SelectedItemBehaviour
});
var haxe_ui_components_IDropDownHandler = function() { };
$hxClasses["haxe.ui.components.IDropDownHandler"] = haxe_ui_components_IDropDownHandler;
haxe_ui_components_IDropDownHandler.__name__ = "haxe.ui.components.IDropDownHandler";
haxe_ui_components_IDropDownHandler.__isInterface__ = true;
haxe_ui_components_IDropDownHandler.prototype = {
	get_component: null
	,get_selectedIndex: null
	,set_selectedIndex: null
	,get_selectedItem: null
	,component: null
	,show: null
	,reset: null
	,selectedItem: null
	,__class__: haxe_ui_components_IDropDownHandler
	,__properties__: {get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components_DropDownHandler = function(dropdown) {
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownHandler"] = haxe_ui_components_DropDownHandler;
haxe_ui_components_DropDownHandler.__name__ = "haxe.ui.components.DropDownHandler";
haxe_ui_components_DropDownHandler.__interfaces__ = [haxe_ui_components_IDropDownHandler];
haxe_ui_components_DropDownHandler.prototype = {
	_dropdown: null
	,component: null
	,get_component: function() {
		return null;
	}
	,show: function() {
	}
	,reset: function() {
	}
	,get_selectedIndex: function() {
		return -1;
	}
	,set_selectedIndex: function(value) {
		return value;
	}
	,selectedItem: null
	,get_selectedItem: function() {
		return null;
	}
	,__class__: haxe_ui_components_DropDownHandler
	,__properties__: {get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components_ListDropDownHandler = function(dropdown) {
	this._cachedSelectedIndex = -1;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.ListDropDownHandler"] = haxe_ui_components_ListDropDownHandler;
haxe_ui_components_ListDropDownHandler.__name__ = "haxe.ui.components.ListDropDownHandler";
haxe_ui_components_ListDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_ListDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_listview: null
	,get_component: function() {
		this.createListView();
		return this._listview;
	}
	,reset: function() {
		this._cachedSelectedIndex = -1;
		if(this._listview != null) {
			this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		}
		this._listview = null;
		this.createListView();
	}
	,show: function() {
		var itemCount = 4;
		if(this._dropdown.get_dropdownSize() != null) {
			itemCount = this._dropdown.get_dropdownSize();
		}
		if(this._listview.get_dataSource() != null && this._listview.get_dataSource().get_size() < itemCount) {
			itemCount = this._listview.get_dataSource().get_size();
		}
		this._listview.set_itemCount(itemCount);
		if(this._dropdown.get_dropdownWidth() == null) {
			this._listview.set_width(this._dropdown.get_width());
		} else {
			this._listview.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._listview.set_height(this._dropdown.get_dropdownHeight());
		}
		var selectedIndex = this._dropdown.get_selectedIndex();
		if(this._dropdown.get_dataSource() != null && this._dropdown.get_text() != null && selectedIndex < 0) {
			var text = this._dropdown.get_text();
			var _g = 0;
			var _g1 = this._dropdown.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = this._dropdown.get_dataSource().get(i);
				if(item == text || item.value == text || item.text == text) {
					selectedIndex = i;
				}
			}
		}
		haxe_ui_core_Screen.get_instance().addComponent(this._listview);
		this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		this._listview.set_selectedIndex(selectedIndex);
		this._listview.syncComponentValidation();
		this._listview.registerEvent("change",$bind(this,this.onListChange));
	}
	,_cachedSelectedIndex: null
	,get_selectedIndex: function() {
		if(this._listview == null) {
			return this._cachedSelectedIndex;
		}
		return this._listview.get_selectedIndex();
	}
	,set_selectedIndex: function(value) {
		if(this._listview != null) {
			this._listview.set_selectedIndex(value);
			this._cachedSelectedIndex = value;
		} else if(this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("change"));
		}
		if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
			var data = this._dropdown.get_dataSource().get(value);
			this._dropdown.set_text(data.value);
		}
		return value;
	}
	,get_selectedItem: function() {
		if(this._listview == null) {
			if(this._cachedSelectedIndex >= 0 && this._cachedSelectedIndex < this._dropdown.get_dataSource().get_size()) {
				var data = this._dropdown.get_dataSource().get(this._cachedSelectedIndex);
				return data;
			} else {
				return null;
			}
		}
		return this._listview.get_selectedItem();
	}
	,createListView: function() {
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			this._listview.set_virtual(this._dropdown.get_virtual());
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	,onListChange: function(event) {
		if(this._listview.get_selectedItem() == null) {
			return;
		}
		var currentHover = this._listview.findComponent(":hover",null,true,"css");
		if(currentHover != null) {
			currentHover.removeClass(":hover");
		}
		var text = this._listview.get_selectedItem().value;
		this._dropdown.set_text(text);
		this._dropdown.set_selectedIndex(this._listview.get_selectedIndex());
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components_ListDropDownHandler
});
var haxe_ui_components_CalendarDropDownHandler = function(dropdown) {
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.CalendarDropDownHandler"] = haxe_ui_components_CalendarDropDownHandler;
haxe_ui_components_CalendarDropDownHandler.__name__ = "haxe.ui.components.CalendarDropDownHandler";
haxe_ui_components_CalendarDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_CalendarDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_calendar: null
	,get_component: function() {
		if(this._calendar == null) {
			this._calendar = new haxe_ui_containers_CalendarView();
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		return this._calendar;
	}
	,show: function() {
		if(this._dropdown.get_dropdownWidth() != null) {
			this._calendar.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._calendar.set_height(this._dropdown.get_dropdownHeight());
		}
		haxe_ui_core_Screen.get_instance().addComponent(this._calendar);
		this._calendar.syncComponentValidation();
	}
	,onCalendarChange: function(event) {
		if(this._calendar.get_selectedDate() == null) {
			return;
		}
		this._dropdown.set_text(DateTools.format(this._calendar.get_selectedDate(),haxe_ui_containers_CalendarView.DATE_FORMAT));
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components_CalendarDropDownHandler
});
var haxe_ui_components_DropDownEvents = function(dropdown) {
	this._overlay = null;
	haxe_ui_components_ButtonEvents.call(this,dropdown);
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownEvents"] = haxe_ui_components_DropDownEvents;
haxe_ui_components_DropDownEvents.__name__ = "haxe.ui.components.DropDownEvents";
haxe_ui_components_DropDownEvents.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components_DropDownEvents.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_dropdown: null
	,register: function() {
		haxe_ui_components_ButtonEvents.prototype.register.call(this);
		this.registerEvent("click",$bind(this,this.onClick));
	}
	,unregister: function() {
		haxe_ui_components_ButtonEvents.prototype.unregister.call(this);
		this.unregisterEvent("click",$bind(this,this.onClick));
	}
	,onClick: function(event) {
		if(this._dropdown.get_selected() == true) {
			this.showDropDown();
		} else {
			this.hideDropDown();
		}
	}
	,_overlay: null
	,showDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		handler.get_component().addClass("popup");
		handler.get_component().addClass("dropdown-popup");
		handler.get_component().set_styleNames(this._dropdown.get_handlerStyleNames());
		var componentOffset = this._dropdown.getComponentOffset();
		var mode = "mobile";
		if(this._dropdown.get_style().mode != null && this._dropdown.get_style().mode == "mobile") {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			}
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			handler.show();
			handler.get_component().set_left(haxe_ui_core_Screen.get_instance().get_width() / 2 - handler.get_component().get_actualComponentWidth() / 2);
			handler.get_component().set_top(haxe_ui_core_Screen.get_instance().get_height() / 2 - handler.get_component().get_actualComponentHeight() / 2);
		} else {
			handler.get_component().set_left(this._dropdown.get_screenLeft() + componentOffset.x);
			handler.get_component().set_top(this._dropdown.get_screenTop() + (this._dropdown.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y);
			handler.show();
			if(handler.get_component().get_screenLeft() + handler.get_component().get_width() > haxe_ui_core_Screen.get_instance().get_width()) {
				handler.get_component().set_left(handler.get_component().get_screenLeft() - handler.get_component().get_width() + this._dropdown.get_width());
			}
			if(handler.get_component().get_screenTop() + handler.get_component().get_height() > haxe_ui_core_Screen.get_instance().get_height()) {
				handler.get_component().set_top(this._dropdown.get_screenTop() - handler.get_component().get_height());
			}
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,hideDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		this._dropdown.set_selected(false);
		haxe_ui_core_Screen.get_instance().removeComponent(handler.get_component());
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,onScreenMouseDown: function(event) {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components__$DropDown_DropDownBuilder)).get_handler();
		if(handler.get_component().hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this.hideDropDown();
	}
	,dispatchChanged: function() {
	}
	,__class__: haxe_ui_components_DropDownEvents
});
var haxe_ui_components__$DropDown_DropDownBuilder = function(dropdown) {
	haxe_ui_components_ButtonBuilder.call(this,dropdown);
	this._dropdown = dropdown;
	var this1 = haxe_ui_components__$DropDown_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components_ListDropDownHandler.__name__;
	var _this = this1;
	if(__map_reserved["list"] != null) {
		_this.setReserved("list",value);
	} else {
		_this.h["list"] = value;
	}
	var this2 = haxe_ui_components__$DropDown_DropDownBuilder.HANDLER_MAP;
	var value1 = haxe_ui_components_CalendarDropDownHandler.__name__;
	var _this1 = this2;
	if(__map_reserved["date"] != null) {
		_this1.setReserved("date",value1);
	} else {
		_this1.h["date"] = value1;
	}
};
$hxClasses["haxe.ui.components._DropDown.DropDownBuilder"] = haxe_ui_components__$DropDown_DropDownBuilder;
haxe_ui_components__$DropDown_DropDownBuilder.__name__ = "haxe.ui.components._DropDown.DropDownBuilder";
haxe_ui_components__$DropDown_DropDownBuilder.__super__ = haxe_ui_components_ButtonBuilder;
haxe_ui_components__$DropDown_DropDownBuilder.prototype = $extend(haxe_ui_components_ButtonBuilder.prototype,{
	_dropdown: null
	,_handler: null
	,handler: null
	,get_handler: function() {
		if(this._handler == null) {
			var this1 = haxe_ui_components__$DropDown_DropDownBuilder.HANDLER_MAP;
			var key = this._dropdown.get_type();
			var _this = this1;
			var handlerClass = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(handlerClass == null) {
				handlerClass = this._dropdown.get_type();
			}
			this._handler = Type.createInstance($hxClasses[handlerClass],[this._dropdown]);
		}
		return this._handler;
	}
	,create: function() {
		this._dropdown.set_toggle(true);
		if(this._dropdown.get_text() == null) {
			this._dropdown.set_selectedIndex(0);
		}
	}
	,destroy: function() {
		var events = js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		if(this._handler != null && this._handler.get_component() != null) {
			this._handler.get_component().destroyComponent();
		}
	}
	,__class__: haxe_ui_components__$DropDown_DropDownBuilder
	,__properties__: $extend(haxe_ui_components_ButtonBuilder.prototype.__properties__,{get_handler:"get_handler"})
});
var haxe_ui_components_HGrid = function() {
	haxe_ui_core_Component.call(this);
	this.set_rows(1);
};
$hxClasses["haxe.ui.components.HGrid"] = haxe_ui_components_HGrid;
haxe_ui_components_HGrid.__name__ = "haxe.ui.components.HGrid";
haxe_ui_components_HGrid.__super__ = haxe_ui_core_Component;
haxe_ui_components_HGrid.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalGridLayout;
	}
	,_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows != value) {
			this._rows = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_HorizontalGridLayout)).set_rows(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_rows(this.get_rows());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HGrid();
	}
	,__class__: haxe_ui_components_HGrid
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_core_IDirectionalComponent = function() { };
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
var haxe_ui_components_Range = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Range"] = haxe_ui_components_Range;
haxe_ui_components_Range.__name__ = "haxe.ui.components.Range";
haxe_ui_components_Range.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Range.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Range.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,get_cssName: function() {
		return "range";
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Range_RangeMin,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("max",haxe_ui_components__$Range_RangeMax,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(100));
		this.behaviours.register("start",haxe_ui_components__$Range_RangeStart,null);
		this.behaviours.register("end",haxe_ui_components__$Range_RangeEnd,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("precision",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("allowInteraction",haxe_ui_components__$Range_AllowInteraction);
		this.behaviours.register("posFromCoord",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_min: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		this.behaviours.set("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	,get_max: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		this.behaviours.set("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	,get_start: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		this.behaviours.set("start",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"start");
		return value;
	}
	,get_end: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		this.behaviours.set("end",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"end");
		return value;
	}
	,get_precision: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		this.behaviours.set("precision",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	,get_step: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		this.behaviours.set("step",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	,get_allowInteraction: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		this.behaviours.set("allowInteraction",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"allowInteraction");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_precision(this.get_precision());
		c.set_step(this.get_step());
		c.set_allowInteraction(this.get_allowInteraction());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Range();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Range_Builder;
	}
	,__class__: haxe_ui_components_Range
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",set_step:"set_step",get_step:"get_step",set_precision:"set_precision",get_precision:"get_precision",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_Progress = function() {
	haxe_ui_components_Range.call(this);
	this.behaviours.set_updateOrder(["min","max","pos","indeterminate"]);
};
$hxClasses["haxe.ui.components.Progress"] = haxe_ui_components_Progress;
haxe_ui_components_Progress.__name__ = "haxe.ui.components.Progress";
haxe_ui_components_Progress.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Progress.__super__ = haxe_ui_components_Range;
haxe_ui_components_Progress.prototype = $extend(haxe_ui_components_Range.prototype,{
	get_cssName: function() {
		return "progress";
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("indeterminate",haxe_ui_components__$Progress_Indeterminate);
		this.behaviours.register("pos",haxe_ui_components__$Progress_Pos);
		this.behaviours.register("min",haxe_ui_components__$Progress_Min);
	}
	,get_indeterminate: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("indeterminate"));
	}
	,set_indeterminate: function(value) {
		this.behaviours.set("indeterminate",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"indeterminate");
		return value;
	}
	,get_pos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		c.set_indeterminate(this.get_indeterminate());
		c.set_pos(this.get_pos());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Progress();
	}
	,__class__: haxe_ui_components_Progress
	,__properties__: $extend(haxe_ui_components_Range.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_indeterminate:"set_indeterminate",get_indeterminate:"get_indeterminate"})
});
var haxe_ui_components_HorizontalProgress = function() {
	haxe_ui_components_Progress.call(this);
};
$hxClasses["haxe.ui.components.HorizontalProgress"] = haxe_ui_components_HorizontalProgress;
haxe_ui_components_HorizontalProgress.__name__ = "haxe.ui.components.HorizontalProgress";
haxe_ui_components_HorizontalProgress.__super__ = haxe_ui_components_Progress;
haxe_ui_components_HorizontalProgress.prototype = $extend(haxe_ui_components_Progress.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerBehaviours: function() {
		haxe_ui_components_Progress.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Progress.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalProgress();
	}
	,registerComposite: function() {
		haxe_ui_components_Progress.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
	}
	,__class__: haxe_ui_components_HorizontalProgress
});
var haxe_ui_components_HorizontalRange = function() {
	haxe_ui_components_Range.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRange"] = haxe_ui_components_HorizontalRange;
haxe_ui_components_HorizontalRange.__name__ = "haxe.ui.components.HorizontalRange";
haxe_ui_components_HorizontalRange.__super__ = haxe_ui_components_Range;
haxe_ui_components_HorizontalRange.prototype = $extend(haxe_ui_components_Range.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,__class__: haxe_ui_components_HorizontalRange
});
var haxe_ui_components_HorizontalRangePosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.HorizontalRangePosFromCoord"] = haxe_ui_components_HorizontalRangePosFromCoord;
haxe_ui_components_HorizontalRangePosFromCoord.__name__ = "haxe.ui.components.HorizontalRangePosFromCoord";
haxe_ui_components_HorizontalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components_HorizontalRangePosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var xpos = p.x - range.get_layout().get_paddingLeft();
		var ucx = range.get_layout().get_usableWidth();
		if(xpos >= ucx) {
			xpos = ucx;
		}
		var m = range.get_max() - range.get_min();
		var d = ucx / m;
		var v = xpos + range.get_start() * d;
		var p1 = v / d;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(p1);
	}
	,__class__: haxe_ui_components_HorizontalRangePosFromCoord
});
var haxe_ui_components_HorizontalRangeLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRangeLayout"] = haxe_ui_components_HorizontalRangeLayout;
haxe_ui_components_HorizontalRangeLayout.__name__ = "haxe.ui.components.HorizontalRangeLayout";
haxe_ui_components_HorizontalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalRangeLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			var ucx = this.get_usableWidth();
			var m = range.get_max() - range.get_min();
			var d = ucx / m;
			var startInPixels = range.get_start() * d - range.get_min() * d;
			var endInPixels = range.get_end() * d - range.get_min() * d;
			var cx = Math.abs(endInPixels - startInPixels);
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_width(0);
				value.set_hidden(true);
			} else {
				value.set_width(cx);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		var ucx = this.get_usableWidth();
		var m = range.get_max() - range.get_min();
		var d = ucx / m;
		var startInPixels = range.get_start() * d - range.get_min() * d;
		value.set_left(this.get_paddingLeft() + startInPixels);
		value.set_top(this.get_paddingTop());
	}
	,__class__: haxe_ui_components_HorizontalRangeLayout
});
var haxe_ui_components_Scroll = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,applyPageFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	,createChildren: function() {
		this.createButton("deinc").set_repeater(true);
		this.createButton("inc").set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	,createButton: function(type) {
		var b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.scriptAccess = false;
			b.customStyle.native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(20));
	}
	,get_min: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		this.behaviours.set("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	,get_max: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		this.behaviours.set("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	,get_pageSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pageSize"));
	}
	,set_pageSize: function(value) {
		this.behaviours.set("pageSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageSize");
		return value;
	}
	,get_pos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,get_increment: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("increment"));
	}
	,set_increment: function(value) {
		this.behaviours.set("increment",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"increment");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_increment:"set_increment",get_increment:"get_increment",set_pos:"set_pos",get_pos:"get_pos",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HorizontalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalScroll();
	}
	,__class__: haxe_ui_components_HorizontalScroll
});
var haxe_ui_components__$HorizontalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var xpos = p.x;
		var minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		var maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = xpos - minX;
		var value = scroll.get_min() + v / ucx * m;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
	}
	,__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
var haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			var _g = scroll;
			_g.set_pos(_g.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			var _g1 = scroll;
			_g1.set_pos(_g1.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucx = this.get_usableWidth();
			var thumbWidth = scroll.get_pageSize() / m * ucx;
			if(thumbWidth < this.get_innerHeight()) {
				thumbWidth = this.get_innerHeight();
			} else if(thumbWidth > ucx) {
				thumbWidth = ucx;
			}
			if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
				thumb.set_width(thumbWidth);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
var haxe_ui_components_Slider = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Slider"] = haxe_ui_components_Slider;
haxe_ui_components_Slider.__name__ = "haxe.ui.components.Slider";
haxe_ui_components_Slider.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Slider.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Slider.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Slider_MinBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("max",haxe_ui_components__$Slider_MaxBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(100));
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("start",haxe_ui_components__$Slider_StartBehaviour,null);
		this.behaviours.register("end",haxe_ui_components__$Slider_EndBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("pos",haxe_ui_components__$Slider_PosBehaviour);
		this.behaviours.register("posFromCoord",haxe_ui_components__$Slider_PosFromCoord);
	}
	,get_min: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		this.behaviours.set("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	,get_max: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		this.behaviours.set("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	,get_precision: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		this.behaviours.set("precision",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	,get_start: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		this.behaviours.set("start",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"start");
		return value;
	}
	,get_end: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		this.behaviours.set("end",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"end");
		return value;
	}
	,get_pos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_pos(this.get_pos());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Slider();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_SliderBuilder;
	}
	,__class__: haxe_ui_components_Slider
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSlider"] = haxe_ui_components_HorizontalSlider;
haxe_ui_components_HorizontalSlider.__name__ = "haxe.ui.components.HorizontalSlider";
haxe_ui_components_HorizontalSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_HorizontalSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	registerComposite: function() {
		haxe_ui_components_Slider.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalSlider_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Slider.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalSlider();
	}
	,__class__: haxe_ui_components_HorizontalSlider
});
var haxe_ui_components_HorizontalSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSliderLayout"] = haxe_ui_components_HorizontalSliderLayout;
haxe_ui_components_HorizontalSliderLayout.__name__ = "haxe.ui.components.HorizontalSliderLayout";
haxe_ui_components_HorizontalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var range = this.findComponent(null,haxe_ui_components_Range);
		var rangeValue = range.findComponent("range-value");
		var startThumb = this.findComponent("start-thumb");
		var endThumb = this.findComponent("end-thumb");
		if(startThumb != null) {
			startThumb.set_left(range.get_left() + rangeValue.get_left() - startThumb.get_width() / 2);
		}
		endThumb.set_left(range.get_left() + rangeValue.get_left() + rangeValue.get_width() - endThumb.get_width() / 2);
	}
	,__class__: haxe_ui_components_HorizontalSliderLayout
});
var haxe_ui_components_SliderBuilder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components.SliderBuilder"] = haxe_ui_components_SliderBuilder;
haxe_ui_components_SliderBuilder.__name__ = "haxe.ui.components.SliderBuilder";
haxe_ui_components_SliderBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_SliderBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		if(this._component.findComponent("range") == null) {
			var v = this.createValueComponent();
			v.scriptAccess = false;
			v.set_id("range");
			v.addClass("slider-value");
			v.set_start(v.set_end(0));
			this._component.addComponent(v);
		}
		this.createThumb("end-thumb");
	}
	,createValueComponent: function() {
		return null;
	}
	,createThumb: function(id) {
		if(this._component.findComponent(id) != null) {
			return;
		}
		var b = new haxe_ui_components_Button();
		b.scriptAccess = false;
		b.set_id(id);
		b.addClass(id);
		b.set_remainPressed(true);
		this._component.addComponent(b);
		this._component.registerInternalEvents(haxe_ui_components__$Slider_Events,true);
	}
	,__class__: haxe_ui_components_SliderBuilder
});
var haxe_ui_components__$HorizontalSlider_Builder = function(component) {
	haxe_ui_components_SliderBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalSlider.Builder"] = haxe_ui_components__$HorizontalSlider_Builder;
haxe_ui_components__$HorizontalSlider_Builder.__name__ = "haxe.ui.components._HorizontalSlider.Builder";
haxe_ui_components__$HorizontalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
haxe_ui_components__$HorizontalSlider_Builder.prototype = $extend(haxe_ui_components_SliderBuilder.prototype,{
	createValueComponent: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,__class__: haxe_ui_components__$HorizontalSlider_Builder
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_resource: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("resource"));
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"resource");
		return value;
	}
	,get_scaleMode: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		this.behaviours.set("scaleMode",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"scaleMode");
		return value;
	}
	,get_imageHorizontalAlign: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"imageHorizontalAlign");
		return value;
	}
	,get_imageVerticalAlign: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		this.behaviours.set("imageVerticalAlign",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"imageVerticalAlign");
		return value;
	}
	,get_originalWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		this.behaviours.set("originalWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"originalWidth");
		return value;
	}
	,get_originalHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		this.behaviours.set("originalHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"originalHeight");
		return value;
	}
	,get_value: function() {
		return this.get_resource();
	}
	,set_value: function(value) {
		this.set_resource(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"resource");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		var imageLoader = new haxe_ui_util_ImageLoader(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		imageLoader.load(function(imageInfo) {
			if(imageInfo != null) {
				if(_gthis._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(_gthis._value)) {
					_gthis._component.removeImageDisplay();
					_gthis._component.invalidateComponent();
					return;
				}
				var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
				var display = image.getImageDisplay();
				if(display != null) {
					display.set_imageInfo(imageInfo);
					image.set_originalWidth(imageInfo.width);
					image.set_originalHeight(imageInfo.height);
					if(image.autoSize() == true && image.parentComponent != null) {
						var _this = image.parentComponent;
						if(!(_this._layout == null || _this._layoutLocked == true)) {
							_this.invalidateComponent("layout");
						}
					}
					image.invalidateComponent();
					display.validateComponent();
				}
			}
		});
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(style.resource);
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("value",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		this.behaviours.set("htmlText",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"htmlText");
		return value;
	}
	,get_textAlign: function() {
		if(this.customStyle.textAlign != null) {
			return this.customStyle.textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.customStyle.textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.textAlign = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if(this.get_textAlign() != null) {
			c.set_textAlign(this.get_textAlign());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			this.get_component().getTextDisplay().set_wordWrap(true);
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.getTextDisplay().set_htmlText("" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
		}
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_components_NumberStepper = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.NumberStepper"] = haxe_ui_components_NumberStepper;
haxe_ui_components_NumberStepper.__name__ = "haxe.ui.components.NumberStepper";
haxe_ui_components_NumberStepper.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_NumberStepper.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$NumberStepper_PosBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0));
		this.behaviours.register("step",haxe_ui_components__$NumberStepper_StepBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(1));
		this.behaviours.register("min",haxe_ui_components__$NumberStepper_MinBehaviour,null);
		this.behaviours.register("max",haxe_ui_components__$NumberStepper_MaxBehaviour,null);
		this.behaviours.register("precision",haxe_ui_components__$NumberStepper_PrecisionBehaviour,null);
	}
	,get_pos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,get_step: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		this.behaviours.set("step",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	,get_min: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		this.behaviours.set("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	,get_max: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		this.behaviours.set("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	,get_precision: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		this.behaviours.set("precision",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_NumberStepper();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$NumberStepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$NumberStepper_Builder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	,__class__: haxe_ui_components_NumberStepper
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$NumberStepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.PosBehaviour"] = haxe_ui_components__$NumberStepper_PosBehaviour;
haxe_ui_components__$NumberStepper_PosBehaviour.__name__ = "haxe.ui.components._NumberStepper.PosBehaviour";
haxe_ui_components__$NumberStepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$NumberStepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		var preciseValue = haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value);
		if(step.get_precision() != null) {
			var precision = step.get_precision();
			if(precision == null) {
				precision = 0;
			}
			preciseValue = Math.round(preciseValue * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		var v = preciseValue;
		var min = step.get_min();
		var max = step.get_max();
		if(v == null || isNaN(v)) {
			preciseValue = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			preciseValue = v;
		}
		step.set_pos(preciseValue);
		var textfield = this._component.findComponent("stepper-textfield",haxe_ui_components_TextField);
		textfield.set_text(preciseValue == null ? "null" : "" + preciseValue);
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$NumberStepper_PosBehaviour
});
var haxe_ui_components__$NumberStepper_StepBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.StepBehaviour"] = haxe_ui_components__$NumberStepper_StepBehaviour;
haxe_ui_components__$NumberStepper_StepBehaviour.__name__ = "haxe.ui.components._NumberStepper.StepBehaviour";
haxe_ui_components__$NumberStepper_StepBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$NumberStepper_StepBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(step.get_step());
	}
	,set: function(value) {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.set_step(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
	}
	,__class__: haxe_ui_components__$NumberStepper_StepBehaviour
});
var haxe_ui_components__$NumberStepper_MinBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.MinBehaviour"] = haxe_ui_components__$NumberStepper_MinBehaviour;
haxe_ui_components__$NumberStepper_MinBehaviour.__name__ = "haxe.ui.components._NumberStepper.MinBehaviour";
haxe_ui_components__$NumberStepper_MinBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$NumberStepper_MinBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(step.get_min());
	}
	,set: function(value) {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
	}
	,__class__: haxe_ui_components__$NumberStepper_MinBehaviour
});
var haxe_ui_components__$NumberStepper_MaxBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.MaxBehaviour"] = haxe_ui_components__$NumberStepper_MaxBehaviour;
haxe_ui_components__$NumberStepper_MaxBehaviour.__name__ = "haxe.ui.components._NumberStepper.MaxBehaviour";
haxe_ui_components__$NumberStepper_MaxBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$NumberStepper_MaxBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(step.get_max());
	}
	,set: function(value) {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
	}
	,__class__: haxe_ui_components__$NumberStepper_MaxBehaviour
});
var haxe_ui_components__$NumberStepper_PrecisionBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.PrecisionBehaviour"] = haxe_ui_components__$NumberStepper_PrecisionBehaviour;
haxe_ui_components__$NumberStepper_PrecisionBehaviour.__name__ = "haxe.ui.components._NumberStepper.PrecisionBehaviour";
haxe_ui_components__$NumberStepper_PrecisionBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$NumberStepper_PrecisionBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(step.get_precision());
	}
	,set: function(value) {
		var step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.set_precision(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
	}
	,__class__: haxe_ui_components__$NumberStepper_PrecisionBehaviour
});
var haxe_ui_components__$NumberStepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._NumberStepper.Builder"] = haxe_ui_components__$NumberStepper_Builder;
haxe_ui_components__$NumberStepper_Builder.__name__ = "haxe.ui.components._NumberStepper.Builder";
haxe_ui_components__$NumberStepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$NumberStepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		this._stepper.addClass("textfield");
		var textfield = new haxe_ui_components_TextField();
		textfield.addClass("stepper-textfield");
		textfield.set_id("stepper-textfield");
		textfield.set_restrictChars("0-9\\-\\.\\,");
		this._stepper.addComponent(textfield);
		var step = new haxe_ui_components_Stepper();
		step.addClass("stepper-step");
		step.set_id("stepper-step");
		this._stepper.addComponent(step);
	}
	,applyStyle: function(style) {
		var textfield = this._stepper.findComponent(null,haxe_ui_components_TextField);
		if(textfield != null && (textfield.customStyle.color != style.color || textfield.customStyle.fontName != style.fontName || textfield.customStyle.fontSize != style.fontSize || textfield.customStyle.cursor != style.cursor)) {
			textfield.customStyle.color = style.color;
			textfield.customStyle.fontName = style.fontName;
			textfield.customStyle.fontSize = style.fontSize;
			textfield.customStyle.cursor = style.cursor;
			textfield.invalidateComponent("style");
		}
	}
	,__class__: haxe_ui_components__$NumberStepper_Builder
});
var haxe_ui_components__$NumberStepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._NumberStepper.Events"] = haxe_ui_components__$NumberStepper_Events;
haxe_ui_components__$NumberStepper_Events.__name__ = "haxe.ui.components._NumberStepper.Events";
haxe_ui_components__$NumberStepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$NumberStepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		if(!this.hasEvent("mousewheel",$bind(this,this.onMouseWheel))) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(!this._stepper.hasEvent("keydown",$bind(this,this.onKeyDown))) {
			this._stepper.registerEvent("keydown",$bind(this,this.onKeyDown));
		}
		var textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		if(!textfield.hasEvent("focusin",$bind(this,this.onTextFieldFocusIn))) {
			textfield.registerEvent("focusin",$bind(this,this.onTextFieldFocusIn));
		}
		if(!textfield.hasEvent("focusout",$bind(this,this.onTextFieldFocusOut))) {
			textfield.registerEvent("focusout",$bind(this,this.onTextFieldFocusOut));
		}
		if(!textfield.hasEvent("change",$bind(this,this.onTextFieldChange))) {
			textfield.registerEvent("change",$bind(this,this.onTextFieldChange));
		}
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(!step.hasEvent("change",$bind(this,this.onStepChange))) {
			step.registerEvent("change",$bind(this,this.onStepChange));
		}
		if(!step.hasEvent("mousedown",$bind(this,this.onStepMouseDown))) {
			step.registerEvent("mousedown",$bind(this,this.onStepMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this._stepper.unregisterEvent("keydown",$bind(this,this.onKeyDown));
		var textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		textfield.unregisterEvent("focusin",$bind(this,this.onTextFieldFocusIn));
		textfield.unregisterEvent("focusout",$bind(this,this.onTextFieldFocusOut));
		textfield.unregisterEvent("change",$bind(this,this.onTextFieldChange));
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.unregisterEvent("change",$bind(this,this.onStepChange));
		step.unregisterEvent("mousedown",$bind(this,this.onStepMouseDown));
	}
	,onKeyDown: function(event) {
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(event.keyCode == 38 || event.keyCode == 39 || event.keyCode == 107) {
			step.increment();
		}
		if(event.keyCode == 40 || event.keyCode == 37 || event.keyCode == 109) {
			step.deincrement();
		}
		if(event.keyCode == 36) {
			step.set_pos(step.get_min());
		}
		if(event.keyCode == 35) {
			step.set_pos(step.get_max());
		}
	}
	,onMouseWheel: function(event) {
		var textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		textfield.set_focus(true);
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(event.delta > 0) {
			step.increment();
		} else {
			step.deincrement();
		}
	}
	,onStepChange: function(event) {
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		this._stepper.set_pos(step.get_pos());
	}
	,onStepMouseDown: function(event) {
		var textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		textfield.set_focus(true);
	}
	,onTextFieldFocusIn: function(event) {
		this._stepper.addClass(":active");
	}
	,onTextFieldFocusOut: function(event) {
		this._stepper.removeClass(":active");
	}
	,onTextFieldChange: function(event) {
		var step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		var textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		var tmp = this._stepper;
		var v = parseFloat(textfield.get_text());
		var min = this._stepper.get_min();
		var max = this._stepper.get_max();
		var tmp1;
		if(v == null || isNaN(v)) {
			tmp1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			tmp1 = v;
		}
		tmp.set_pos(tmp1);
		textfield.set_text(Std.string(this._stepper.get_pos()));
	}
	,__class__: haxe_ui_components__$NumberStepper_Events
});
var haxe_ui_components_OptionBox = function() {
	haxe_ui_components_CheckBox.call(this);
};
$hxClasses["haxe.ui.components.OptionBox"] = haxe_ui_components_OptionBox;
haxe_ui_components_OptionBox.__name__ = "haxe.ui.components.OptionBox";
haxe_ui_components_OptionBox.__super__ = haxe_ui_components_CheckBox;
haxe_ui_components_OptionBox.prototype = $extend(haxe_ui_components_CheckBox.prototype,{
	registerComposite: function() {
		haxe_ui_components_CheckBox.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_OptionBoxBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_CheckBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("componentGroup",haxe_ui_components__$OptionBox_GroupBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("defaultGroup"));
		this.behaviours.register("selected",haxe_ui_components__$OptionBox_SelectedBehaviour);
		this.behaviours.register("selectedOption",haxe_ui_components__$OptionBox_SelectedOptionBehaviour);
	}
	,get_componentGroup: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		this.behaviours.set("componentGroup",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	,get_selectedOption: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toComponent(this.behaviours.get("selectedOption"));
	}
	,set_selectedOption: function(value) {
		this.behaviours.set("selectedOption",haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedOption");
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_CheckBox.prototype.cloneComponent.call(this);
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if(this.get_selectedOption() != null) {
			c.set_selectedOption(this.get_selectedOption());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionBox();
	}
	,__class__: haxe_ui_components_OptionBox
	,__properties__: $extend(haxe_ui_components_CheckBox.prototype.__properties__,{set_selectedOption:"set_selectedOption",get_selectedOption:"get_selectedOption",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup"})
});
var haxe_ui_components__$OptionBox_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.GroupBehaviour"] = haxe_ui_components__$OptionBox_GroupBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.__name__ = "haxe.ui.components._OptionBox.GroupBehaviour";
haxe_ui_components__$OptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$OptionBox_GroupBehaviour
});
var haxe_ui_components__$OptionBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedBehaviour"] = haxe_ui_components__$OptionBox_SelectedBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedBehaviour";
haxe_ui_components__$OptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		if(optionbox.get_componentGroup() != null && haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) {
			var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != this._component && option.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false) {
				this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true);
				return;
			}
		}
		if(optionbox.get_componentGroup() != null && haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			var arr1 = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			if(arr1 != null) {
				var _g1 = 0;
				while(_g1 < arr1.length) {
					var option1 = arr1[_g1];
					++_g1;
					if(option1 != this._component) {
						option1.set_selected(false);
					}
				}
			}
		}
		var valueComponent = this._component.findComponent("optionbox-value");
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			valueComponent.addClass(":selected");
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		} else {
			valueComponent.removeClass(":selected");
		}
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedBehaviour
});
var haxe_ui_components__$OptionBox_SelectedOptionBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedOptionBehaviour"] = haxe_ui_components__$OptionBox_SelectedOptionBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedOptionBehaviour";
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
		var selectionOption = null;
		if(arr != null) {
			var _g = 0;
			while(_g < arr.length) {
				var test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(selectionOption);
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedOptionBehaviour
});
var haxe_ui_components_OptionBoxBuilder = function(checkbox) {
	haxe_ui_components_CheckBoxBuilder.call(this,checkbox);
};
$hxClasses["haxe.ui.components.OptionBoxBuilder"] = haxe_ui_components_OptionBoxBuilder;
haxe_ui_components_OptionBoxBuilder.__name__ = "haxe.ui.components.OptionBoxBuilder";
haxe_ui_components_OptionBoxBuilder.__super__ = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_OptionBoxBuilder.prototype = $extend(haxe_ui_components_CheckBoxBuilder.prototype,{
	get_cssName: function() {
		return "optionbox";
	}
	,__class__: haxe_ui_components_OptionBoxBuilder
});
var haxe_ui_components_OptionBoxGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.OptionBoxGroups"] = haxe_ui_components_OptionBoxGroups;
haxe_ui_components_OptionBoxGroups.__name__ = "haxe.ui.components.OptionBoxGroups";
haxe_ui_components_OptionBoxGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_OptionBoxGroups.get_instance = function() {
	if(haxe_ui_components_OptionBoxGroups._instance == null) {
		haxe_ui_components_OptionBoxGroups._instance = new haxe_ui_components_OptionBoxGroups();
	}
	return haxe_ui_components_OptionBoxGroups._instance;
};
haxe_ui_components_OptionBoxGroups.prototype = {
	_groups: null
	,get: function(name) {
		var _this = this._groups;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,set: function(name,options) {
		var _this = this._groups;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,options);
		} else {
			_this.h[name] = options;
		}
	}
	,add: function(name,optionbox) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(optionbox) == -1) {
			arr.push(optionbox);
		}
		this.set(name,arr);
	}
	,__class__: haxe_ui_components_OptionBoxGroups
};
var haxe_ui_components__$Progress_Pos = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Pos"] = haxe_ui_components__$Progress_Pos;
haxe_ui_components__$Progress_Pos.__name__ = "haxe.ui.components._Progress.Pos";
haxe_ui_components__$Progress_Pos.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Pos.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(progress.get_end());
	}
	,set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_end(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Pos
});
var haxe_ui_components__$Progress_Min = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Min"] = haxe_ui_components__$Progress_Min;
haxe_ui_components__$Progress_Min.__name__ = "haxe.ui.components._Progress.Min";
haxe_ui_components__$Progress_Min.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Min.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_start(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Min
});
var haxe_ui_components__$Progress_Indeterminate = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Indeterminate"] = haxe_ui_components__$Progress_Indeterminate;
haxe_ui_components__$Progress_Indeterminate.__name__ = "haxe.ui.components._Progress.Indeterminate";
haxe_ui_components__$Progress_Indeterminate.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$Progress_Indeterminate.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) {
			this._component.removeClass(":indeterminate");
		} else {
			this._component.addClass(":indeterminate");
		}
	}
	,detatch: function() {
		haxe_ui_behaviours_ValueBehaviour.prototype.detatch.call(this);
		this._component.removeClass(":indeterminate");
	}
	,__class__: haxe_ui_components__$Progress_Indeterminate
});
var haxe_ui_components__$Range_RangeMin = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMin"] = haxe_ui_components__$Range_RangeMin;
haxe_ui_components__$Range_RangeMin.__name__ = "haxe.ui.components._Range.RangeMin";
haxe_ui_components__$Range_RangeMin.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMin.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		if(range.get_start() < range.get_min()) {
			range.set_start(range.get_min());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMin
});
var haxe_ui_components__$Range_RangeMax = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMax"] = haxe_ui_components__$Range_RangeMax;
haxe_ui_components__$Range_RangeMax.__name__ = "haxe.ui.components._Range.RangeMax";
haxe_ui_components__$Range_RangeMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		if(range.get_end() > range.get_max()) {
			range.set_end(range.get_max());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMax
});
var haxe_ui_components__$Range_RangeStart = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeStart"] = haxe_ui_components__$Range_RangeStart;
haxe_ui_components__$Range_RangeStart.__name__ = "haxe.ui.components._Range.RangeStart";
haxe_ui_components__$Range_RangeStart.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeStart.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_max());
		}
		range.set_start(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeStart
});
var haxe_ui_components__$Range_RangeEnd = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeEnd"] = haxe_ui_components__$Range_RangeEnd;
haxe_ui_components__$Range_RangeEnd.__name__ = "haxe.ui.components._Range.RangeEnd";
haxe_ui_components__$Range_RangeEnd.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeEnd.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_max());
		}
		range.set_end(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeEnd
});
var haxe_ui_components__$Range_AllowInteraction = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.AllowInteraction"] = haxe_ui_components__$Range_AllowInteraction;
haxe_ui_components__$Range_AllowInteraction.__name__ = "haxe.ui.components._Range.AllowInteraction";
haxe_ui_components__$Range_AllowInteraction.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Range_AllowInteraction.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._component._internalEvents != null);
	}
	,set: function(value) {
		if(this._component.get_native() == true) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			this._component.registerInternalEvents(haxe_ui_components__$Range_Events);
		} else {
			this._component.unregisterInternalEvents();
		}
	}
	,__class__: haxe_ui_components__$Range_AllowInteraction
});
var haxe_ui_components__$Range_Events = function(range) {
	haxe_ui_events_Events.call(this,range);
	this._range = range;
	this.register();
};
$hxClasses["haxe.ui.components._Range.Events"] = haxe_ui_components__$Range_Events;
haxe_ui_components__$Range_Events.__name__ = "haxe.ui.components._Range.Events";
haxe_ui_components__$Range_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Range_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_range: null
	,register: function() {
		this._range.registerEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,unregister: function() {
		this._range.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseDown: function(e) {
		var pt = new haxe_ui_geom_Point(e.get_localX(),e.get_localY());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(e) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(e) {
		var pt = new haxe_ui_geom_Point(e.screenX - this._range.get_screenLeft(),e.screenY - this._range.get_screenTop());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
	}
	,applyPos: function(pos) {
		var precision = this._range.get_precision();
		if(precision == null) {
			precision = 0;
		}
		pos = Math.round(pos * Math.pow(10,precision)) / Math.pow(10,precision);
		if(this._range.get_step() > 0) {
			pos = Math.ceil(pos / this._range.get_step()) * this._range.get_step();
		}
		if(((this._range) instanceof haxe_ui_components_Progress)) {
			(js_Boot.__cast(this._range , haxe_ui_components_Progress)).set_pos(pos);
			return;
		}
		var d1 = this._range.get_end() - this._range.get_start();
		var d2 = pos - this._range.get_start();
		if(d2 < d1 / 2) {
			this._range.set_start(pos);
		} else if(d2 >= d1 / 2) {
			this._range.set_end(pos);
		} else if(pos > this._range.get_start()) {
			this._range.set_end(pos);
		} else if(pos < this._range.get_end()) {
			this._range.set_start(pos);
		}
	}
	,__class__: haxe_ui_components__$Range_Events
});
var haxe_ui_components__$Range_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._Range.Builder"] = haxe_ui_components__$Range_Builder;
haxe_ui_components__$Range_Builder.__name__ = "haxe.ui.components._Range.Builder";
haxe_ui_components__$Range_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Range_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		if(this._component.findComponent("${_component.cssName}-value") == null) {
			var v = new haxe_ui_core_Component();
			v.set_id("" + this._component.get_cssName() + "-value");
			v.addClass("" + this._component.get_cssName() + "-value",false);
			this._component.addComponent(v);
		}
	}
	,__class__: haxe_ui_components__$Range_Builder
});
var haxe_ui_components__$Scroll_Events = function(scroll) {
	haxe_ui_events_Events.call(this,scroll);
	this._scroll = scroll;
	this._deincButton = this._scroll.findComponent("scroll-deinc-button");
	this._incButton = this._scroll.findComponent("scroll-inc-button");
	this._thumb = this._scroll.findComponent("scroll-thumb-button");
};
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Scroll_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,register: function() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,onMouseDown: function(event) {
		var componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	,onDeinc: function(event) {
		var _g = this._scroll;
		_g.set_pos(_g.get_pos() - this._scroll.get_increment());
	}
	,onInc: function(event) {
		var _g = this._scroll;
		_g.set_pos(_g.get_pos() + this._scroll.get_increment());
	}
	,_mouseDownOffset: null
	,onThumbMouseDown: function(event) {
		this._mouseDownOffset = new haxe_ui_geom_Point();
		var tmp = event.screenX - this._thumb.get_left();
		var tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		var tmp2 = event.screenY - this._thumb.get_top();
		var tmp3 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp2 + tmp3;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		var coord = new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y);
		this._scroll.set_pos(this._scroll.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Scroll_Events
});
var haxe_ui_components__$Scroll_ScrollValueBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
var haxe_ui_components__$Slider_StartBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.StartBehaviour"] = haxe_ui_components__$Slider_StartBehaviour;
haxe_ui_components__$Slider_StartBehaviour.__name__ = "haxe.ui.components._Slider.StartBehaviour";
haxe_ui_components__$Slider_StartBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_StartBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._component.findComponent("start-thumb") == null) {
			builder.createThumb("start-thumb");
		}
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_start(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Slider_StartBehaviour
});
var haxe_ui_components__$Slider_EndBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.EndBehaviour"] = haxe_ui_components__$Slider_EndBehaviour;
haxe_ui_components__$Slider_EndBehaviour.__name__ = "haxe.ui.components._Slider.EndBehaviour";
haxe_ui_components__$Slider_EndBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_EndBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_end(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Slider_EndBehaviour
});
var haxe_ui_components__$Slider_MinBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MinBehaviour"] = haxe_ui_components__$Slider_MinBehaviour;
haxe_ui_components__$Slider_MinBehaviour.__name__ = "haxe.ui.components._Slider.MinBehaviour";
haxe_ui_components__$Slider_MinBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MinBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.findComponent(null,haxe_ui_components_Range).set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Slider_MinBehaviour
});
var haxe_ui_components__$Slider_MaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MaxBehaviour"] = haxe_ui_components__$Slider_MaxBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.__name__ = "haxe.ui.components._Slider.MaxBehaviour";
haxe_ui_components__$Slider_MaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.findComponent(null,haxe_ui_components_Range).set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,__class__: haxe_ui_components__$Slider_MaxBehaviour
});
var haxe_ui_components__$Slider_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosBehaviour"] = haxe_ui_components__$Slider_PosBehaviour;
haxe_ui_components__$Slider_PosBehaviour.__name__ = "haxe.ui.components._Slider.PosBehaviour";
haxe_ui_components__$Slider_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_end());
	}
	,validateData: function() {
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_end(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
	}
	,__class__: haxe_ui_components__$Slider_PosBehaviour
});
var haxe_ui_components__$Slider_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosFromCoord"] = haxe_ui_components__$Slider_PosFromCoord;
haxe_ui_components__$Slider_PosFromCoord.__name__ = "haxe.ui.components._Slider.PosFromCoord";
haxe_ui_components__$Slider_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Slider_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(coord) {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Slider_PosFromCoord
});
var haxe_ui_components__$Slider_Events = function(slider) {
	this._offset = null;
	haxe_ui_events_Events.call(this,slider);
	this._slider = slider;
	this._range = slider.findComponent(null,haxe_ui_components_Range);
};
$hxClasses["haxe.ui.components._Slider.Events"] = haxe_ui_components__$Slider_Events;
haxe_ui_components__$Slider_Events.__name__ = "haxe.ui.components._Slider.Events";
haxe_ui_components__$Slider_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Slider_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_slider: null
	,_endThumb: null
	,_startThumb: null
	,_range: null
	,_activeThumb: null
	,register: function() {
		this._startThumb = this._slider.findComponent("start-thumb");
		if(this._startThumb != null && this._startThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._startThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._endThumb = this._slider.findComponent("end-thumb");
		if(this._endThumb != null && this._endThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._endThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range.hasEvent("mousedown",$bind(this,this.onRangeMouseDown)) == false) {
			this._range.registerEvent("mousedown",$bind(this,this.onRangeMouseDown));
		}
		if(this._range.hasEvent("change",$bind(this,this.onRangeChange)) == false) {
			this._range.registerEvent("change",$bind(this,this.onRangeChange));
		}
	}
	,unregister: function() {
		if(this._startThumb != null) {
			this._startThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._endThumb != null) {
			this._endThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._range.unregisterEvent("mousedown",$bind(this,this.onRangeMouseDown));
		this._range.unregisterEvent("change",$bind(this,this.onRangeChange));
	}
	,onRangeChange: function(e) {
		this._slider.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onRangeMouseDown: function(e) {
		if(this._startThumb != null && this._startThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		if(this._endThumb != null && this._endThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._slider.get_paddingLeft();
		coord.y = e.screenY - this._slider.get_screenTop() - this._slider.get_paddingTop();
		var pos = this._slider.posFromCoord(coord);
		if(this._startThumb == null) {
			this._slider.set_pos(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
			return;
		}
		var d1 = this._slider.get_end() - this._slider.get_start();
		var d2 = pos - this._slider.get_start();
		if(d2 < d1 / 2) {
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_width() / 2,this._startThumb.get_height() / 2);
		} else if(d2 >= d1 / 2) {
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
		} else if(pos > this._slider.get_start()) {
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
		} else if(pos < this._slider.get_end()) {
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_width() / 2,this._startThumb.get_height() / 2);
		}
	}
	,_offset: null
	,onThumbMouseDown: function(e) {
		this.startDrag(js_Boot.__cast(e.target , haxe_ui_components_Button),e.get_localX(),e.get_localY());
	}
	,startDrag: function(thumb,offsetX,offsetY) {
		this._offset = new haxe_ui_geom_Point(offsetX,offsetY);
		this._activeThumb = thumb;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,onScreenMouseUp: function(e) {
		this._activeThumb = null;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(e) {
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._offset.x - this._slider.get_paddingLeft() + this._activeThumb.get_width() / 2;
		coord.y = e.screenY - this._slider.get_screenTop() - this._offset.y - this._slider.get_paddingTop() + this._activeThumb.get_height() / 2;
		var pos = this._slider.posFromCoord(coord);
		if(this._activeThumb == this._startThumb) {
			pos -= this._slider.get_start();
			this._slider.set_start(pos);
		} else if(this._activeThumb == this._endThumb) {
			pos -= this._slider.get_start();
			this._slider.set_end(pos);
		}
	}
	,__class__: haxe_ui_components__$Slider_Events
});
var haxe_ui_components_Spacer = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = "haxe.ui.components.Spacer";
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
haxe_ui_components_Spacer.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Spacer();
	}
	,__class__: haxe_ui_components_Spacer
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var haxe_ui_components_Stepper = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.components.Stepper"] = haxe_ui_components_Stepper;
haxe_ui_components_Stepper.__name__ = "haxe.ui.components.Stepper";
haxe_ui_components_Stepper.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_Stepper.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	increment: function() {
		return this.behaviours.call("increment",null);
	}
	,deincrement: function() {
		return this.behaviours.call("deincrement",null);
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Stepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$Stepper_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$Stepper_PosBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(1));
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(100));
		this.behaviours.register("increment",haxe_ui_components__$Stepper_IncBehaviour);
		this.behaviours.register("deincrement",haxe_ui_components__$Stepper_DeincBehaviour);
	}
	,get_pos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,get_step: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		this.behaviours.set("step",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	,get_min: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		this.behaviours.set("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	,get_max: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		this.behaviours.set("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	,get_precision: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		this.behaviours.set("precision",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	,get_repeater: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		this.behaviours.set("repeater",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeater");
		return value;
	}
	,get_repeatInterval: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		this.behaviours.set("repeatInterval",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeatInterval");
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Stepper();
	}
	,__class__: haxe_ui_components_Stepper
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$Stepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.PosBehaviour"] = haxe_ui_components__$Stepper_PosBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.__name__ = "haxe.ui.components._Stepper.PosBehaviour";
haxe_ui_components__$Stepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var v = haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value);
		var min = stepper.get_min();
		var max = stepper.get_max();
		var v1;
		if(v == null || isNaN(v)) {
			v1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			v1 = v;
		}
		stepper.set_pos(v1);
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(v1);
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$Stepper_PosBehaviour
});
var haxe_ui_components__$Stepper_IncBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.IncBehaviour"] = haxe_ui_components__$Stepper_IncBehaviour;
haxe_ui_components__$Stepper_IncBehaviour.__name__ = "haxe.ui.components._Stepper.IncBehaviour";
haxe_ui_components__$Stepper_IncBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_IncBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos += stepper.get_step();
		if(stepper.get_max() != null && newPos > stepper.get_max()) {
			newPos = stepper.get_max();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_IncBehaviour
});
var haxe_ui_components__$Stepper_DeincBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.DeincBehaviour"] = haxe_ui_components__$Stepper_DeincBehaviour;
haxe_ui_components__$Stepper_DeincBehaviour.__name__ = "haxe.ui.components._Stepper.DeincBehaviour";
haxe_ui_components__$Stepper_DeincBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_DeincBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos -= stepper.get_step();
		if(stepper.get_min() != null && newPos < stepper.get_min()) {
			newPos = stepper.get_min();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_DeincBehaviour
});
var haxe_ui_components__$Stepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Builder"] = haxe_ui_components__$Stepper_Builder;
haxe_ui_components__$Stepper_Builder.__name__ = "haxe.ui.components._Stepper.Builder";
haxe_ui_components__$Stepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Stepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-inc");
		button.set_id("stepper-inc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
		var button1 = new haxe_ui_components_Button();
		button1.set_styleNames("stepper-button stepper-deinc");
		button1.set_id("stepper-deinc");
		button1.set_repeater(this._stepper.get_repeater());
		button1.set_easeInRepeater(true);
		button1.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button1);
	}
	,__class__: haxe_ui_components__$Stepper_Builder
});
var haxe_ui_components__$Stepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Events"] = haxe_ui_components__$Stepper_Events;
haxe_ui_components__$Stepper_Events.__name__ = "haxe.ui.components._Stepper.Events";
haxe_ui_components__$Stepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Stepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onInc))) {
			button.registerEvent("click",$bind(this,this.onInc));
		}
		var button1 = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		if(!button1.hasEvent("click",$bind(this,this.onDeinc))) {
			button1.registerEvent("click",$bind(this,this.onDeinc));
		}
	}
	,unregister: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onInc));
		var button1 = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		button1.unregisterEvent("click",$bind(this,this.onDeinc));
	}
	,onInc: function(event) {
		this._stepper.increment();
	}
	,onDeinc: function(event) {
		this._stepper.deincrement();
	}
	,__class__: haxe_ui_components__$Stepper_Events
});
var haxe_ui_components_Switch = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Switch"] = haxe_ui_components_Switch;
haxe_ui_components_Switch.__name__ = "haxe.ui.components.Switch";
haxe_ui_components_Switch.__super__ = haxe_ui_core_Component;
haxe_ui_components_Switch.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Switch_Events;
		this._compositeBuilderClass = haxe_ui_components__$Switch_Builder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selected",haxe_ui_components__$Switch_SelectedBehaviour);
		this.behaviours.register("value",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Switch_TextBehaviour);
		this.behaviours.register("textOn",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("textOff",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_selected: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,get_textOn: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("textOn"));
	}
	,set_textOn: function(value) {
		this.behaviours.set("textOn",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"textOn");
		return value;
	}
	,get_textOff: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("textOff"));
	}
	,set_textOff: function(value) {
		this.behaviours.set("textOff",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"textOff");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_textOn() != null) {
			c.set_textOn(this.get_textOn());
		}
		if(this.get_textOff() != null) {
			c.set_textOff(this.get_textOff());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Switch();
	}
	,__class__: haxe_ui_components_Switch
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_textOff:"set_textOff",get_textOff:"get_textOff",set_textOn:"set_textOn",get_textOn:"get_textOn",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components__$Switch_Events = function(s) {
	haxe_ui_events_Events.call(this,s);
	this._switch = s;
};
$hxClasses["haxe.ui.components._Switch.Events"] = haxe_ui_components__$Switch_Events;
haxe_ui_components__$Switch_Events.__name__ = "haxe.ui.components._Switch.Events";
haxe_ui_components__$Switch_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Switch_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_switch: null
	,__class__: haxe_ui_components__$Switch_Events
});
var haxe_ui_components__$Switch_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Switch.SelectedBehaviour"] = haxe_ui_components__$Switch_SelectedBehaviour;
haxe_ui_components__$Switch_SelectedBehaviour.__name__ = "haxe.ui.components._Switch.SelectedBehaviour";
haxe_ui_components__$Switch_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Switch_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.findComponent(null,haxe_ui_components__$Switch_SwitchButtonSub).set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_components__$Switch_SelectedBehaviour
});
var haxe_ui_components__$Switch_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Switch.TextBehaviour"] = haxe_ui_components__$Switch_TextBehaviour;
haxe_ui_components__$Switch_TextBehaviour.__name__ = "haxe.ui.components._Switch.TextBehaviour";
haxe_ui_components__$Switch_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Switch_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_styleNames("switch-label");
			label.set_id("switch-label");
			label.scriptAccess = false;
			this._component.addComponentAt(label,0);
			var spacer = new haxe_ui_components_Spacer();
			spacer.set_percentWidth(100);
			this._component.addComponentAt(spacer,1);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_components__$Switch_TextBehaviour
});
var haxe_ui_components__$Switch_Builder = function(s) {
	haxe_ui_core_CompositeBuilder.call(this,s);
	this._switch = s;
};
$hxClasses["haxe.ui.components._Switch.Builder"] = haxe_ui_components__$Switch_Builder;
haxe_ui_components__$Switch_Builder.__name__ = "haxe.ui.components._Switch.Builder";
haxe_ui_components__$Switch_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Switch_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_switch: null
	,_button: null
	,_label: null
	,create: function() {
		var _gthis = this;
		if(this._button == null) {
			this._button = new haxe_ui_components__$Switch_SwitchButtonSub();
			this._button.set_onChange(function(e) {
				_gthis._switch.set_selected(_gthis._button.get_selected());
				_gthis._switch.dispatch(new haxe_ui_events_UIEvent("change"));
			});
			this._component.addComponent(this._button);
		}
	}
	,__class__: haxe_ui_components__$Switch_Builder
});
var haxe_ui_components__$Switch_SwitchButtonSub = function() {
	this._pos = 0;
	this._unselectedText = "";
	this._selectedText = "";
	this._selected = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components._Switch.SwitchButtonSub"] = haxe_ui_components__$Switch_SwitchButtonSub;
haxe_ui_components__$Switch_SwitchButtonSub.__name__ = "haxe.ui.components._Switch.SwitchButtonSub";
haxe_ui_components__$Switch_SwitchButtonSub.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components__$Switch_SwitchButtonSub.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	_button: null
	,_label: null
	,createChildren: function() {
		var _gthis = this;
		haxe_ui_core_InteractiveComponent.prototype.createChildren.call(this);
		if(this._button == null) {
			this._label = new haxe_ui_components_Label();
			this._label.set_id("switch-label");
			this._label.addClass("switch-label");
			this._label.set_text(this._unselectedText);
			this.addComponent(this._label);
			this._button = new haxe_ui_components_Button();
			this._button.set_id("switch-button");
			this._button.addClass("switch-button");
			this.addComponent(this._button);
			this.set_onClick(function(e) {
				_gthis.set_selected(!_gthis.get_selected());
			});
			var component = new haxe_ui_core_Component();
			component.addClass("switch-button-sub-extra");
			this.addComponentAt(component,0);
		}
	}
	,_selected: null
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(value == this._selected) {
			return value;
		}
		this.invalidateComponent("data");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		this._selected = value;
		if(this._selected == false) {
			this._label.set_text(this._unselectedText);
			this._label.removeClass(":selected");
			this.removeClass(":selected",true,true);
			this.addClass(":unselected",true,true);
		} else {
			this._label.set_text(this._selectedText);
			this._label.addClass(":selected");
			this.removeClass(":unselected",true,true);
			this.addClass(":selected",true,true);
		}
		var event = new haxe_ui_events_UIEvent("change");
		this.dispatch(event);
		return value;
	}
	,_selectedText: null
	,get_selectedText: function() {
		return this._selectedText;
	}
	,set_selectedText: function(value) {
		this._selectedText = value;
		if(this._ready && this._selected == true) {
			this._label.set_text(this._selectedText);
		}
		return value;
	}
	,_unselectedText: null
	,get_unselectedText: function() {
		return this._unselectedText;
	}
	,set_unselectedText: function(value) {
		this._unselectedText = value;
		if(this._ready && this._selected == false) {
			this._label.set_text(this._unselectedText);
		}
		return value;
	}
	,_pos: null
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(this._pos == value) {
			return value;
		}
		this._pos = value;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$Switch_SwitchButtonSub();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Switch_SwitchButtonLayout;
	}
	,__class__: haxe_ui_components__$Switch_SwitchButtonSub
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_unselectedText:"set_unselectedText",get_unselectedText:"get_unselectedText",set_selectedText:"set_selectedText",get_selectedText:"get_selectedText",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components__$Switch_SwitchButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Switch.SwitchButtonLayout"] = haxe_ui_components__$Switch_SwitchButtonLayout;
haxe_ui_components__$Switch_SwitchButtonLayout.__name__ = "haxe.ui.components._Switch.SwitchButtonLayout";
haxe_ui_components__$Switch_SwitchButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Switch_SwitchButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var switchComp = js_Boot.__cast(this._component , haxe_ui_components__$Switch_SwitchButtonSub);
		var button = switchComp.findComponent("switch-button");
		var label = switchComp.findComponent("switch-label");
		if(button == null || label == null) {
			return;
		}
		button.set_top(this.get_paddingTop());
		label.set_top(this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2);
		if(switchComp.get_selected() == true) {
			label.set_left(button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		} else {
			label.set_left(button.get_left() + button.get_componentWidth() + button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		}
		var ucx = this.get_usableWidth() - button.get_width();
		var min = 0;
		var max = 100;
		var x = (switchComp.get_pos() - min) / (max - min) * ucx;
		button.set_left(this.get_paddingLeft() + x);
		var extra = switchComp.findComponent("switch-button-sub-extra",null,null,"css");
		if(extra != null) {
			extra.set_top(this._component.get_height() / 2 - extra.get_height() / 2);
		}
	}
	,__class__: haxe_ui_components__$Switch_SwitchButtonLayout
});
var haxe_ui_components_TabBar = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = "haxe.ui.components.TabBar";
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
haxe_ui_components_TabBar.prototype = $extend(haxe_ui_core_Component.prototype,{
	removeTab: function(index) {
		this.behaviours.call("removeTab",index);
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$TabBar_Builder;
		this._internalEventsClass = haxe_ui_components__$TabBar_Events;
		this._defaultLayoutClass = haxe_ui_components__$TabBar_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_components__$TabBar_SelectedIndex,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedTab",haxe_ui_components__$TabBar_SelectedTab);
		this.behaviours.register("tabPosition",haxe_ui_components__$TabBar_TabPosition,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("top"));
		this.behaviours.register("tabCount",haxe_ui_components__$TabBar_TabCount);
		this.behaviours.register("closable",haxe_ui_components__$TabBar_Closable,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("removeTab",haxe_ui_components__$TabBar_RemoveTab);
	}
	,get_selectedIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	,get_selectedTab: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toComponent(this.behaviours.get("selectedTab"));
	}
	,set_selectedTab: function(value) {
		this.behaviours.set("selectedTab",haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedTab");
		return value;
	}
	,get_tabPosition: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		this.behaviours.set("tabPosition",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tabPosition");
		return value;
	}
	,get_tabCount: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("tabCount"));
	}
	,set_tabCount: function(value) {
		this.behaviours.set("tabCount",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tabCount");
		return value;
	}
	,get_closable: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		this.behaviours.set("closable",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"closable");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBar();
	}
	,__class__: haxe_ui_components_TabBar
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable",set_tabCount:"set_tabCount",get_tabCount:"get_tabCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedTab:"set_selectedTab",get_selectedTab:"get_selectedTab",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components__$TabBar_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TabBar.Layout"] = haxe_ui_components__$TabBar_Layout;
haxe_ui_components__$TabBar_Layout.__name__ = "haxe.ui.components._TabBar.Layout";
haxe_ui_components__$TabBar_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TabBar_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var left = this._component.findComponent("tabbar-scroll-left",null,false);
		var right = this._component.findComponent("tabbar-scroll-right",null,false);
		if(left != null && this.hidden(left) == false) {
			var x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x + 1);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
	,__class__: haxe_ui_components__$TabBar_Layout
});
var haxe_ui_components__$TabBar_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.Closable"] = haxe_ui_components__$TabBar_Closable;
haxe_ui_components__$TabBar_Closable.__name__ = "haxe.ui.components._TabBar.Closable";
haxe_ui_components__$TabBar_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		var buttons = builder._container.findComponents(null,haxe_ui_components__$TabBar_TabBarButton,1);
		var _g = 0;
		while(_g < buttons.length) {
			var b = buttons[_g];
			++_g;
			b.set_closable(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Closable
});
var haxe_ui_components__$TabBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedIndex"] = haxe_ui_components__$TabBar_SelectedIndex;
haxe_ui_components__$TabBar_SelectedIndex.__name__ = "haxe.ui.components._TabBar.SelectedIndex";
haxe_ui_components__$TabBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0))) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._container.get_childComponents().length - 1))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._container.get_childComponents().length - 1);
			return;
		}
		var tab = js_Boot.__cast(builder._container.getComponentAt(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._value)) , haxe_ui_components_Button);
		if(tab != null) {
			var selectedTab = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedTab();
			if(selectedTab != null) {
				selectedTab.removeClass("tabbar-button-selected");
			}
			tab.addClass("tabbar-button-selected");
			var rangeMin = Math.abs(builder._container.get_left());
			var rangeMax = rangeMin + this._component.get_width();
			var left = this._component.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
			var right = this._component.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
			if(left != null && left.get_hidden() == false) {
				rangeMax -= left.get_width();
				rangeMax -= this._component.get_layout().get_horizontalSpacing();
			}
			if(right != null && right.get_hidden() == false) {
				rangeMax -= right.get_width();
			}
			if(tab.get_left() < rangeMin || tab.get_left() + tab.get_width() > rangeMax) {
				var max = -(builder._container.get_width() - this._component.get_width());
				var x = -tab.get_left() + this._component.get_layout().get_paddingLeft();
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this._component.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				builder._containerPosition = x;
				builder._container.set_left(x);
			}
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_components__$TabBar_SelectedIndex
});
var haxe_ui_components__$TabBar_SelectedTab = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedTab"] = haxe_ui_components__$TabBar_SelectedTab;
haxe_ui_components__$TabBar_SelectedTab.__name__ = "haxe.ui.components._TabBar.SelectedTab";
haxe_ui_components__$TabBar_SelectedTab.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedTab.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(builder._container.findComponent("tabbar-button-selected",null,false,"css"));
	}
	,__class__: haxe_ui_components__$TabBar_SelectedTab
});
var haxe_ui_components__$TabBar_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabPosition"] = haxe_ui_components__$TabBar_TabPosition;
haxe_ui_components__$TabBar_TabPosition.__name__ = "haxe.ui.components._TabBar.TabPosition";
haxe_ui_components__$TabBar_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("bottom"))) {
			this._component.addClass(":bottom");
			var _g = 0;
			var _g1 = builder._container.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(":bottom");
			}
		} else {
			this._component.removeClass(":bottom");
			var _g2 = 0;
			var _g11 = builder._container.get_childComponents();
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				child1.removeClass(":bottom");
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_TabPosition
});
var haxe_ui_components__$TabBar_TabCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabCount"] = haxe_ui_components__$TabBar_TabCount;
haxe_ui_components__$TabBar_TabCount.__name__ = "haxe.ui.components._TabBar.TabCount";
haxe_ui_components__$TabBar_TabCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_TabCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._container.get_childComponents().length);
	}
	,__class__: haxe_ui_components__$TabBar_TabCount
});
var haxe_ui_components__$TabBar_RemoveTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.RemoveTab"] = haxe_ui_components__$TabBar_RemoveTab;
haxe_ui_components__$TabBar_RemoveTab.__name__ = "haxe.ui.components._TabBar.RemoveTab";
haxe_ui_components__$TabBar_RemoveTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_RemoveTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		if(index < builder._container.get_childComponents().length) {
			var selectedIndex = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedIndex();
			var newSelectedIndex = selectedIndex;
			if(index < selectedIndex) {
				--newSelectedIndex;
			} else if(index == selectedIndex) {
				(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(-1);
				newSelectedIndex = selectedIndex;
				if(newSelectedIndex > builder._container.get_childComponents().length - 2) {
					newSelectedIndex = builder._container.get_childComponents().length - 2;
				}
			}
			builder._container.removeComponentAt(index);
			this._component.dispatch(new haxe_ui_events_UIEvent("close",null,index));
			(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(newSelectedIndex);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TabBar_RemoveTab
});
var haxe_ui_components__$TabBar_Events = function(tabbar) {
	haxe_ui_events_Events.call(this,tabbar);
	this._tabbar = tabbar;
};
$hxClasses["haxe.ui.components._TabBar.Events"] = haxe_ui_components__$TabBar_Events;
haxe_ui_components__$TabBar_Events.__name__ = "haxe.ui.components._TabBar.Events";
haxe_ui_components__$TabBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TabBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabbar: null
	,register: function() {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _g = 0;
		var _g1 = builder._container.get_childComponents();
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.hasEvent("mousedown",$bind(this,this.onTabMouseDown)) == false) {
				t.registerEvent("mousedown",$bind(this,this.onTabMouseDown));
			}
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,unregister: function() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onMouseWheel: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(event.delta < 0) {
			builder.scrollLeft();
		} else {
			builder.scrollRight();
		}
	}
	,onTabMouseDown: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var button = event.target;
		var close = button.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var select = true;
		if(close != null) {
			select = !close.hitTest(event.screenX,event.screenY);
		}
		if(select == true) {
			this._tabbar.set_selectedIndex(builder._container.getComponentIndex(button));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Events
});
var haxe_ui_components__$TabBar_Builder = function(tabbar) {
	haxe_ui_core_CompositeBuilder.call(this,tabbar);
	this._tabbar = tabbar;
	this.createContainer();
};
$hxClasses["haxe.ui.components._TabBar.Builder"] = haxe_ui_components__$TabBar_Builder;
haxe_ui_components__$TabBar_Builder.__name__ = "haxe.ui.components._TabBar.Builder";
haxe_ui_components__$TabBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TabBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabbar: null
	,_container: null
	,create: function() {
		this.createContainer();
	}
	,createContainer: function() {
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this._tabbar.addComponent(this._container);
			this._tabbar.addClass(":bottom");
		}
	}
	,addTab: function(child) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponent(button);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	,addTabAt: function(child,index) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponentAt(button,index);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	,createTabBarButton: function(child) {
		var button = new haxe_ui_components__$TabBar_TabBarButton();
		button.addClass("tabbar-button");
		if(this._tabbar.get_tabPosition() == "bottom") {
			button.addClass(":bottom");
		}
		button.set_id(child.get_id());
		button.set_text(child.get_text());
		button.set_icon((js_Boot.__cast(child , haxe_ui_components_Button)).get_icon());
		button.set_closable(this._tabbar.get_closable());
		return button;
	}
	,get_numComponents: function() {
		return this._container.get_numComponents();
	}
	,addComponent: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight) {
			return this.addTab(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight) {
			return this.addTabAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight) {
			return this._container.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._container.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight) {
			return this._container.getComponentIndex(child);
		}
		return -1;
	}
	,setComponentIndex: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight) {
			return this._container.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._container.getComponentAt(index);
	}
	,validateComponentLayout: function() {
		if(this._tabbar.get_native() == true || this._container == null) {
			return false;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this._tabbar.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this._tabbar.get_layout().get_usableWidth() && this._tabbar.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return true;
	}
	,_scrollLeft: null
	,_scrollRight: null
	,showScrollButtons: function() {
		var _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.set_repeater(true);
			this._tabbar.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.set_repeater(true);
			this._tabbar.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e1) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	,_containerPosition: null
	,scrollLeft: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() + 20;
		if(x > this._tabbar.get_layout().get_paddingLeft()) {
			x = this._tabbar.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,scrollRight: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() - 20;
		var max = -(this._container.get_width() - this._tabbar.get_width());
		var left = this._tabbar.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		var right = this._tabbar.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this._tabbar.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,hideScrollButtons: function() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
	,__class__: haxe_ui_components__$TabBar_Builder
});
var haxe_ui_components__$TabBar_TabBarButton = function() {
	this._closable = false;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButton"] = haxe_ui_components__$TabBar_TabBarButton;
haxe_ui_components__$TabBar_TabBarButton.__name__ = "haxe.ui.components._TabBar.TabBarButton";
haxe_ui_components__$TabBar_TabBarButton.__super__ = haxe_ui_components_Button;
haxe_ui_components__$TabBar_TabBarButton.prototype = $extend(haxe_ui_components_Button.prototype,{
	_closable: null
	,get_closable: function() {
		return this._closable;
	}
	,set_closable: function(value) {
		if(this._closable == value) {
			return value;
		}
		this._closable = value;
		var existing = this.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(this._closable == true && existing == null) {
			this.set_iconPosition("far-left");
			var image = new haxe_ui_components_Image();
			image.set_id("tab-close-button");
			image.addClass("tab-close-button");
			image.set_includeInLayout(false);
			image.scriptAccess = false;
			image.set_onClick($bind(this,this.onCloseClicked));
			this.addComponent(image);
		} else if(existing != null) {
			this.removeComponent(existing);
		}
		return value;
	}
	,onCloseClicked: function(e) {
		var tabbar = this.findAncestor(null,haxe_ui_components_TabBar);
		var builder = js_Boot.__cast(tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = builder._container.getComponentIndex(this);
		var event = new haxe_ui_events_UIEvent("beforeClose",null,index);
		tabbar.dispatch(event);
		if(event.canceled == false) {
			if(index != -1) {
				tabbar.removeTab(index);
			}
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$TabBar_TabBarButtonLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TabBar_TabBarButton();
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButton
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable"})
});
var haxe_ui_components__$TabBar_TabBarButtonLayout = function() {
	haxe_ui_components_ButtonLayout.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButtonLayout"] = haxe_ui_components__$TabBar_TabBarButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.__name__ = "haxe.ui.components._TabBar.TabBarButtonLayout";
haxe_ui_components__$TabBar_TabBarButtonLayout.__super__ = haxe_ui_components_ButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.prototype = $extend(haxe_ui_components_ButtonLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_components_ButtonLayout.prototype.repositionChildren.call(this);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && this.get_component().get_componentWidth() > 0) {
			image.set_top((this.get_component().get_componentHeight() / 2 - image.get_componentHeight() / 2 | 0) + this.marginTop(image) - this.marginBottom(image));
			image.set_left(this.get_component().get_componentWidth() - image.get_componentWidth() - this.get_paddingRight() + this.marginLeft(image) - this.marginRight(image));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_components_ButtonLayout.prototype.calcAutoSize.call(this,exclusions);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null) {
			size.width += image.get_width() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButtonLayout
});
var haxe_ui_components_TextArea = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("value",haxe_ui_components__$TextArea_ValueBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true));
	}
	,get_placeholder: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		this.behaviours.set("placeholder",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"placeholder");
		return value;
	}
	,get_wrap: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("wrap"));
	}
	,set_wrap: function(value) {
		this.behaviours.set("wrap",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"wrap");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_wrap:"set_wrap",get_wrap:"get_wrap",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder"})
});
var haxe_ui_components__$TextArea_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextArea_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft());
			this.get_component().getTextInput().set_top(this.get_paddingTop());
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 1);
			this.get_component().getTextInput().set_height(size.height - 1);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
var haxe_ui_components__$TextArea_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
var haxe_ui_components__$TextArea_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var text = this._value != null ? haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,text);
	}
	,__class__: haxe_ui_components__$TextArea_TextBehaviour
});
var haxe_ui_components__$TextArea_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ValueBehaviour"] = haxe_ui_components__$TextArea_ValueBehaviour;
haxe_ui_components__$TextArea_ValueBehaviour.__name__ = "haxe.ui.components._TextArea.ValueBehaviour";
haxe_ui_components__$TextArea_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(this._component , haxe_ui_components_TextArea)).get_text());
	}
	,set: function(value) {
		(js_Boot.__cast(this._component , haxe_ui_components_TextArea)).set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,__class__: haxe_ui_components__$TextArea_ValueBehaviour
});
var haxe_ui_components__$TextArea_WrapBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		textarea.getTextInput().set_wordWrap(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
var haxe_ui_components__$TextArea_TextAreaHelper = function() { };
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
haxe_ui_components__$TextArea_TextAreaHelper.validateText = function(textarea,text) {
	if(text == null) {
		text = "";
	}
	if(textarea.get_focus() == false && textarea.get_placeholder() != null) {
		if(text == "") {
			text = textarea.get_placeholder();
			textarea.addClass(":empty");
		} else {
			textarea.removeClass(":empty");
		}
	} else {
		var placeholderVisible = text.length == 0;
		if(placeholderVisible == true) {
			text = "";
			textarea.removeClass(":empty");
		}
	}
	textarea.getTextInput().set_text("" + text);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout");
	}
};
var haxe_ui_components__$TextArea_Events = function(textarea) {
	haxe_ui_events_Events.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextArea_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textarea: null
	,register: function() {
		var _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.hasClass(":empty") == false) {
					_gthis._textarea.set_text(_gthis._textarea.getTextInput().get_text());
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				var hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				var vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		var hscroll1 = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll1 != null && hscroll1.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll1.registerEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll1 = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll1 != null && vscroll1.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll1.registerEvent("change",$bind(this,this.onScrollChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
	}
	,unregister: function() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseWheel: function(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			var step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				var _g = vscroll;
				_g.set_pos(_g.get_pos() - step);
			} else if(event.delta < 0) {
				var _g1 = vscroll;
				_g1.set_pos(_g1.get_pos() + step);
			}
		}
	}
	,onScrollChange: function(event) {
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	,onMouseDown: function(event) {
		this._textarea.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_Events
});
var haxe_ui_components__$TextArea_TextAreaBuilder = function(textarea) {
	haxe_ui_core_CompositeBuilder.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textarea: null
	,checkScrolls: function() {
		if(this._textarea.get_native() == true) {
			return;
		}
		var textInput = this._textarea.getTextInput();
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,createHScroll: function() {
		var hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	,createVScroll: function() {
		var vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(this._component.hasTextInput() == true) {
			this._component.getTextInput().set_textStyle(style);
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaBuilder
});
var haxe_ui_components_TextField = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("value",haxe_ui_components__$TextField_ValueBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
	}
	,get_password: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("password"));
	}
	,set_password: function(value) {
		this.behaviours.set("password",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"password");
		return value;
	}
	,get_maxChars: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("maxChars"));
	}
	,set_maxChars: function(value) {
		this.behaviours.set("maxChars",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"maxChars");
		return value;
	}
	,get_restrictChars: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("restrictChars"));
	}
	,set_restrictChars: function(value) {
		this.behaviours.set("restrictChars",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"restrictChars");
		return value;
	}
	,get_placeholder: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		this.behaviours.set("placeholder",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"placeholder");
		return value;
	}
	,get_icon: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		this.behaviours.set("icon",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password"})
});
var haxe_ui_components__$TextField_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextField_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextField_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$TextField_PasswordBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	originalValue: null
	,validateData: function() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		textfield.getTextInput().set_password(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextField_PasswordBehaviour
});
var haxe_ui_components__$TextField_MaxCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
var haxe_ui_components__$TextField_RestrictCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	regexp: null
	,validateData: function() {
		var excludeEReg = new EReg("\\^(.-.|.)","gu");
		var excludeChars = "";
		var includeChars = excludeEReg.map(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		});
		var testRegexpParts = [];
		if(includeChars.length > 0) {
			testRegexpParts.push("[^" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
});
var haxe_ui_components__$TextField_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
var haxe_ui_components__$TextField_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		if(this._value != null && haxe_ui_util__$Variant_Variant_$Impl_$.neq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromString(""))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(textfield.getTextInput().get_text());
		}
	}
	,__class__: haxe_ui_components__$TextField_TextBehaviour
});
var haxe_ui_components__$TextField_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.ValueBehaviour"] = haxe_ui_components__$TextField_ValueBehaviour;
haxe_ui_components__$TextField_ValueBehaviour.__name__ = "haxe.ui.components._TextField.ValueBehaviour";
haxe_ui_components__$TextField_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextField_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(this._component , haxe_ui_components_TextField)).get_text());
	}
	,set: function(value) {
		(js_Boot.__cast(this._component , haxe_ui_components_TextField)).set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,__class__: haxe_ui_components__$TextField_ValueBehaviour
});
var haxe_ui_components__$TextField_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		var icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.scriptAccess = false;
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		}
	}
	,__class__: haxe_ui_components__$TextField_IconBehaviour
});
var haxe_ui_components__$TextField_TextFieldHelper = function() { };
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
haxe_ui_components__$TextField_TextFieldHelper.validateText = function(textfield,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
		text = HxOverrides.substr(text,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		text = text.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(text.length == 0) {
				text = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(text != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			if(text == textfield.get_placeholder()) {
				text = "";
			}
			textfield.set_password(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_text("" + text);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout");
	}
};
var haxe_ui_components__$TextField_Events = function(textfield) {
	haxe_ui_events_Events.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextField_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textfield: null
	,register: function() {
		var _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.hasClass(":empty") == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
	}
	,unregister: function() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseDown: function(event) {
		this._textfield.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_Events
});
var haxe_ui_components__$TextField_Builder = function(textfield) {
	haxe_ui_core_CompositeBuilder.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextField_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textfield: null
	,applyStyle: function(style) {
		if(style.icon != null) {
			this._textfield.set_icon(style.icon);
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
		}
	}
	,__class__: haxe_ui_components__$TextField_Builder
});
var haxe_ui_components_Toggle = function() {
	haxe_ui_components_Button.call(this);
	this.set_toggle(true);
};
$hxClasses["haxe.ui.components.Toggle"] = haxe_ui_components_Toggle;
haxe_ui_components_Toggle.__name__ = "haxe.ui.components.Toggle";
haxe_ui_components_Toggle.__super__ = haxe_ui_components_Button;
haxe_ui_components_Toggle.prototype = $extend(haxe_ui_components_Button.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Toggle();
	}
	,__class__: haxe_ui_components_Toggle
});
var haxe_ui_components_VGrid = function() {
	haxe_ui_core_Component.call(this);
	this.set_columns(1);
};
$hxClasses["haxe.ui.components.VGrid"] = haxe_ui_components_VGrid;
haxe_ui_components_VGrid.__name__ = "haxe.ui.components.VGrid";
haxe_ui_components_VGrid.__super__ = haxe_ui_core_Component;
haxe_ui_components_VGrid.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	,_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns != value) {
			this._columns = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VGrid();
	}
	,__class__: haxe_ui_components_VGrid
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_VerticalProgress = function() {
	haxe_ui_components_Progress.call(this);
};
$hxClasses["haxe.ui.components.VerticalProgress"] = haxe_ui_components_VerticalProgress;
haxe_ui_components_VerticalProgress.__name__ = "haxe.ui.components.VerticalProgress";
haxe_ui_components_VerticalProgress.__super__ = haxe_ui_components_Progress;
haxe_ui_components_VerticalProgress.prototype = $extend(haxe_ui_components_Progress.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerBehaviours: function() {
		haxe_ui_components_Progress.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_VerticalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Progress.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalProgress();
	}
	,registerComposite: function() {
		haxe_ui_components_Progress.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_VerticalRangeLayout;
	}
	,__class__: haxe_ui_components_VerticalProgress
});
var haxe_ui_components_VerticalRange = function() {
	haxe_ui_components_Range.call(this);
};
$hxClasses["haxe.ui.components.VerticalRange"] = haxe_ui_components_VerticalRange;
haxe_ui_components_VerticalRange.__name__ = "haxe.ui.components.VerticalRange";
haxe_ui_components_VerticalRange.__super__ = haxe_ui_components_Range;
haxe_ui_components_VerticalRange.prototype = $extend(haxe_ui_components_Range.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_VerticalRangeLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_VerticalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalRange();
	}
	,__class__: haxe_ui_components_VerticalRange
});
var haxe_ui_components_VerticalRangePosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.VerticalRangePosFromCoord"] = haxe_ui_components_VerticalRangePosFromCoord;
haxe_ui_components_VerticalRangePosFromCoord.__name__ = "haxe.ui.components.VerticalRangePosFromCoord";
haxe_ui_components_VerticalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components_VerticalRangePosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var ypos = p.y - range.get_layout().get_paddingTop();
		var ucy = range.get_layout().get_usableHeight();
		if(ypos >= ucy) {
			ypos = ucy;
		}
		var m = range.get_max() - range.get_min();
		var d = ucy / m;
		var v = ypos;
		var p1 = v / d;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(range.get_max() - p1);
	}
	,__class__: haxe_ui_components_VerticalRangePosFromCoord
});
var haxe_ui_components_VerticalRangeLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.VerticalRangeLayout"] = haxe_ui_components_VerticalRangeLayout;
haxe_ui_components_VerticalRangeLayout.__name__ = "haxe.ui.components.VerticalRangeLayout";
haxe_ui_components_VerticalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_VerticalRangeLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			var ucy = this.get_usableHeight();
			var m = range.get_max() - range.get_min();
			var d = ucy / m;
			var startInPixels = range.get_start() * d - range.get_min() * d;
			var endInPixels = range.get_end() * d - range.get_min() * d;
			var cy = Math.abs(endInPixels - startInPixels);
			if(cy < 0) {
				cy = 0;
			} else if(cy > ucy) {
				cy = ucy;
			}
			if(cy == 0) {
				value.set_height(0);
				value.set_hidden(true);
			} else {
				value.set_height(cy);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		var ucy = this.get_usableHeight();
		var m = range.get_max() - range.get_min();
		var d = ucy / m;
		var startInPixels = ucy - value.get_height() - (range.get_start() * d - range.get_min() * d);
		value.set_left(this.get_paddingLeft());
		value.set_top(this.get_paddingTop() + startInPixels);
	}
	,__class__: haxe_ui_components_VerticalRangeLayout
});
var haxe_ui_components_VerticalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VerticalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalScroll();
	}
	,__class__: haxe_ui_components_VerticalScroll
});
var haxe_ui_components__$VerticalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var ypos = p.y;
		var minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		var maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = ypos - minY;
		var value = scroll.get_min() + v / ucy * m;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
	}
	,__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
var haxe_ui_components__$VerticalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			var _g = scroll;
			_g.set_pos(_g.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			var _g1 = scroll;
			_g1.set_pos(_g1.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$VerticalScroll_VerticalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucy = this.get_usableHeight();
			var thumbHeight = scroll.get_pageSize() / m * ucy;
			if(thumbHeight < this.get_innerWidth()) {
				thumbHeight = this.get_innerWidth();
			} else if(thumbHeight > ucy) {
				thumbHeight = ucy;
			}
			if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
				thumb.set_height(thumbHeight);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
var haxe_ui_components_VerticalSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.VerticalSlider"] = haxe_ui_components_VerticalSlider;
haxe_ui_components_VerticalSlider.__name__ = "haxe.ui.components.VerticalSlider";
haxe_ui_components_VerticalSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_VerticalSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	registerComposite: function() {
		haxe_ui_components_Slider.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_VerticalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$VerticalSlider_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Slider.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalSlider();
	}
	,__class__: haxe_ui_components_VerticalSlider
});
var haxe_ui_components_VerticalSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.VerticalSliderLayout"] = haxe_ui_components_VerticalSliderLayout;
haxe_ui_components_VerticalSliderLayout.__name__ = "haxe.ui.components.VerticalSliderLayout";
haxe_ui_components_VerticalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_VerticalSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var range = this.findComponent(null,haxe_ui_components_Range);
		var rangeValue = range.findComponent("range-value");
		var startThumb = this.findComponent("start-thumb");
		var endThumb = this.findComponent("end-thumb");
		if(startThumb != null) {
			startThumb.set_top(range.get_top() + rangeValue.get_top() + rangeValue.get_height() - startThumb.get_height() / 2);
		}
		endThumb.set_top(range.get_top() + rangeValue.get_top() - endThumb.get_height() / 2);
	}
	,__class__: haxe_ui_components_VerticalSliderLayout
});
var haxe_ui_components__$VerticalSlider_Builder = function(component) {
	haxe_ui_components_SliderBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalSlider.Builder"] = haxe_ui_components__$VerticalSlider_Builder;
haxe_ui_components__$VerticalSlider_Builder.__name__ = "haxe.ui.components._VerticalSlider.Builder";
haxe_ui_components__$VerticalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
haxe_ui_components__$VerticalSlider_Builder.prototype = $extend(haxe_ui_components_SliderBuilder.prototype,{
	createValueComponent: function() {
		return new haxe_ui_components_VerticalRange();
	}
	,__class__: haxe_ui_components__$VerticalSlider_Builder
});
var haxe_ui_containers_Absolute = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
};
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = "haxe.ui.containers.Absolute";
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Absolute.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Absolute();
	}
	,__class__: haxe_ui_containers_Absolute
});
var haxe_ui_containers_Accordion = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.Accordion"] = haxe_ui_containers_Accordion;
haxe_ui_containers_Accordion.__name__ = "haxe.ui.containers.Accordion";
haxe_ui_containers_Accordion.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_Accordion.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$Accordion_Events;
		this._compositeBuilderClass = haxe_ui_containers__$Accordion_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("pageIndex",haxe_ui_containers__$Accordion_PageIndex,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedPage",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_pageIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("pageIndex"));
	}
	,set_pageIndex: function(value) {
		this.behaviours.set("pageIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageIndex");
		return value;
	}
	,get_selectedPage: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toComponent(this.behaviours.get("selectedPage"));
	}
	,set_selectedPage: function(value) {
		this.behaviours.set("selectedPage",haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedPage");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Accordion();
	}
	,__class__: haxe_ui_containers_Accordion
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_selectedPage:"set_selectedPage",get_selectedPage:"get_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var haxe_ui_containers__$Accordion_PageIndex = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Accordion.PageIndex"] = haxe_ui_containers__$Accordion_PageIndex;
haxe_ui_containers__$Accordion_PageIndex.__name__ = "haxe.ui.containers._Accordion.PageIndex";
haxe_ui_containers__$Accordion_PageIndex.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$Accordion_PageIndex.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1))) {
			return;
		}
		var buttons = this._component.findComponents(null,haxe_ui_components_Button,1);
		var selectedIndex = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var button = buttons[selectedIndex];
		var panel = this._component.getComponentAt(this._component.getComponentIndex(button) + 1);
		panel.swapClass(":expanded",":collapsed");
		panel.set_hidden(false);
		button.set_selected(true);
		var _g = 0;
		while(_g < buttons.length) {
			var b = buttons[_g];
			++_g;
			if(b != button) {
				var tempIndex = this._component.getComponentIndex(b);
				var tempPanel = this._component.getComponentAt(tempIndex + 1);
				b.set_selected(false);
				tempPanel.swapClass(":collapsed",":expanded");
			}
		}
	}
	,__class__: haxe_ui_containers__$Accordion_PageIndex
});
var haxe_ui_containers__$Accordion_Events = function(accordion) {
	haxe_ui_events_Events.call(this,accordion);
	this._accordion = accordion;
};
$hxClasses["haxe.ui.containers._Accordion.Events"] = haxe_ui_containers__$Accordion_Events;
haxe_ui_containers__$Accordion_Events.__name__ = "haxe.ui.containers._Accordion.Events";
haxe_ui_containers__$Accordion_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$Accordion_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_accordion: null
	,register: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			if(button.hasEvent("change",$bind(this,this.onButtonChanged)) == false) {
				button.registerEvent("change",$bind(this,this.onButtonChanged));
			}
		}
	}
	,unregister: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			button.unregisterEvent("change",$bind(this,this.onButtonChanged));
		}
	}
	,onButtonChanged: function(event) {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var button = event.target;
		var index = buttons.indexOf(button);
		if(button.get_selected() == true) {
			if(index == this._accordion.get_pageIndex()) {
				return;
			}
			this._accordion.set_pageIndex(index);
		} else if(index == this._accordion.get_pageIndex()) {
			button.set_selected(true);
		}
	}
	,__class__: haxe_ui_containers__$Accordion_Events
});
var haxe_ui_containers__$Accordion_Builder = function(accordion) {
	haxe_ui_core_CompositeBuilder.call(this,accordion);
	this._accordion = accordion;
};
$hxClasses["haxe.ui.containers._Accordion.Builder"] = haxe_ui_containers__$Accordion_Builder;
haxe_ui_containers__$Accordion_Builder.__name__ = "haxe.ui.containers._Accordion.Builder";
haxe_ui_containers__$Accordion_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Accordion_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_accordion: null
	,onReady: function() {
		haxe_ui_core_CompositeBuilder.prototype.onReady.call(this);
		var _g = 0;
		var _g1 = this._accordion.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.set_animatable(true);
		}
	}
	,addComponent: function(child) {
		if(!child.hasClass("accordion-button") && !child.hasClass("accordion-page")) {
			var button = new haxe_ui_components_Button();
			button.set_text(child.get_text());
			button.set_styleNames("accordion-button");
			button.set_toggle(true);
			button.scriptAccess = false;
			this._accordion.addComponent(button);
			child.set_animatable(false);
			child.set_percentWidth(100);
			child.addClass("accordion-page");
			var c = this._accordion.addComponent(child);
			if(this._accordion.get_pageIndex() == -1) {
				child.set_percentHeight(100);
				this._accordion.set_pageIndex(0);
			} else {
				child.set_hidden(true);
			}
			child.set_onAnimationEnd(function(e) {
				if(e.target.hasClass(":collapsed")) {
					e.target.set_hidden(true);
				}
			});
			this._component.registerInternalEvents(null,true);
			return c;
		}
		return null;
	}
	,__class__: haxe_ui_containers__$Accordion_Builder
});
var haxe_ui_containers_CalendarView = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.CalendarView"] = haxe_ui_containers_CalendarView;
haxe_ui_containers_CalendarView.__name__ = "haxe.ui.containers.CalendarView";
haxe_ui_containers_CalendarView.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_CalendarView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$CalendarView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$CalendarView_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedDate",haxe_ui_containers__$CalendarView_SelectedDateBehaviour);
	}
	,get_selectedDate: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		this.behaviours.set("selectedDate",haxe_ui_util__$Variant_Variant_$Impl_$.fromDate(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedDate");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_CalendarView();
	}
	,__class__: haxe_ui_containers_CalendarView
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate"})
});
var haxe_ui_containers__$CalendarView_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._CalendarView.SelectedDateBehaviour"] = haxe_ui_containers__$CalendarView_SelectedDateBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__name__ = "haxe.ui.containers._CalendarView.SelectedDateBehaviour";
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromDate(this._component.findComponent(null,haxe_ui_components_Calendar).get_selectedDate());
	}
	,set: function(value) {
		this._component.findComponent(null,haxe_ui_components_Calendar).set_selectedDate(haxe_ui_util__$Variant_Variant_$Impl_$.toDate(value));
	}
	,__class__: haxe_ui_containers__$CalendarView_SelectedDateBehaviour
});
var haxe_ui_containers__$CalendarView_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers._CalendarView.Events"] = haxe_ui_containers__$CalendarView_Events;
haxe_ui_containers__$CalendarView_Events.__name__ = "haxe.ui.containers._CalendarView.Events";
haxe_ui_containers__$CalendarView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$CalendarView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		var button = this._target.findComponent("prev-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onPrevMonth));
		}
		var button1 = this._target.findComponent("next-month");
		if(button1 != null && button1.hasEvent("click") == false) {
			button1.registerEvent("click",$bind(this,this.onNextMonth));
		}
		var stepper = this._target.findComponent("current-year");
		if(stepper != null && stepper.hasEvent("change") == false) {
			stepper.registerEvent("change",$bind(this,this.onYearChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("datechange",$bind(this,this.onDateChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("datechange",$bind(this,this.onDateChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("change",$bind(this,this.onCalendarChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onPrevMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
	}
	,onNextMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
	}
	,onYearChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		if(stepper.get_pos() > calendar.get_date().getFullYear()) {
			calendar.nextYear();
		} else if(stepper.get_pos() < calendar.get_date().getFullYear()) {
			calendar.previousYear();
		}
	}
	,onDateChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var monthName = haxe_ui_containers_CalendarView.MONTH_NAMES[calendar.get_date().getMonth()];
		this._target.findComponent("current-month",haxe_ui_components_Label).set_text(monthName + "  " + calendar.get_date().getFullYear());
	}
	,onCalendarChange: function(event) {
		this._target.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMouseWheel: function(event) {
		if(event.delta >= 1) {
			this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
		} else {
			this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
		}
	}
	,__class__: haxe_ui_containers__$CalendarView_Events
});
var haxe_ui_containers__$CalendarView_Builder = function(calendarView) {
	haxe_ui_core_CompositeBuilder.call(this,calendarView);
	this._calendarView = calendarView;
};
$hxClasses["haxe.ui.containers._CalendarView.Builder"] = haxe_ui_containers__$CalendarView_Builder;
haxe_ui_containers__$CalendarView_Builder.__name__ = "haxe.ui.containers._CalendarView.Builder";
haxe_ui_containers__$CalendarView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$CalendarView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendarView: null
	,create: function() {
		var box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		var button = new haxe_ui_components_Button();
		button.set_id("prev-month");
		box.addComponent(button);
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_horizontalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("current-month");
		var now = new Date();
		label.set_text(haxe_ui_containers_CalendarView.MONTH_NAMES[now.getMonth()] + "  " + now.getFullYear());
		hbox.addComponent(label);
		var stepper = new haxe_ui_components_Stepper();
		stepper.set_id("current-year");
		stepper.set_min(1000);
		stepper.set_max(2999);
		stepper.set_pos(2019);
		stepper.set_repeater(false);
		hbox.addComponent(stepper);
		box.addComponent(hbox);
		var button1 = new haxe_ui_components_Button();
		button1.set_id("next-month");
		button1.set_horizontalAlign("right");
		box.addComponent(button1);
		this._calendarView.addComponent(box);
		var calendar = new haxe_ui_components_Calendar();
		this._calendarView.addComponent(calendar);
	}
	,__class__: haxe_ui_containers__$CalendarView_Builder
});
var haxe_ui_containers_ContinuousHBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
};
$hxClasses["haxe.ui.containers.ContinuousHBox"] = haxe_ui_containers_ContinuousHBox;
haxe_ui_containers_ContinuousHBox.__name__ = "haxe.ui.containers.ContinuousHBox";
haxe_ui_containers_ContinuousHBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_ContinuousHBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ContinuousHBox();
	}
	,__class__: haxe_ui_containers_ContinuousHBox
});
var haxe_ui_containers_Group = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Group"] = haxe_ui_containers_Group;
haxe_ui_containers_Group.__name__ = "haxe.ui.containers.Group";
haxe_ui_containers_Group.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Group.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("componentGroup",haxe_ui_behaviours_DataBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("group" + haxe_ui_util_GUID.uuid()));
	}
	,get_componentGroup: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		this.behaviours.set("componentGroup",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Group();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Group_Builder;
	}
	,__class__: haxe_ui_containers_Group
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup"})
});
var haxe_ui_containers__$Group_Builder = function(group) {
	haxe_ui_core_CompositeBuilder.call(this,group);
	this._group = group;
};
$hxClasses["haxe.ui.containers._Group.Builder"] = haxe_ui_containers__$Group_Builder;
haxe_ui_containers__$Group_Builder.__name__ = "haxe.ui.containers._Group.Builder";
haxe_ui_containers__$Group_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Group_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_group: null
	,addComponent: function(child) {
		this.childAdd(child);
		return haxe_ui_core_CompositeBuilder.prototype.addComponent.call(this,child);
	}
	,addComponentAt: function(child,index) {
		this.childAdd(child);
		return haxe_ui_core_CompositeBuilder.prototype.addComponentAt.call(this,child,index);
	}
	,childAdd: function(child) {
		if(((child) instanceof haxe_ui_core_InteractiveComponent)) {
			this.processGroupChild(child);
		} else {
			var interactiveChildren = child.findComponents(null,haxe_ui_core_InteractiveComponent);
			var _g = 0;
			while(_g < interactiveChildren.length) {
				var interactiveChild = interactiveChildren[_g];
				++_g;
				this.processGroupChild(interactiveChild);
			}
		}
	}
	,processGroupChild: function(child) {
		if(((child) instanceof haxe_ui_components_OptionBox)) {
			if(this._group.get_componentGroup() == null) {
				this._group.set_componentGroup("group" + haxe_ui_util_GUID.uuid());
			}
			(js_Boot.__cast(child , haxe_ui_components_OptionBox)).set_componentGroup(this._group.get_componentGroup());
		}
		if(child.hasEvent("change",$bind(this,this.childChangeHandler)) == false) {
			child.registerEvent("change",$bind(this,this.childChangeHandler));
		}
	}
	,childChangeHandler: function(e) {
		var child = e.target;
		this._group.dispatch(e.clone());
	}
	,__class__: haxe_ui_containers__$Group_Builder
});
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var haxe_ui_containers_Header = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = "haxe.ui.containers.Header";
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_Header.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Header();
	}
	,__class__: haxe_ui_containers_Header
});
var haxe_ui_containers_IVirtualContainer = function() { };
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
haxe_ui_containers_IVirtualContainer.prototype = {
	get_itemWidth: null
	,set_itemWidth: null
	,get_itemHeight: null
	,set_itemHeight: null
	,get_itemCount: null
	,set_itemCount: null
	,get_variableItemSize: null
	,set_variableItemSize: null
	,get_virtual: null
	,set_virtual: null
	,get_hscrollPos: null
	,set_hscrollPos: null
	,get_hscrollMax: null
	,set_hscrollMax: null
	,get_hscrollPageSize: null
	,set_hscrollPageSize: null
	,get_vscrollPos: null
	,set_vscrollPos: null
	,get_vscrollMax: null
	,set_vscrollMax: null
	,get_vscrollPageSize: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,set_itemRenderer: null
	,get_itemRendererFunction: null
	,set_itemRendererFunction: null
	,get_itemRendererClass: null
	,set_itemRendererClass: null
	,__class__: haxe_ui_containers_IVirtualContainer
	,__properties__: {set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRendererFunction:"set_itemRendererFunction",get_itemRendererFunction:"get_itemRendererFunction",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_virtual:"set_virtual",get_virtual:"get_virtual",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth"}
};
var haxe_ui_containers_ScrollView = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_Component.prototype,{
	validateComponentInternal: function() {
		if(this.get_native() == true) {
			haxe_ui_core_Component.prototype.validateComponentInternal.call(this);
			return;
		}
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_Component.prototype.validateComponentInternal.call(this);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	,ensureVisible: function(component) {
		var contents = this.findComponent("scrollview-contents",null,false,"css");
		var hscroll = this.findComponent(null,haxe_ui_components_HorizontalScroll);
		var vscroll = this.findComponent(null,haxe_ui_components_VerticalScroll);
		var rect = new haxe_ui_geom_Rectangle(contents.get_componentClipRect().left,contents.get_componentClipRect().top,contents.get_componentClipRect().width,contents.get_componentClipRect().height);
		if(hscroll != null && hscroll.get_hidden() == false) {
			rect.height -= hscroll.get_height();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			rect.width -= vscroll.get_width();
		}
		if(hscroll != null) {
			var hpos = hscroll.get_pos();
			if(component.get_left() + component.get_width() > hpos + rect.width) {
				hscroll.set_pos(component.get_left() + component.get_width() - rect.width);
			} else if(component.get_left() < hpos) {
				hscroll.set_pos(component.get_left());
			}
		}
		if(vscroll != null) {
			var vpos = vscroll.get_pos();
			if(component.get_top() + component.get_height() > vpos + rect.height) {
				var offset = contents.get_layout().get_paddingTop() + contents.get_layout().get_paddingBottom();
				vscroll.set_pos(component.get_top() + component.get_height() - rect.height + offset);
			} else if(component.get_top() < vpos) {
				vscroll.set_pos(component.get_top());
			}
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("drag"));
	}
	,get_virtual: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		this.behaviours.set("virtual",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"virtual");
		return value;
	}
	,get_contentLayoutName: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("contentLayoutName"));
	}
	,set_contentLayoutName: function(value) {
		this.behaviours.set("contentLayoutName",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"contentLayoutName");
		return value;
	}
	,get_contentWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("contentWidth"));
	}
	,set_contentWidth: function(value) {
		this.behaviours.set("contentWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"contentWidth");
		return value;
	}
	,get_percentContentWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("percentContentWidth"));
	}
	,set_percentContentWidth: function(value) {
		this.behaviours.set("percentContentWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentContentWidth");
		return value;
	}
	,get_contentHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("contentHeight"));
	}
	,set_contentHeight: function(value) {
		this.behaviours.set("contentHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"contentHeight");
		return value;
	}
	,get_percentContentHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("percentContentHeight"));
	}
	,set_percentContentHeight: function(value) {
		this.behaviours.set("percentContentHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentContentHeight");
		return value;
	}
	,get_hscrollPos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("hscrollPos"));
	}
	,set_hscrollPos: function(value) {
		this.behaviours.set("hscrollPos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"hscrollPos");
		return value;
	}
	,get_hscrollMax: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("hscrollMax"));
	}
	,set_hscrollMax: function(value) {
		this.behaviours.set("hscrollMax",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"hscrollMax");
		return value;
	}
	,get_hscrollPageSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("hscrollPageSize"));
	}
	,set_hscrollPageSize: function(value) {
		this.behaviours.set("hscrollPageSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"hscrollPageSize");
		return value;
	}
	,get_vscrollPos: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("vscrollPos"));
	}
	,set_vscrollPos: function(value) {
		this.behaviours.set("vscrollPos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollPos");
		return value;
	}
	,get_vscrollMax: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("vscrollMax"));
	}
	,set_vscrollMax: function(value) {
		this.behaviours.set("vscrollMax",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollMax");
		return value;
	}
	,get_vscrollPageSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("vscrollPageSize"));
	}
	,set_vscrollPageSize: function(value) {
		this.behaviours.set("vscrollPageSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollPageSize");
		return value;
	}
	,get_scrollMode: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("scrollMode"));
	}
	,set_scrollMode: function(value) {
		this.behaviours.set("scrollMode",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"scrollMode");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",set_contentLayoutName:"set_contentLayoutName",get_contentLayoutName:"get_contentLayoutName",set_virtual:"set_virtual",get_virtual:"get_virtual"})
});
var haxe_ui_containers_ListView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = "haxe.ui.containers.ListView";
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_ListView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_itemRendererFunction: null
	,get_itemRendererFunction: function() {
		return this._itemRendererFunction;
	}
	,set_itemRendererFunction: function(value) {
		if(this._itemRendererFunction != value) {
			this._itemRendererFunction = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$ListView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ListView_SelectedIndexBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$ListView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$ListView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$ListView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$ListView_SelectionModeBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(500));
	}
	,get_dataSource: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		this.behaviours.set("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	,get_itemWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		this.behaviours.set("itemWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemWidth");
		return value;
	}
	,get_itemHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		this.behaviours.set("itemHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemHeight");
		return value;
	}
	,get_itemCount: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		this.behaviours.set("itemCount",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemCount");
		return value;
	}
	,get_variableItemSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		this.behaviours.set("variableItemSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"variableItemSize");
		return value;
	}
	,get_selectedIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.set("selectedItem",value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItem");
		return value;
	}
	,get_selectedIndices: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		this.behaviours.set("selectedIndices",haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndices");
		return value;
	}
	,get_selectedItems: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		this.behaviours.set("selectedItems",haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItems");
		return value;
	}
	,get_selectionMode: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		this.behaviours.set("selectionMode",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectionMode");
		return value;
	}
	,get_longPressSelectionTime: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		this.behaviours.set("longPressSelectionTime",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"longPressSelectionTime");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ListView();
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ListViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$ListView_ListViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalVirtualLayout;
	}
	,__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this.__onComponentEvent != null) {
			this.unregisterEvent("itemComponentEvent",this.__onComponentEvent);
			this.__onComponentEvent = null;
		}
		if(value != null) {
			this.__onComponentEvent = value;
			this.registerEvent("itemComponentEvent",value);
		}
		return value;
	}
	,__class__: haxe_ui_containers_ListView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_onComponentEvent:"set_onComponentEvent",set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRendererFunction:"set_itemRendererFunction",get_itemRendererFunction:"get_itemRendererFunction"})
});
var haxe_ui_containers_ScrollViewEvents = function(scrollview) {
	this._containerEventsPaused = false;
	this._lastMousePos = null;
	this._movementThreshold = 3;
	this._inertia = null;
	haxe_ui_events_Events.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_ScrollViewEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scrollview: null
	,register: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,unregister: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onContentsResized: function(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	,onHScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onVScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,_offset: null
	,_inertia: null
	,onMouseDown: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		var componentOffset = this._scrollview.getComponentOffset();
		if(hscroll != null && hscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		if(vscroll != null && vscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			var tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			var tmp1 = vscroll.get_pos();
			this._offset.y = tmp1 + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			var tmp2 = Date.now();
			this._inertia.timestamp = tmp2 / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	,_movementThreshold: null
	,_lastMousePos: null
	,onMouseMove: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			var distX = Math.abs(event.screenX - this._lastMousePos.x);
			if(distX > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			var distY = Math.abs(event.screenY - this._lastMousePos.y);
			if(distY > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,_containerEventsPaused: null
	,pauseContainerEvents: function() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	,resumeContainerEvents: function() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	,onContainerEventsStatusChanged: function() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			var builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			if(builder.autoHideScrolls == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.set_hidden(false);
					}
					if(vscroll != null) {
						vscroll.set_hidden(false);
					}
				} else {
					if(hscroll != null) {
						hscroll.set_hidden(true);
					}
					if(vscroll != null) {
						vscroll.set_hidden(true);
					}
				}
			}
		}
	}
	,onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			var now = Date.now() / 1000;
			var elapsed = (now - this._inertia.timestamp) * 1000;
			var deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			var deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v1 = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v1 + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			var tmp = Date.now();
			this._inertia.timestamp = tmp / 1000;
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				var tmp1 = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp1);
			} else {
				var tmp2 = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp2);
			}
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				var tmp3 = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp3);
			} else {
				var tmp4 = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp4);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	,inertialScroll: function() {
		var elapsed = (Date.now() / 1000 - this._inertia.timestamp) * 1000;
		var finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			var deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this._scrollview.get_hscrollPos();
				var newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			var deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos1 = this._scrollview.get_vscrollPos();
				var newPos1 = 0;
				if(this._inertia.direction.y == 0) {
					newPos1 = this._inertia.target.y - deltaY;
				} else {
					newPos1 = this._inertia.target.y + deltaY;
				}
				if(newPos1 < 0) {
					newPos1 = 0;
				} else if(newPos1 > this._scrollview.get_vscrollMax()) {
					newPos1 = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos1);
				finishedY = newPos1 == oldPos1 || newPos1 == 0 || newPos1 == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,onMouseWheel: function(event) {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			event.cancel();
			if(event.delta > 0) {
				var _g = vscroll;
				_g.set_pos(_g.get_pos() - 50);
			} else if(event.delta < 0) {
				var _g1 = vscroll;
				_g1.set_pos(_g1.get_pos() + 50);
			}
		}
	}
	,__class__: haxe_ui_containers_ScrollViewEvents
});
var haxe_ui_containers_ListViewEvents = function(listview) {
	haxe_ui_containers_ScrollViewEvents.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers.ListViewEvents"] = haxe_ui_containers_ListViewEvents;
haxe_ui_containers_ListViewEvents.__name__ = "haxe.ui.containers.ListViewEvents";
haxe_ui_containers_ListViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ListViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_listview: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		var _this = this._listview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			instance.addClass(":selected",true,true);
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			instance.removeClass(":selected",true,true);
		}
	}
	,onRendererMouseDown: function(e) {
		if(this._listview.get_selectionMode() == "multiple-long-press") {
			if(this._listview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		} else {
			e.target.addClass(":hover");
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp;
		var __onMouseClick;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e1) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e2) {
			_e2.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},500);
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("listview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent)) {
				return;
			}
		}
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._listview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._listview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g1 = 0;
					while(_g1 < selectedIndices.length) {
						var i = selectedIndices[_g1];
						++_g1;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._listview.get_selectionMode() == "multiple-click-modifier-key") {
				this._listview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices1 = this._listview.get_selectedIndices();
			if(selectedIndices1.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._listview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._listview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._listview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._listview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._listview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,__class__: haxe_ui_containers_ListViewEvents
});
var haxe_ui_containers_ScrollViewBuilder = function(scrollview) {
	this.autoHideScrolls = false;
	haxe_ui_core_CompositeBuilder.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,create: function() {
		var contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	,destroy: function() {
	}
	,get_numComponents: function() {
		return this._contents.get_numComponents();
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	,horizontalConstraintModifier: function() {
		return 0;
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			var horizontalConstraint = this._contents;
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				hscroll.syncComponentValidation();
			} else if(hscroll != null) {
				this._component.removeComponent(hscroll);
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			var verticalConstraint = this._contents;
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				vscroll.syncComponentValidation();
			} else if(vscroll != null) {
				this._component.removeComponent(vscroll);
			}
		}
	}
	,createHScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var horizontalConstraint = this._contents;
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null) {
			var builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_includeInLayout(!builder.autoHideScrolls);
			hscroll.set_hidden(builder.autoHideScrolls);
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		return hscroll;
	}
	,createVScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var verticalConstraint = this._contents;
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null) {
			var builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_includeInLayout(!builder.autoHideScrolls);
			vscroll.set_hidden(builder.autoHideScrolls);
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		return vscroll;
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		var clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		var rc = new haxe_ui_geom_Rectangle(xpos,ypos,clipCX,clipCY);
		this._contents.set_componentClipRect(rc);
	}
	,virtualHorizontal: null
	,get_virtualHorizontal: function() {
		return this._scrollview.get_virtual();
	}
	,virtualVertical: null
	,get_virtualVertical: function() {
		return this._scrollview.get_virtual();
	}
	,onVirtualChanged: function() {
	}
	,autoHideScrolls: null
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(style.mode != null && style.mode == "mobile") {
			this.autoHideScrolls = true;
		} else {
			this.autoHideScrolls = false;
		}
	}
	,__class__: haxe_ui_containers_ScrollViewBuilder
	,__properties__: $extend(haxe_ui_core_CompositeBuilder.prototype.__properties__,{get_virtualVertical:"get_virtualVertical",get_virtualHorizontal:"get_virtualHorizontal"})
});
var haxe_ui_containers__$ListView_ListViewBuilder = function(listview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers._ListView.ListViewBuilder"] = haxe_ui_containers__$ListView_ListViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.__name__ = "haxe.ui.containers._ListView.ListViewBuilder";
haxe_ui_containers__$ListView_ListViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_listview: null
	,create: function() {
		this.createContentContainer(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("listview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer) && (this._listview.get_itemRenderer() == null && this._listview.get_itemRendererFunction() == null && this._listview.get_itemRendererClass() == null)) {
			this._listview.set_itemRenderer(js_Boot.__cast(child , haxe_ui_core_ItemRenderer));
			this._listview.get_itemRenderer().ready();
			this._listview.get_itemRenderer().handleVisibility(false);
			r = child;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,__class__: haxe_ui_containers__$ListView_ListViewBuilder
});
var haxe_ui_containers__$ListView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.DataSourceBehaviour"] = haxe_ui_containers__$ListView_DataSourceBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.__name__ = "haxe.ui.containers._ListView.DataSourceBehaviour";
haxe_ui_containers__$ListView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					var _this1 = _gthis._component;
					if(!(_this1._layout == null || _this1._layoutLocked == true)) {
						_this1.invalidateComponent("layout");
					}
				}
				haxe_ui_binding_BindingManager.get_instance().componentPropChanged(_gthis._component,"dataSource");
			};
			var _this2 = this._component;
			if(!(_this2._layout == null || _this2._layoutLocked == true)) {
				_this2.invalidateComponent("layout");
			}
		} else {
			var _this3 = this._component;
			if(!(_this3._layout == null || _this3._layoutLocked == true)) {
				_this3.invalidateComponent("layout");
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$ListView_DataSourceBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndexBehaviour"] = haxe_ui_containers__$ListView_SelectedIndexBehaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndexBehaviour";
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		listView.set_selectedIndices(haxe_ui_util__$Variant_Variant_$Impl_$.neq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1)) ? [haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndexBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemBehaviour"] = haxe_ui_containers__$ListView_SelectedItemBehaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemBehaviour";
haxe_ui_containers__$ListView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return listView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var index = listView.get_dataSource().indexOf(value);
		if(index != -1 && listView.get_selectedIndices().indexOf(index) == -1) {
			listView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndicesBehaviour"] = haxe_ui_containers__$ListView_SelectedIndicesBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndicesBehaviour";
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var itemToEnsure = null;
		var _g = 0;
		var _g1 = contents.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				child.addClass(":selected",true,true);
			} else {
				child.removeClass(":selected",true,true);
			}
		}
		if(itemToEnsure != null && listView.get_virtual() == false) {
			var vscroll = listView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents1 = listView.findComponent("listview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents1.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents1.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(listView.get_selectedIndex() != -1 && listView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemsBehaviour"] = haxe_ui_containers__$ListView_SelectedItemsBehaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemsBehaviour";
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= listView.get_dataSource().get_size()) {
					continue;
				}
				var data = listView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(selectedItems);
		} else {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray([]);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedItems = haxe_ui_util__$Variant_Variant_$Impl_$.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = listView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			listView.set_selectedIndices(selectedIndices);
		} else {
			listView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemsBehaviour
});
var haxe_ui_containers__$ListView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectionModeBehaviour"] = haxe_ui_containers__$ListView_SelectionModeBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._ListView.SelectionModeBehaviour";
haxe_ui_containers__$ListView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		var selectionMode = this._value;
		switch(selectionMode) {
		case "disabled":
			listView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				listView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectionModeBehaviour
});
var haxe_ui_containers__$ScrollView_Virtual = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_Virtual.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_Virtual
});
var haxe_ui_containers__$ScrollView_ContentLayoutName = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_ContentLayoutName.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value)));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
var haxe_ui_containers__$ScrollView_ContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(contents.get_width());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_width(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
var haxe_ui_containers__$ScrollView_PercentContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(contents.get_percentWidth());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
var haxe_ui_containers__$ScrollView_ContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(contents.get_height());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_height(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
var haxe_ui_containers__$ScrollView_PercentContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(contents.get_percentHeight());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
var haxe_ui_containers__$ScrollView_HScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(hscroll.get_pos());
	}
	,validateData: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPos
});
var haxe_ui_containers__$ScrollView_VScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(vscroll.get_pos());
	}
	,validateData: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPos
});
var haxe_ui_containers__$ScrollView_HScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(hscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollMax
});
var haxe_ui_containers__$ScrollView_VScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(vscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollMax
});
var haxe_ui_containers__$ScrollView_HScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
});
var haxe_ui_containers__$ScrollView_VScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
});
var haxe_ui_containers__$ScrollView_ScrollModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.registerInternalEvents(null,true);
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
var haxe_ui_containers_Stack = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = "haxe.ui.containers.Stack";
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Stack.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Stack();
	}
	,__class__: haxe_ui_containers_Stack
});
var haxe_ui_containers_TabView = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = "haxe.ui.containers.TabView";
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_TabView.prototype = $extend(haxe_ui_core_Component.prototype,{
	removePage: function(index) {
		this.behaviours.call("removePage",index);
	}
	,removeAllPages: function() {
		this.behaviours.call("removeAllPages",null);
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$TabView_Builder;
		this._internalEventsClass = haxe_ui_containers__$TabView_Events;
		this._defaultLayoutClass = haxe_ui_containers__$TabView_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("pageIndex",haxe_ui_containers__$TabView_PageIndex,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedPage",haxe_ui_containers__$TabView_SelectedPage,null);
		this.behaviours.register("tabPosition",haxe_ui_containers__$TabView_TabPosition);
		this.behaviours.register("pageCount",haxe_ui_containers__$TabView_PageCount);
		this.behaviours.register("closable",haxe_ui_containers__$TabView_Closable,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("removePage",haxe_ui_containers__$TabView_RemovePage);
		this.behaviours.register("removeAllPages",haxe_ui_containers__$TabView_RemoveAllPages);
	}
	,get_pageIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("pageIndex"));
	}
	,set_pageIndex: function(value) {
		this.behaviours.set("pageIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageIndex");
		return value;
	}
	,get_selectedPage: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toComponent(this.behaviours.get("selectedPage"));
	}
	,set_selectedPage: function(value) {
		this.behaviours.set("selectedPage",haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedPage");
		return value;
	}
	,get_tabPosition: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		this.behaviours.set("tabPosition",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tabPosition");
		return value;
	}
	,get_pageCount: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("pageCount"));
	}
	,set_pageCount: function(value) {
		this.behaviours.set("pageCount",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageCount");
		return value;
	}
	,get_closable: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		this.behaviours.set("closable",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"closable");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TabView();
	}
	,__class__: haxe_ui_containers_TabView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable",set_pageCount:"set_pageCount",get_pageCount:"get_pageCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedPage:"set_selectedPage",get_selectedPage:"get_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var haxe_ui_containers__$TabView_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers._TabView.Layout"] = haxe_ui_containers__$TabView_Layout;
haxe_ui_containers__$TabView_Layout.__name__ = "haxe.ui.containers._TabView.Layout";
haxe_ui_containers__$TabView_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers__$TabView_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		if(this.get_component().hasClass(":bottom")) {
			content.set_left(this.get_paddingLeft());
			content.set_top(this.get_paddingTop());
			tabs.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				tabs.set_top(this.get_component().get_height() - tabs.get_height() - this.get_paddingBottom());
			}
		} else {
			tabs.set_left(this.get_paddingLeft());
			tabs.set_top(this.get_paddingTop());
			content.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				content.set_top(tabs.get_top() + tabs.get_height() - 1);
			}
		}
	}
	,resizeChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		var usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_height(usableSize.height + 1);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_width(this.get_component().get_width());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
	,__class__: haxe_ui_containers__$TabView_Layout
});
var haxe_ui_containers__$TabView_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.Closable"] = haxe_ui_containers__$TabView_Closable;
haxe_ui_containers__$TabView_Closable.__name__ = "haxe.ui.containers._TabView.Closable";
haxe_ui_containers__$TabView_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		builder._tabs.set_closable(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_Closable
});
var haxe_ui_containers__$TabView_PageIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageIndex"] = haxe_ui_containers__$TabView_PageIndex;
haxe_ui_containers__$TabView_PageIndex.__name__ = "haxe.ui.containers._TabView.PageIndex";
haxe_ui_containers__$TabView_PageIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_PageIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		if(haxe_ui_util__$Variant_Variant_$Impl_$.lt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(0))) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.gt(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._views.length - 1))) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._views.length - 1);
			return;
		}
		builder._tabs.set_selectedIndex(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._value));
		var view = builder._views[haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._value)];
		if(view != null) {
			if(builder._currentView != null) {
				builder._currentView.hide();
			}
			if(builder._content.getComponentIndex(view) == -1) {
				builder._content.addComponent(view);
			} else {
				view.show();
			}
			builder._currentView = view;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$TabView_PageIndex
});
var haxe_ui_containers__$TabView_SelectedPage = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.SelectedPage"] = haxe_ui_containers__$TabView_SelectedPage;
haxe_ui_containers__$TabView_SelectedPage.__name__ = "haxe.ui.containers._TabView.SelectedPage";
haxe_ui_containers__$TabView_SelectedPage.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TabView_SelectedPage.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[tabview.get_pageIndex()];
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent(view);
	}
	,set: function(value) {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = haxe_ui_util__$Variant_Variant_$Impl_$.toComponent(value);
		var viewIndex = builder._views.indexOf(view);
		if(viewIndex != -1) {
			tabview.set_pageIndex(viewIndex);
		}
	}
	,__class__: haxe_ui_containers__$TabView_SelectedPage
});
var haxe_ui_containers__$TabView_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.TabPosition"] = haxe_ui_containers__$TabView_TabPosition;
haxe_ui_containers__$TabView_TabPosition.__name__ = "haxe.ui.containers._TabView.TabPosition";
haxe_ui_containers__$TabView_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("bottom"))) {
			this._component.addClass(":bottom");
		} else {
			this._component.removeClass(":bottom");
		}
		this._component.findComponent(null,haxe_ui_components_TabBar,false).set_tabPosition(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_TabPosition
});
var haxe_ui_containers__$TabView_PageCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = "haxe.ui.containers._TabView.PageCount";
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_PageCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(builder._tabs.get_tabCount());
	}
	,__class__: haxe_ui_containers__$TabView_PageCount
});
var haxe_ui_containers__$TabView_RemovePage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = "haxe.ui.containers._TabView.RemovePage";
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemovePage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		if(index < builder._views.length) {
			var view = builder._views[index];
			HxOverrides.remove(builder._views,view);
			builder._content.removeComponent(view);
			builder._tabs.removeTab(index);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemovePage
});
var haxe_ui_containers__$TabView_RemoveAllPages = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = "haxe.ui.containers._TabView.RemoveAllPages";
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemoveAllPages.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		while(builder._views.length > 0) {
			var view = builder._views[0];
			HxOverrides.remove(builder._views,view);
			builder._content.removeComponent(view);
			builder._tabs.removeTab(0);
		}
		(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).set_pageIndex(-1);
		builder._tabs.set_selectedIndex(-1);
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
var haxe_ui_containers__$TabView_Events = function(tabview) {
	haxe_ui_events_Events.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Events"] = haxe_ui_containers__$TabView_Events;
haxe_ui_containers__$TabView_Events.__name__ = "haxe.ui.containers._TabView.Events";
haxe_ui_containers__$TabView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TabView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabview: null
	,register: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs.hasEvent("change",$bind(this,this.onTabChanged)) == false) {
			tabs.registerEvent("change",$bind(this,this.onTabChanged));
		}
		if(tabs.hasEvent("beforeClose",$bind(this,this.onBeforeTabClosed)) == false) {
			tabs.registerEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
		}
		if(tabs.hasEvent("close",$bind(this,this.onTabClosed)) == false) {
			tabs.registerEvent("close",$bind(this,this.onTabClosed));
		}
	}
	,unregister: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		tabs.unregisterEvent("change",$bind(this,this.onTabChanged));
		tabs.unregisterEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
	}
	,onBeforeTabClosed: function(event) {
		this._tabview.dispatch(event);
	}
	,onTabClosed: function(event) {
		var builder = js_Boot.__cast(this._tabview._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[event.data];
		HxOverrides.remove(builder._views,view);
		builder._content.removeComponent(view);
		this._tabview.dispatch(new haxe_ui_events_UIEvent("close",event.data));
	}
	,onTabChanged: function(event) {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		this._tabview.set_pageIndex(-1);
		this._tabview.set_pageIndex(tabs.get_selectedIndex());
	}
	,__class__: haxe_ui_containers__$TabView_Events
});
var haxe_ui_containers__$TabView_Builder = function(tabview) {
	this._views = [];
	this._currentView = null;
	haxe_ui_core_CompositeBuilder.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Builder"] = haxe_ui_containers__$TabView_Builder;
haxe_ui_containers__$TabView_Builder.__name__ = "haxe.ui.containers._TabView.Builder";
haxe_ui_containers__$TabView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TabView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabview: null
	,_tabs: null
	,_content: null
	,_currentView: null
	,_views: null
	,create: function() {
		if(this._content == null) {
			this._content = new haxe_ui_containers_Box();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this._content.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("vertical"));
			this._tabview.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabview.addComponent(this._tabs);
		}
	}
	,get_numComponents: function() {
		return this._views.length;
	}
	,addComponent: function(child) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			this._views.push(child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(icon);
			this._tabs.addComponent(button);
			return child;
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			this._views.splice(index,0,child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(icon);
			this._tabs.addComponentAt(button,index);
			return child;
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._tabs.removeComponentAt(i,dispose,invalidate);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		this._views.splice(index,1);
		return this._tabs.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._views.indexOf(child);
	}
	,setComponentIndex: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._views.splice(index,0,child);
				this._tabs.setComponentIndex(this._tabs.getComponentAt(i),index);
				return child;
			}
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._views[index];
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(view.matchesSearch(criteria,type,searchType)) {
					return view;
				} else {
					match = view.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,__class__: haxe_ui_containers__$TabView_Builder
});
var haxe_ui_containers_TableView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = "haxe.ui.containers.TableView";
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TableView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_itemRendererFunction: null
	,get_itemRendererFunction: function() {
		return this._itemRendererFunction;
	}
	,set_itemRendererFunction: function(value) {
		if(this._itemRendererFunction != value) {
			this._itemRendererFunction = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$TableView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$TableView_SelectedIndexBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$TableView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$TableView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$TableView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$TableView_SelectionModeBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(500));
	}
	,get_dataSource: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		this.behaviours.set("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	,get_itemWidth: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		this.behaviours.set("itemWidth",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemWidth");
		return value;
	}
	,get_itemHeight: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		this.behaviours.set("itemHeight",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemHeight");
		return value;
	}
	,get_itemCount: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		this.behaviours.set("itemCount",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemCount");
		return value;
	}
	,get_variableItemSize: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		this.behaviours.set("variableItemSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"variableItemSize");
		return value;
	}
	,get_selectedIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.set("selectedItem",value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItem");
		return value;
	}
	,get_selectedIndices: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		this.behaviours.set("selectedIndices",haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndices");
		return value;
	}
	,get_selectedItems: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		this.behaviours.set("selectedItems",haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItems");
		return value;
	}
	,get_selectionMode: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		this.behaviours.set("selectionMode",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectionMode");
		return value;
	}
	,get_longPressSelectionTime: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		this.behaviours.set("longPressSelectionTime",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"longPressSelectionTime");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableView();
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TableView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$TableView_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$TableView_Layout;
	}
	,__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this.__onComponentEvent != null) {
			this.unregisterEvent("itemComponentEvent",this.__onComponentEvent);
			this.__onComponentEvent = null;
		}
		if(value != null) {
			this.__onComponentEvent = value;
			this.registerEvent("itemComponentEvent",value);
		}
		return value;
	}
	,__class__: haxe_ui_containers_TableView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_onComponentEvent:"set_onComponentEvent",set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRendererFunction:"set_itemRendererFunction",get_itemRendererFunction:"get_itemRendererFunction"})
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data");
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._fieldList == null || this._fieldList.length == 0) {
			var fieldList = Reflect.fields(this._data);
			if(js_Boot.getClass(this._data) != null) {
				var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
				var _g = 0;
				while(_g < instanceFields.length) {
					var i = instanceFields[_g];
					++_g;
					if(Reflect.isFunction(Reflect.getProperty(this._data,i)) == false && fieldList.indexOf(i) == -1) {
						fieldList.push(i);
					}
				}
				this._fieldList = fieldList;
			}
		}
		this.updateValues(this._data,this._fieldList);
		var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
		var _g1 = 0;
		while(_g1 < components.length) {
			var c = components[_g1];
			++_g1;
			if(((c) instanceof haxe_ui_components_Button)) {
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
			} else if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
				c.registerEvent("change",$bind(this,this.onItemChange));
			}
		}
	}
	,onItemChange: function(event) {
		var v = event.target.get_value();
		if(this._data != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.data = this._data;
		this.dispatch(e);
	}
	,onItemClick: function(event) {
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.data = this._data;
		this.dispatch(e);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(value,f);
			if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			} else {
				var c = this.findComponent(f,null,true);
				if(c != null && v != null) {
					var propValue = haxe_ui_util_TypeConverter.convert(v);
					c.set_value(propValue);
					if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
						c.registerEvent("change",$bind(this,this.onItemChange));
					}
					if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
						c.registerEvent("click",$bind(this,this.onItemClick));
					}
					c.show();
				} else if(c != null) {
					c.hide();
				}
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_containers__$TableView_CompoundItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("horizontal"));
	this.set_styleString("spacing: 2px;");
	this.removeClass("itemrenderer");
};
$hxClasses["haxe.ui.containers._TableView.CompoundItemRenderer"] = haxe_ui_containers__$TableView_CompoundItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.__name__ = "haxe.ui.containers._TableView.CompoundItemRenderer";
haxe_ui_containers__$TableView_CompoundItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$TableView_CompoundItemRenderer();
	}
	,__class__: haxe_ui_containers__$TableView_CompoundItemRenderer
});
var haxe_ui_containers__$TableView_Events = function(tableview) {
	haxe_ui_containers_ScrollViewEvents.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Events"] = haxe_ui_containers__$TableView_Events;
haxe_ui_containers__$TableView_Events.__name__ = "haxe.ui.containers._TableView.Events";
haxe_ui_containers__$TableView_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TableView_Events.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_tableview: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		var _this = this._tableview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			instance.addClass(":selected",true,true);
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			instance.removeClass(":selected",true,true);
		}
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._tableview.findComponent("tableview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent)) {
				return;
			}
		}
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._tableview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._tableview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g1 = 0;
					while(_g1 < selectedIndices.length) {
						var i = selectedIndices[_g1];
						++_g1;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._tableview.get_selectionMode() == "multiple-click-modifier-key") {
				this._tableview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices1 = this._tableview.get_selectedIndices();
			if(selectedIndices1.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._tableview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._tableview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._tableview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._tableview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._tableview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,__class__: haxe_ui_containers__$TableView_Events
});
var haxe_ui_containers__$TableView_Builder = function(tableview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Builder"] = haxe_ui_containers__$TableView_Builder;
haxe_ui_containers__$TableView_Builder.__name__ = "haxe.ui.containers._TableView.Builder";
haxe_ui_containers__$TableView_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TableView_Builder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_tableview: null
	,_header: null
	,create: function() {
		this.createContentContainer(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,onInitialize: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
	}
	,onReady: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("tableview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var itemRenderer = this._tableview.get_itemRenderer();
			if(itemRenderer == null) {
				itemRenderer = new haxe_ui_containers__$TableView_CompoundItemRenderer();
				this._tableview.set_itemRenderer(itemRenderer);
			}
			itemRenderer.addComponent(child);
			return child;
		} else if(((child) instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			r = null;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,buildDefaultRenderer: function() {
		var r = new haxe_ui_containers__$TableView_CompoundItemRenderer();
		if(this._header != null) {
			var _g = 0;
			var _g1 = this._header.get_childComponents();
			while(_g < _g1.length) {
				var column = _g1[_g];
				++_g;
				var itemRenderer = new haxe_ui_core_ItemRenderer();
				var label = new haxe_ui_components_Label();
				label.set_id(column.get_id());
				label.set_percentWidth(100);
				label.set_verticalAlign("center");
				itemRenderer.addComponent(label);
				r.addComponent(itemRenderer);
			}
		}
		this._tableview.set_itemRenderer(r);
	}
	,fillExistingRenderer: function() {
		var _g = 0;
		var _g1 = this._header.get_childComponents();
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			var existing = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true);
			if(existing == null) {
				var itemRenderer = new haxe_ui_core_ItemRenderer();
				var label = new haxe_ui_components_Label();
				label.set_id(column.get_id());
				label.set_percentWidth(100);
				label.set_verticalAlign("center");
				itemRenderer.addComponent(label);
				this._tableview.get_itemRenderer().addComponent(itemRenderer);
			}
		}
	}
	,verticalConstraintModifier: function() {
		if(this._header == null || this._tableview.get_virtual() == true) {
			return 0;
		}
		return this._header.get_height();
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,get_virtualHorizontal: function() {
		return false;
	}
	,__class__: haxe_ui_containers__$TableView_Builder
});
var haxe_ui_layouts_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			var ucy1 = this.get_innerHeight();
			hscroll.moveComponent(this.get_paddingLeft(),ucy1 - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			var ucx1 = this.get_innerWidth();
			vscroll.moveComponent(ucx1 - vscroll.get_componentWidth() + this.get_paddingRight(),this.get_paddingTop());
		}
		var contents1 = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents1 != null) {
			contents1.moveComponent(this.get_paddingLeft(),this.get_paddingTop());
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
	,__class__: haxe_ui_layouts_ScrollViewLayout
});
var haxe_ui_layouts_VirtualLayout = function() {
	this._sizeCache = [];
	this._rendererPool = [];
	this._lastIndex = -1;
	this._firstIndex = -1;
	haxe_ui_layouts_ScrollViewLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_VirtualLayout.prototype = $extend(haxe_ui_layouts_ScrollViewLayout.prototype,{
	_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,get_contents: function() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	,get_dataSource: function() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	,itemWidth: null
	,get_itemWidth: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemWidth() > 0) {
			return comp.get_itemWidth();
		}
		var childComponents = this.get_contents().get_childComponents();
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_width();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_width();
			}
		}
		if(result > 0) {
			comp.set_itemWidth(result);
		} else {
			result = 1;
		}
		return result;
	}
	,itemHeight: null
	,get_itemHeight: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		var childComponents = this.get_contents().get_childComponents();
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		}
		return result;
	}
	,itemCount: null
	,get_itemCount: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	,refresh: function() {
		this.refreshData();
		haxe_ui_layouts_ScrollViewLayout.prototype.refresh.call(this);
	}
	,refreshData: function() {
		if(this.get_dataSource() == null) {
			return;
		}
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	,refreshNonVirtualData: function() {
		var dataSource = this.get_dataSource();
		var contents = this.get_contents();
		var _g = 0;
		var _g1 = dataSource.get_size();
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			if(n < contents.get_childComponents().length) {
				item = js_Boot.__cast(contents.get_childComponents()[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data");
					continue;
				}
				var cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				var cls1 = this.itemClass(n,data);
				item = this.getRenderer(cls1,n);
				contents.addComponent(item);
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(!item.hasClass(className)) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < contents.get_childComponents().length) {
			var item1 = js_Boot.__cast(contents.get_childComponents()[contents.get_childComponents().length - 1] , haxe_ui_core_ItemRenderer);
			this.removeRenderer(item1);
		}
	}
	,refreshVirtualData: function() {
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		haxe_Log.trace("refresh virtualDat",{ fileName : "haxe/ui/layouts/VirtualLayout.hx", lineNumber : 154, className : "haxe.ui.layouts.VirtualLayout", methodName : "refreshVirtualData"});
		var dataSource = this.get_dataSource();
		var i = 0;
		var _g = this._firstIndex;
		var _g1 = this._lastIndex;
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			var cls = this.itemClass(n,data);
			if(this.get_contents().get_childComponents().length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				item = js_Boot.__cast(this.get_contents().get_childComponents()[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererDestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("rendererCreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,item));
					}
				}
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(!item.hasClass(className)) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(this.get_contents().get_childComponents().length > i) this.removeRenderer(js_Boot.__cast(this.get_contents().get_childComponents()[this.get_contents().get_childComponents().length - 1] , haxe_ui_core_ItemRenderer),false);
	}
	,calculateRangeVisible: function() {
	}
	,updateScroll: function() {
	}
	,itemClass: function(index,data) {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererFunction() != null) {
			return (comp.get_itemRendererFunction())(data,index);
		} else if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	,getRenderer: function(cls,index) {
		var instance = null;
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			var _g = 0;
			var _g1 = this._rendererPool.length;
			while(_g < _g1) {
				var i = _g++;
				var renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("rendererCreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	,removeRenderer: function(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererDestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	,removeInvisibleRenderers: function() {
		var contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while(contents.get_childComponents().length > 0 && !this.isRendererVisible(contents.get_childComponents()[0])) {
				this.removeRenderer(js_Boot.__cast(contents.get_childComponents()[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while(contents.get_childComponents().length > 0 && !this.isRendererVisible(contents.get_childComponents()[contents.get_childComponents().length - 1])) {
				this.removeRenderer(js_Boot.__cast(contents.get_childComponents()[contents.get_childComponents().length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	,isRendererVisible: function(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
	,isIndexVisible: function(index) {
		if(index >= this._firstIndex) {
			return index <= this._lastIndex;
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_layouts_VirtualLayout
	,__properties__: $extend(haxe_ui_layouts_ScrollViewLayout.prototype.__properties__,{get_itemCount:"get_itemCount",get_itemHeight:"get_itemHeight",get_itemWidth:"get_itemWidth",get_dataSource:"get_dataSource",get_contents:"get_contents"})
});
var haxe_ui_layouts_VerticalVirtualLayout = function() {
	haxe_ui_layouts_VirtualLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.prototype = $extend(haxe_ui_layouts_VirtualLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_VirtualLayout.prototype.repositionChildren.call(this);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var itemHeight = this.get_itemHeight();
		var contents = this.get_contents();
		var verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			var n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				var pos = -comp.get_vscrollPos();
				var _g = 0;
				var _g1 = this._lastIndex;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this._firstIndex) {
						var c = contents.getComponentAt(i - this._firstIndex);
						c.set_top(pos);
					}
					var size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				var _g2 = 0;
				var _g11 = contents.get_childComponents();
				while(_g2 < _g11.length) {
					var child = _g11[_g2];
					++_g2;
					child.set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,calculateRangeVisible: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var itemHeight = this.get_itemHeight();
		var visibleItemsCount = 0;
		var contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			var itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			var totalSize = 0;
			var requireInvalidation = false;
			var newFirstIndex = -1;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						var c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				var _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		var rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width() - (this.get_paddingRight() + this.get_paddingLeft()),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()));
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	,updateScroll: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var dataSize = this.get_dataSource().get_size();
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var scrollMax = 0;
		var itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VirtualLayout.prototype.calcAutoSize.call(this,exclusions);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom();
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalVirtualLayout
});
var haxe_ui_containers__$TableView_Layout = function() {
	haxe_ui_layouts_VerticalVirtualLayout.call(this);
};
$hxClasses["haxe.ui.containers._TableView.Layout"] = haxe_ui_containers__$TableView_Layout;
haxe_ui_containers__$TableView_Layout.__name__ = "haxe.ui.containers._TableView.Layout";
haxe_ui_containers__$TableView_Layout.__super__ = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_containers__$TableView_Layout.prototype = $extend(haxe_ui_layouts_VerticalVirtualLayout.prototype,{
	itemClass: function(index,data) {
		return haxe_ui_containers__$TableView_CompoundItemRenderer;
	}
	,repositionChildren: function() {
		haxe_ui_layouts_VerticalVirtualLayout.prototype.repositionChildren.call(this);
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		header.set_left(this.get_paddingLeft());
		header.set_top(this.get_paddingTop());
		var rc = new haxe_ui_geom_Rectangle((js_Boot.__cast(this._component , haxe_ui_containers_ScrollView)).get_hscrollPos() + 1,1,this.get_usableWidth(),header.get_height());
		header.set_componentClipRect(rc);
		var data = this.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			var _g = 0;
			var _g1 = data.get_childComponents();
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var headerChildComponents = header.get_childComponents();
				var _g2 = 0;
				while(_g2 < headerChildComponents.length) {
					var column = headerChildComponents[_g2];
					++_g2;
					var isLast = headerChildComponents.indexOf(column) == headerChildComponents.length - 1;
					var itemRenderer = item.findComponent(column.get_id(),haxe_ui_core_Component);
					if(itemRenderer != null && ((itemRenderer) instanceof haxe_ui_core_ItemRenderer) == false) {
						itemRenderer = itemRenderer.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					if(itemRenderer != null) {
						itemRenderer.set_percentWidth(null);
						if(isLast == false) {
							itemRenderer.set_width(column.get_width() - item.get_layout().get_horizontalSpacing());
						} else {
							itemRenderer.set_width(column.get_width());
						}
					}
				}
				data.set_componentWidth(item.get_width());
			}
			data.set_left(this.get_paddingLeft());
			data.set_top(header.get_top() + header.get_height() - 1);
		}
	}
	,verticalConstraintModifier: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return 0;
		}
		return header.get_height();
	}
	,__class__: haxe_ui_containers__$TableView_Layout
});
var haxe_ui_containers__$TableView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.DataSourceBehaviour"] = haxe_ui_containers__$TableView_DataSourceBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.__name__ = "haxe.ui.containers._TableView.DataSourceBehaviour";
haxe_ui_containers__$TableView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					var _this1 = _gthis._component;
					if(!(_this1._layout == null || _this1._layoutLocked == true)) {
						_this1.invalidateComponent("layout");
					}
				}
				haxe_ui_binding_BindingManager.get_instance().componentPropChanged(_gthis._component,"dataSource");
			};
			var _this2 = this._component;
			if(!(_this2._layout == null || _this2._layoutLocked == true)) {
				_this2.invalidateComponent("layout");
			}
		} else {
			var _this3 = this._component;
			if(!(_this3._layout == null || _this3._layoutLocked == true)) {
				_this3.invalidateComponent("layout");
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$TableView_DataSourceBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndexBehaviour"] = haxe_ui_containers__$TableView_SelectedIndexBehaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndexBehaviour";
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		tableView.set_selectedIndices(haxe_ui_util__$Variant_Variant_$Impl_$.neq(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-1)) ? [haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndexBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemBehaviour"] = haxe_ui_containers__$TableView_SelectedItemBehaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemBehaviour";
haxe_ui_containers__$TableView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return tableView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var index = tableView.get_dataSource().indexOf(value);
		if(index != -1 && tableView.get_selectedIndices().indexOf(index) == -1) {
			tableView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndicesBehaviour"] = haxe_ui_containers__$TableView_SelectedIndicesBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndicesBehaviour";
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var itemToEnsure = null;
		var _g = 0;
		var _g1 = contents.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				child.addClass(":selected",true,true);
			} else {
				child.removeClass(":selected",true,true);
			}
		}
		if(itemToEnsure != null && tableView.get_virtual() == false) {
			var vscroll = tableView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents1 = tableView.findComponent("tableview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents1.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents1.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(tableView.get_selectedIndex() != -1 && tableView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemsBehaviour"] = haxe_ui_containers__$TableView_SelectedItemsBehaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemsBehaviour";
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= tableView.get_dataSource().get_size()) {
					continue;
				}
				var data = tableView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray(selectedItems);
		} else {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromArray([]);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedItems = haxe_ui_util__$Variant_Variant_$Impl_$.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = tableView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			tableView.set_selectedIndices(selectedIndices);
		} else {
			tableView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemsBehaviour
});
var haxe_ui_containers__$TableView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectionModeBehaviour"] = haxe_ui_containers__$TableView_SelectionModeBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._TableView.SelectionModeBehaviour";
haxe_ui_containers__$TableView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		var selectionMode = this._value;
		switch(selectionMode) {
		case "disabled":
			tableView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				tableView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectionModeBehaviour
});
var haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$ = {};
$hxClasses["haxe.ui.containers.dialogs._Dialog.DialogButton_Impl_"] = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$;
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.__name__ = "haxe.ui.containers.dialogs._Dialog.DialogButton_Impl_";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.bitOr = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(lhs).split("|");
	var rarr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(rhs).split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	return larr.join("|");
};
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.eq = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(lhs).split("|");
	return larr.indexOf(haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(rhs)) != -1;
};
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toArray = function(this1) {
	var a = [];
	var _g = 0;
	var _g1 = (this1 == null ? "null" : "" + this1).split("|");
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0 || i == "null") {
			continue;
		}
		a.push(i);
	}
	return a;
};
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_DialogEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.containers.dialogs.DialogEvent"] = haxe_ui_containers_dialogs_DialogEvent;
haxe_ui_containers_dialogs_DialogEvent.__name__ = "haxe.ui.containers.dialogs.DialogEvent";
haxe_ui_containers_dialogs_DialogEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_dialogs_DialogEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	button: null
	,clone: function() {
		var c = new haxe_ui_containers_dialogs_DialogEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.button = this.button;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_dialogs_DialogEvent
});
var haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$ = {};
$hxClasses["haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_"] = haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$;
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.__name__ = "haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_";
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_MessageBox = function() {
	haxe_ui_backend_MessageBoxBase.call(this);
	this.set_title("Message");
};
$hxClasses["haxe.ui.containers.dialogs.MessageBox"] = haxe_ui_containers_dialogs_MessageBox;
haxe_ui_containers_dialogs_MessageBox.__name__ = "haxe.ui.containers.dialogs.MessageBox";
haxe_ui_containers_dialogs_MessageBox.__super__ = haxe_ui_backend_MessageBoxBase;
haxe_ui_containers_dialogs_MessageBox.prototype = $extend(haxe_ui_backend_MessageBoxBase.prototype,{
	onInitialize: function() {
		haxe_ui_backend_MessageBoxBase.prototype.onInitialize.call(this);
		if(haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toArray(this.buttons).length == 0) {
			switch(this.get_type()) {
			case "haxeui-core/styles/default/dialogs/cross-circle.png":
				this.buttons = "Close";
				break;
			case "haxeui-core/styles/default/dialogs/exclamation.png":
				this.buttons = "Close";
				break;
			case "haxeui-core/styles/default/dialogs/information.png":
				this.buttons = "OK";
				break;
			case "haxeui-core/styles/default/dialogs/question.png":
				var larr = "Yes".split("|");
				var rarr = "No".split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				var larr1 = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(larr.join("|")).split("|");
				var rarr1 = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("Cancel").split("|");
				var _g1 = 0;
				while(_g1 < rarr1.length) {
					var r1 = rarr1[_g1];
					++_g1;
					if(larr1.indexOf(r1) == -1) {
						larr1.push(r1);
					}
				}
				this.buttons = larr1.join("|");
				break;
			}
			this.createButtons();
		}
		if(this.get_title() == "Message") {
			switch(this.get_type()) {
			case "haxeui-core/styles/default/dialogs/cross-circle.png":
				this.set_title("Error");
				break;
			case "haxeui-core/styles/default/dialogs/exclamation.png":
				this.set_title("Warning");
				break;
			case "haxeui-core/styles/default/dialogs/information.png":
				this.set_title("Info");
				break;
			case "haxeui-core/styles/default/dialogs/question.png":
				this.set_title("Question");
				break;
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_MessageBoxBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_MessageBoxBase.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_MessageBox();
	}
	,__class__: haxe_ui_containers_dialogs_MessageBox
});
var haxe_ui_containers_menus_MenuEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.menuItem = null;
	this.menu = null;
	haxe_ui_events_UIEvent.call(this,type,true,data);
};
$hxClasses["haxe.ui.containers.menus.MenuEvent"] = haxe_ui_containers_menus_MenuEvent;
haxe_ui_containers_menus_MenuEvent.__name__ = "haxe.ui.containers.menus.MenuEvent";
haxe_ui_containers_menus_MenuEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_menus_MenuEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	menu: null
	,menuItem: null
	,clone: function() {
		var c = new haxe_ui_containers_menus_MenuEvent(this.type);
		c.menu = this.menu;
		c.menuItem = this.menuItem;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_menus_MenuEvent
});
var haxe_ui_containers_menus_Menu = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.Menu"] = haxe_ui_containers_menus_Menu;
haxe_ui_containers_menus_Menu.__name__ = "haxe.ui.containers.menus.Menu";
haxe_ui_containers_menus_Menu.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_menus_Menu.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus_MenuEvents;
		this._compositeBuilderClass = haxe_ui_containers_menus__$Menu_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_Menu();
	}
	,__class__: haxe_ui_containers_menus_Menu
});
var haxe_ui_containers_menus_MenuEvents = function(menu) {
	this._over = false;
	this.parentMenu = null;
	this.currentSubMenu = null;
	haxe_ui_events_Events.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus.MenuEvents"] = haxe_ui_containers_menus_MenuEvents;
haxe_ui_containers_menus_MenuEvents.__name__ = "haxe.ui.containers.menus.MenuEvents";
haxe_ui_containers_menus_MenuEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus_MenuEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menu: null
	,currentSubMenu: null
	,parentMenu: null
	,register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		var _g = 0;
		var _g1 = this._menu.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_containers_menus_MenuItem)) {
				var item = js_Boot.__cast(child , haxe_ui_containers_menus_MenuItem);
				if(!item.hasEvent("click",$bind(this,this.onItemClick))) {
					item.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(!item.hasEvent("mouseover",$bind(this,this.onItemMouseOver))) {
					item.registerEvent("mouseover",$bind(this,this.onItemMouseOver));
				}
				if(!item.hasEvent("mouseout",$bind(this,this.onItemMouseOut))) {
					item.registerEvent("mouseout",$bind(this,this.onItemMouseOut));
				}
			}
		}
		if(!this.hasEvent("hidden",$bind(this,this.onHidden))) {
			this.registerEvent("hidden",$bind(this,this.onHidden));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		var _g = 0;
		var _g1 = this._menu.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onItemClick));
			child.unregisterEvent("mouseover",$bind(this,this.onItemMouseOver));
			child.unregisterEvent("mouseout",$bind(this,this.onItemMouseOut));
		}
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
	}
	,_over: null
	,onMouseOver: function(event) {
		this._over = true;
	}
	,onMouseOut: function(event) {
		this._over = false;
	}
	,onItemClick: function(event) {
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		if(!item.get_expandable()) {
			var event1 = new haxe_ui_containers_menus_MenuEvent("menuselected");
			event1.menu = this._menu;
			event1.menuItem = item;
			this.findRootMenu().dispatch(event1);
			this.hideCurrentSubMenu();
			this.findRootMenu().hide();
		}
	}
	,onItemMouseOver: function(event) {
		var builder = js_Boot.__cast(this._menu._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		var subMenus = builder._subMenus;
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		var _g = 0;
		var _g1 = this._menu.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != item) {
				child.removeClass(":hover",true,true);
			}
		}
		if(subMenus.h[item.__id__] != null) {
			this.showSubMenu(js_Boot.__cast(subMenus.h[item.__id__] , haxe_ui_containers_menus_Menu),item);
		} else {
			this.hideCurrentSubMenu();
		}
	}
	,onItemMouseOut: function(event) {
		if(this.currentSubMenu != null) {
			event.target.addClass(":hover",true,true);
			return;
		}
	}
	,showSubMenu: function(subMenu,source) {
		this.hideCurrentSubMenu();
		var left = source.get_screenLeft() + source.get_width();
		var top = source.get_screenTop();
		haxe_ui_core_Screen.get_instance().addComponent(subMenu);
		subMenu.syncComponentValidation();
		if(left + subMenu.get_width() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = source.get_screenLeft() - subMenu.get_width();
		}
		subMenu.set_left(left);
		subMenu.set_top(top);
		this.currentSubMenu = subMenu;
	}
	,hideCurrentSubMenu: function() {
		if(this.currentSubMenu == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.currentSubMenu.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		var subMenuEvents = js_Boot.__cast(this.currentSubMenu._internalEvents , haxe_ui_containers_menus_MenuEvents);
		subMenuEvents.hideCurrentSubMenu();
		haxe_ui_core_Screen.get_instance().removeComponent(this.currentSubMenu);
		this.currentSubMenu = null;
	}
	,onHidden: function(event) {
		var _g = 0;
		var _g1 = this._menu.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		this.hideCurrentSubMenu();
	}
	,findRootMenu: function() {
		var root = null;
		var ref = this._menu;
		while(ref != null) {
			var events = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			if(events.parentMenu == null) {
				root = events._menu;
				break;
			}
			ref = events.parentMenu;
		}
		return root;
	}
	,__class__: haxe_ui_containers_menus_MenuEvents
});
var haxe_ui_containers_menus__$Menu_Builder = function(menu) {
	this._subMenus = new haxe_ds_ObjectMap();
	haxe_ui_core_CompositeBuilder.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus._Menu.Builder"] = haxe_ui_containers_menus__$Menu_Builder;
haxe_ui_containers_menus__$Menu_Builder.__name__ = "haxe.ui.containers.menus._Menu.Builder";
haxe_ui_containers_menus__$Menu_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$Menu_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menu: null
	,_subMenus: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var item = new haxe_ui_containers_menus_MenuItem();
			item.set_text(child.get_text());
			item.set_icon(menu.get_icon());
			item.set_expandable(true);
			this._menu.addComponent(item);
			(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).parentMenu = this._menu;
			this._subMenus.set(item,menu);
			return child;
		}
		return null;
	}
	,onComponentAdded: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu) || ((child) instanceof haxe_ui_containers_menus_MenuItem)) {
			this._menu.registerInternalEvents(null,true);
		}
	}
	,__class__: haxe_ui_containers_menus__$Menu_Builder
});
var haxe_ui_containers_menus_MenuBar = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuBar"] = haxe_ui_containers_menus_MenuBar;
haxe_ui_containers_menus_MenuBar.__name__ = "haxe.ui.containers.menus.MenuBar";
haxe_ui_containers_menus_MenuBar.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuBar.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuBar_Builder;
	}
	,__onMenuSelected: null
	,onMenuSelected: null
	,set_onMenuSelected: function(value) {
		if(this.__onMenuSelected != null) {
			this.unregisterEvent("menuselected",this.__onMenuSelected);
			this.__onMenuSelected = null;
		}
		if(value != null) {
			this.__onMenuSelected = value;
			this.registerEvent("menuselected",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuBar();
	}
	,__class__: haxe_ui_containers_menus_MenuBar
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_onMenuSelected:"set_onMenuSelected"})
});
var haxe_ui_containers_menus__$MenuBar_Events = function(menubar) {
	haxe_ui_events_Events.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Events"] = haxe_ui_containers_menus__$MenuBar_Events;
haxe_ui_containers_menus__$MenuBar_Events.__name__ = "haxe.ui.containers.menus._MenuBar.Events";
haxe_ui_containers_menus__$MenuBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menubar: null
	,_currentMenu: null
	,_currentButton: null
	,register: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(!button.hasEvent("click",$bind(this,this.onButtonClick))) {
				button.registerEvent("click",$bind(this,this.onButtonClick));
			}
			if(!button.hasEvent("mouseover",$bind(this,this.onButtonOver))) {
				button.registerEvent("mouseover",$bind(this,this.onButtonOver));
			}
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.unregisterEvent("click",$bind(this,this.onButtonClick));
			button.unregisterEvent("mouseover",$bind(this,this.onButtonOver));
		}
	}
	,onButtonClick: function(event) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		if(target.get_selected() == true) {
			this.showMenu(index);
		} else {
			this.hideCurrentMenu();
		}
	}
	,onButtonOver: function(event) {
		if(this._currentMenu == null) {
			return;
		}
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		var menu = builder._menus[index];
		if(menu != this._currentMenu) {
			this.showMenu(index);
		}
	}
	,showMenu: function(index) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = builder._buttons[index];
		var menu = builder._menus[index];
		if(this._currentMenu == menu) {
			return;
		}
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(button != target) {
				button.set_selected(false);
			}
		}
		target.set_selected(true);
		this.hideCurrentMenu();
		var left = target.get_screenLeft();
		var top = target.get_screenTop() + target.get_height();
		menu.show();
		haxe_ui_core_Screen.get_instance().addComponent(menu);
		menu.syncComponentValidation();
		if(left + menu.get_width() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = target.get_screenLeft() - menu.get_width() + target.get_width();
		}
		menu.set_left(left);
		menu.set_top(top - 1);
		this._currentButton = target;
		this._currentMenu = menu;
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		if(!this._currentMenu.hasEvent("menuselected",$bind(this,this.onMenuSelected))) {
			this._currentMenu.registerEvent("menuselected",$bind(this,this.onMenuSelected));
		}
	}
	,hideCurrentMenu: function() {
		if(this._currentMenu != null) {
			this._currentMenu.unregisterEvent("menuselected",$bind(this,this.onMenuSelected));
			this._currentMenu.hide();
			this._currentButton.set_selected(false);
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
			haxe_ui_core_Screen.get_instance().removeComponent(this._currentMenu);
			this._currentButton = null;
			this._currentMenu = null;
		}
	}
	,onScreenMouseDown: function(event) {
		var close = true;
		if(this._currentMenu.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else if(this._currentButton.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else {
			var ref = this._currentMenu;
			var refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			var refSubMenu = refEvents.currentSubMenu;
			while(refSubMenu != null) {
				if(refSubMenu.hitTest(event.screenX,event.screenY)) {
					close = false;
					break;
				}
				ref = refSubMenu;
				refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
				refSubMenu = refEvents.currentSubMenu;
			}
		}
		if(close) {
			this.hideCurrentMenu();
		}
	}
	,onMenuSelected: function(event) {
		var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
		newEvent.menu = event.menu;
		newEvent.menuItem = event.menuItem;
		this._menubar.dispatch(newEvent);
		this.hideCurrentMenu();
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Events
});
var haxe_ui_containers_menus__$MenuBar_Builder = function(menubar) {
	this._menus = [];
	this._buttons = [];
	haxe_ui_core_CompositeBuilder.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Builder"] = haxe_ui_containers_menus__$MenuBar_Builder;
haxe_ui_containers_menus__$MenuBar_Builder.__name__ = "haxe.ui.containers.menus._MenuBar.Builder";
haxe_ui_containers_menus__$MenuBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menubar: null
	,_buttons: null
	,_menus: null
	,create: function() {
	}
	,destroy: function() {
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var button = new haxe_ui_components_Button();
			button.set_styleNames("menubar-button");
			button.set_text(menu.get_text());
			button.set_icon(menu.get_icon());
			button.set_toggle(true);
			this._buttons.push(button);
			this._menubar.addComponent(button);
			this._menubar.registerInternalEvents(null,true);
			this._menus.push(js_Boot.__cast(child , haxe_ui_containers_menus_Menu));
			return child;
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,getComponentIndex: function(child) {
		return -1;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Builder
});
var haxe_ui_containers_menus_MenuItem = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuItem"] = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuItem.__name__ = "haxe.ui.containers.menus.MenuItem";
haxe_ui_containers_menus_MenuItem.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuItem.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuItem_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuItem_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuItem_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers_menus__$MenuItem_IconBehaviour);
		this.behaviours.register("expandable",haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour);
	}
	,get_shortcutText: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("shortcutText"));
	}
	,set_shortcutText: function(value) {
		this.behaviours.set("shortcutText",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"shortcutText");
		return value;
	}
	,get_expandable: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("expandable"));
	}
	,set_expandable: function(value) {
		this.behaviours.set("expandable",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"expandable");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_shortcutText() != null) {
			c.set_shortcutText(this.get_shortcutText());
		}
		c.set_expandable(this.get_expandable());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuItem();
	}
	,__class__: haxe_ui_containers_menus_MenuItem
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_expandable:"set_expandable",get_expandable:"get_expandable",set_shortcutText:"set_shortcutText",get_shortcutText:"get_shortcutText"})
});
var haxe_ui_containers_menus_MenuCheckBox = function() {
	haxe_ui_containers_menus_MenuItem.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuCheckBox"] = haxe_ui_containers_menus_MenuCheckBox;
haxe_ui_containers_menus_MenuCheckBox.__name__ = "haxe.ui.containers.menus.MenuCheckBox";
haxe_ui_containers_menus_MenuCheckBox.__super__ = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuCheckBox.prototype = $extend(haxe_ui_containers_menus_MenuItem.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_menus_MenuItem.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour);
		this.behaviours.register("selected",haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_menus_MenuItem.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuCheckBox();
	}
	,registerComposite: function() {
		haxe_ui_containers_menus_MenuItem.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuCheckBox_Builder;
	}
	,__class__: haxe_ui_containers_menus_MenuCheckBox
	,__properties__: $extend(haxe_ui_containers_menus_MenuItem.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.TextBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.TextBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var checkbox = this._component.findComponent(null,haxe_ui_components_CheckBox,false);
		if(checkbox == null) {
			checkbox = new haxe_ui_components_CheckBox();
			checkbox.set_styleNames("menuitem-checkbox");
			checkbox.scriptAccess = false;
			this._component.addComponent(checkbox);
		}
		checkbox.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour
});
var haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,false);
		if(label != null) {
			label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.SelectedBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.SelectedBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var checkbox = this._component.findComponent(null,haxe_ui_components_CheckBox,false);
		if(checkbox == null) {
			checkbox = new haxe_ui_components_CheckBox();
			checkbox.set_styleNames("menuitem-checkbox");
			checkbox.scriptAccess = false;
			this._component.addComponent(checkbox);
		}
		checkbox.set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour
});
var haxe_ui_containers_menus__$MenuCheckBox_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.Builder"] = haxe_ui_containers_menus__$MenuCheckBox_Builder;
haxe_ui_containers_menus__$MenuCheckBox_Builder.__name__ = "haxe.ui.containers.menus._MenuCheckBox.Builder";
haxe_ui_containers_menus__$MenuCheckBox_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuCheckBox_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		this._checkbox = new haxe_ui_components_CheckBox();
		this._checkbox.set_styleNames("menuitem-checkbox");
		this._checkbox.scriptAccess = false;
		this._component.addComponent(this._checkbox);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.scriptAccess = false;
		this._component.addComponent(label);
	}
	,__class__: haxe_ui_containers_menus__$MenuCheckBox_Builder
});
var haxe_ui_containers_menus__$MenuItem_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.TextBehaviour"] = haxe_ui_containers_menus__$MenuItem_TextBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.TextBehaviour";
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-label",null,false);
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_TextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,false);
		if(label != null) {
			label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.IconBehaviour"] = haxe_ui_containers_menus__$MenuItem_IconBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.IconBehaviour";
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this._value)) {
			return;
		}
		var icon = this._component.findComponent("menuitem-icon",haxe_ui_components_Image,false);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.scriptAccess = false;
			icon.set_id("menuitem-icon");
			icon.addClass("menuitem-icon");
			this._component.addComponentAt(icon,0);
		}
		icon.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_IconBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ExpandableBehaviour"] = haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ExpandableBehaviour";
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var image = this._component.findComponent("menuitem-expandable");
		if(image == null && haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(true))) {
			image = new haxe_ui_components_Image();
			image.set_id("menuitem-expandable");
			image.set_styleNames("menuitem-expandable");
			image.scriptAccess = false;
			this._component.addComponent(image);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style");
			if(force == true) {
				_this._style = null;
			}
		} else if(haxe_ui_util__$Variant_Variant_$Impl_$.eq(this._value,haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false))) {
			this._component.removeComponent(image);
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour
});
var haxe_ui_containers_menus__$MenuItem_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Events"] = haxe_ui_containers_menus__$MenuItem_Events;
haxe_ui_containers_menus__$MenuItem_Events.__name__ = "haxe.ui.containers.menus._MenuItem.Events";
haxe_ui_containers_menus__$MenuItem_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuItem_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover",true,true);
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover",true,true);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Events
});
var haxe_ui_containers_menus__$MenuItem_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Builder"] = haxe_ui_containers_menus__$MenuItem_Builder;
haxe_ui_containers_menus__$MenuItem_Builder.__name__ = "haxe.ui.containers.menus._MenuItem.Builder";
haxe_ui_containers_menus__$MenuItem_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuItem_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-label");
		label.set_styleNames("menuitem-label");
		label.scriptAccess = false;
		this._component.addComponent(label);
		var label1 = new haxe_ui_components_Label();
		label1.set_id("menuitem-shortcut-label");
		label1.set_styleNames("menuitem-shortcut-label");
		label1.scriptAccess = false;
		this._component.addComponent(label1);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Builder
});
var haxe_ui_containers_menus_MenuOptionBox = function() {
	haxe_ui_containers_menus_MenuItem.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuOptionBox"] = haxe_ui_containers_menus_MenuOptionBox;
haxe_ui_containers_menus_MenuOptionBox.__name__ = "haxe.ui.containers.menus.MenuOptionBox";
haxe_ui_containers_menus_MenuOptionBox.__super__ = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuOptionBox.prototype = $extend(haxe_ui_containers_menus_MenuItem.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_menus_MenuItem.prototype.registerBehaviours.call(this);
		this.behaviours.register("componentGroup",haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour);
		this.behaviours.register("selected",haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour);
	}
	,get_componentGroup: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		this.behaviours.set("componentGroup",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	,get_selected: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_menus_MenuItem.prototype.cloneComponent.call(this);
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		c.set_selected(this.get_selected());
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuOptionBox();
	}
	,registerComposite: function() {
		haxe_ui_containers_menus_MenuItem.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuOptionBox_Builder;
	}
	,__class__: haxe_ui_containers_menus_MenuOptionBox
	,__properties__: $extend(haxe_ui_containers_menus_MenuItem.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup"})
});
var haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.GroupBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.GroupBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_componentGroup(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour
});
var haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,false);
		if(label != null) {
			label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.TextBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.TextBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour
});
var haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.SelectedBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.SelectedBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour
});
var haxe_ui_containers_menus__$MenuOptionBox_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.Builder"] = haxe_ui_containers_menus__$MenuOptionBox_Builder;
haxe_ui_containers_menus__$MenuOptionBox_Builder.__name__ = "haxe.ui.containers.menus._MenuOptionBox.Builder";
haxe_ui_containers_menus__$MenuOptionBox_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuOptionBox_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_optionbox: null
	,create: function() {
		this._optionbox = new haxe_ui_components_OptionBox();
		this._optionbox.set_styleNames("menuitem-optionbox");
		this._optionbox.scriptAccess = false;
		this._component.addComponent(this._optionbox);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.scriptAccess = false;
		this._component.addComponent(label);
	}
	,__class__: haxe_ui_containers_menus__$MenuOptionBox_Builder
});
var haxe_ui_containers_menus_MenuSeparator = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuSeparator"] = haxe_ui_containers_menus_MenuSeparator;
haxe_ui_containers_menus_MenuSeparator.__name__ = "haxe.ui.containers.menus.MenuSeparator";
haxe_ui_containers_menus_MenuSeparator.__super__ = haxe_ui_core_Component;
haxe_ui_containers_menus_MenuSeparator.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuSeparator();
	}
	,__class__: haxe_ui_containers_menus_MenuSeparator
});
var haxe_ui_containers_properties_Property = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.properties.Property"] = haxe_ui_containers_properties_Property;
haxe_ui_containers_properties_Property.__name__ = "haxe.ui.containers.properties.Property";
haxe_ui_containers_properties_Property.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_properties_Property.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_properties_Property.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("label",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util__$Variant_Variant_$Impl_$.fromString("text"));
		this.behaviours.register("dataSource",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_label: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("label"));
	}
	,set_label: function(value) {
		this.behaviours.set("label",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"label");
		return value;
	}
	,get_type: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviours.get("type"));
	}
	,set_type: function(value) {
		this.behaviours.set("type",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"type");
		return value;
	}
	,get_dataSource: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		this.behaviours.set("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_label() != null) {
			c.set_label(this.get_label());
		}
		if(this.get_type() != null) {
			c.set_type(this.get_type());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_properties_Property();
	}
	,__class__: haxe_ui_containers_properties_Property
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_type:"set_type",get_type:"get_type",set_label:"set_label",get_label:"get_label"})
});
var haxe_ui_containers_properties_PropertyGrid = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.properties.PropertyGrid"] = haxe_ui_containers_properties_PropertyGrid;
haxe_ui_containers_properties_PropertyGrid.__name__ = "haxe.ui.containers.properties.PropertyGrid";
haxe_ui_containers_properties_PropertyGrid.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_properties_PropertyGrid.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_properties_PropertyGrid();
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_properties__$PropertyGrid_Events;
		this._compositeBuilderClass = haxe_ui_containers_properties__$PropertyGrid_Builder;
	}
	,__class__: haxe_ui_containers_properties_PropertyGrid
});
var haxe_ui_containers_properties__$PropertyGrid_Events = function(scrollview) {
	haxe_ui_containers_ScrollViewEvents.call(this,scrollview);
};
$hxClasses["haxe.ui.containers.properties._PropertyGrid.Events"] = haxe_ui_containers_properties__$PropertyGrid_Events;
haxe_ui_containers_properties__$PropertyGrid_Events.__name__ = "haxe.ui.containers.properties._PropertyGrid.Events";
haxe_ui_containers_properties__$PropertyGrid_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_properties__$PropertyGrid_Events.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	__class__: haxe_ui_containers_properties__$PropertyGrid_Events
});
var haxe_ui_containers_properties__$PropertyGrid_Builder = function(scrollview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,scrollview);
};
$hxClasses["haxe.ui.containers.properties._PropertyGrid.Builder"] = haxe_ui_containers_properties__$PropertyGrid_Builder;
haxe_ui_containers_properties__$PropertyGrid_Builder.__name__ = "haxe.ui.containers.properties._PropertyGrid.Builder";
haxe_ui_containers_properties__$PropertyGrid_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_properties__$PropertyGrid_Builder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	__class__: haxe_ui_containers_properties__$PropertyGrid_Builder
});
var haxe_ui_containers_properties_PropertyGroup = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.properties.PropertyGroup"] = haxe_ui_containers_properties_PropertyGroup;
haxe_ui_containers_properties_PropertyGroup.__name__ = "haxe.ui.containers.properties.PropertyGroup";
haxe_ui_containers_properties_PropertyGroup.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_properties_PropertyGroup.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_properties__$PropertyGroup_Events;
		this._compositeBuilderClass = haxe_ui_containers_properties__$PropertyGroup_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_properties__$PropertyGroup_TextBehaviour);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_properties_PropertyGroup();
	}
	,__class__: haxe_ui_containers_properties_PropertyGroup
});
var haxe_ui_containers_properties__$PropertyGroup_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.properties._PropertyGroup.TextBehaviour"] = haxe_ui_containers_properties__$PropertyGroup_TextBehaviour;
haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.__name__ = "haxe.ui.containers.properties._PropertyGroup.TextBehaviour";
haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("property-group-header-label");
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this._value));
	}
	,__class__: haxe_ui_containers_properties__$PropertyGroup_TextBehaviour
});
var haxe_ui_containers_properties__$PropertyGroup_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers.properties._PropertyGroup.Events"] = haxe_ui_containers_properties__$PropertyGroup_Events;
haxe_ui_containers_properties__$PropertyGroup_Events.__name__ = "haxe.ui.containers.properties._PropertyGroup.Events";
haxe_ui_containers_properties__$PropertyGroup_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_properties__$PropertyGroup_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		var header = this._target.findComponent("property-group-header",haxe_ui_core_Component);
		if(header.hasEvent("click") == false) {
			header.registerEvent("click",$bind(this,this.onHeaderClicked));
		}
	}
	,unregister: function() {
		var header = this._target.findComponent("property-group-header",haxe_ui_core_Component);
		header.unregisterEvent("click",$bind(this,this.onHeaderClicked));
	}
	,onHeaderClicked: function(event) {
		var header = this._target.findComponent("property-group-header",haxe_ui_core_Component);
		var contents = this._target.findComponent("property-group-contents",haxe_ui_core_Component);
		if(header.hasClass(":expanded")) {
			header.swapClass(":collapsed",":expanded",true,true);
			contents.set_hidden(true);
		} else {
			header.swapClass(":expanded",":collapsed",true,true);
			contents.set_hidden(false);
		}
	}
	,__class__: haxe_ui_containers_properties__$PropertyGroup_Events
});
var haxe_ui_containers_properties__$PropertyGroup_Builder = function(propertyGroup) {
	haxe_ui_core_CompositeBuilder.call(this,propertyGroup);
	this._propertyGroup = propertyGroup;
};
$hxClasses["haxe.ui.containers.properties._PropertyGroup.Builder"] = haxe_ui_containers_properties__$PropertyGroup_Builder;
haxe_ui_containers_properties__$PropertyGroup_Builder.__name__ = "haxe.ui.containers.properties._PropertyGroup.Builder";
haxe_ui_containers_properties__$PropertyGroup_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_properties__$PropertyGroup_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_propertyGroup: null
	,_propertyGroupHeader: null
	,_propertyGroupContents: null
	,create: function() {
		this._propertyGroupHeader = new haxe_ui_containers_HBox();
		this._propertyGroupHeader.scriptAccess = false;
		this._propertyGroupHeader.addClass("property-group-header");
		this._propertyGroupHeader.addClass(":expanded");
		this._propertyGroupHeader.set_id("property-group-header");
		var image = new haxe_ui_components_Image();
		image.addClass("property-group-header-icon");
		image.scriptAccess = false;
		this._propertyGroupHeader.addComponent(image);
		var label = new haxe_ui_components_Label();
		label.addClass("property-group-header-label");
		label.set_id("property-group-header-label");
		label.scriptAccess = false;
		this._propertyGroupHeader.addComponent(label);
		this._propertyGroup.addComponent(this._propertyGroupHeader);
		this._propertyGroupContents = new haxe_ui_containers_Grid();
		this._propertyGroupContents.scriptAccess = false;
		this._propertyGroupContents.addClass("property-group-contents");
		this._propertyGroupContents.set_id("property-group-contents");
		this._propertyGroup.addComponent(this._propertyGroupContents);
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_properties_Property)) {
			var prop = js_Boot.__cast(child , haxe_ui_containers_properties_Property);
			var labelContainer = new haxe_ui_containers_Box();
			labelContainer.scriptAccess = false;
			labelContainer.addClass("property-group-item-label-container");
			this._propertyGroupContents.addComponent(labelContainer);
			var label = new haxe_ui_components_Label();
			label.scriptAccess = false;
			label.set_text(prop.get_label());
			label.addClass("property-group-item-label");
			labelContainer.addComponent(label);
			var editorContainer = new haxe_ui_containers_Box();
			editorContainer.scriptAccess = false;
			editorContainer.addClass("property-group-item-editor-container");
			this._propertyGroupContents.addComponent(editorContainer);
			var editor = this.buildEditor(prop);
			editor.scriptAccess = false;
			editor.set_id(child.get_id());
			editor.addClass("property-group-item-editor");
			editorContainer.addComponent(editor);
			editor.registerEvent("change",$bind(this,this.onPropertyEditorChange));
			this._propertyGroup.registerInternalEvents(haxe_ui_containers_properties__$PropertyGroup_Events,true);
			return editor;
		}
		return null;
	}
	,onPropertyEditorChange: function(event) {
		var newEvent = new haxe_ui_events_UIEvent("change");
		newEvent.target = event.target;
		this._component.findAncestor(null,haxe_ui_containers_properties_PropertyGrid).dispatch(newEvent);
	}
	,buildEditor: function(property) {
		var type = property.get_type();
		var c = null;
		switch(type) {
		case "boolean":
			c = new haxe_ui_components_CheckBox();
			c.set_value(property.get_value());
			break;
		case "int":
			c = new haxe_ui_components_NumberStepper();
			c.set_value(property.get_value());
			break;
		case "list":
			c = new haxe_ui_components_DropDown();
			(js_Boot.__cast(c , haxe_ui_components_DropDown)).set_dataSource(property.get_dataSource());
			var indexToSelect = 0;
			var _g = 0;
			var _g1 = property.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				if(property.get_dataSource().get(i).value == property.get_value()) {
					indexToSelect = i;
					break;
				}
			}
			(js_Boot.__cast(c , haxe_ui_components_DropDown)).set_selectedIndex(indexToSelect);
			break;
		case "text":
			c = new haxe_ui_components_TextField();
			c.set_value(property.get_value());
			break;
		default:
			c = new haxe_ui_components_TextField();
			c.set_value(property.get_value());
		}
		return c;
	}
	,__class__: haxe_ui_containers_properties__$PropertyGroup_Builder
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_percentWidth(100);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	var icon = new haxe_ui_components_Image();
	icon.set_id("icon");
	icon.set_verticalAlign("center");
	icon.hide();
	hbox.addComponent(icon);
	var label = new haxe_ui_components_Label();
	label.set_id("value");
	label.set_percentWidth(100);
	label.set_verticalAlign("center");
	label.hide();
	hbox.addComponent(label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	alias = StringTools.replace(alias,"-","").toLowerCase();
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	return haxe_ui_core_ComponentClassMap.get_instance()._map.keys();
};
haxe_ui_core_ComponentClassMap.clear = function() {
	haxe_ui_core_ComponentClassMap.get_instance()._map = new haxe_ds_StringMap();
};
haxe_ui_core_ComponentClassMap.hasClass = function(className) {
	return haxe_ui_core_ComponentClassMap.get_instance().hasClassName(className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			return _this.getReserved(alias);
		} else {
			return _this.h[alias];
		}
	}
	,registerClassName: function(alias,className) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			_this.setReserved(alias,className);
		} else {
			_this.h[alias] = className;
		}
	}
	,hasClassName: function(className) {
		var k = this._map.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var _this = this._map;
			if((__map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1]) == className) {
				return true;
			}
		}
		return false;
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._component.hasClass(":disabled"));
	}
	,invalidateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value)) {
			this._component.addClass(":disabled",true,true);
			this._component.dispatch(new haxe_ui_events_UIEvent("disabled"));
		} else {
			this._component.removeClass(":disabled",true,true);
			this._component.dispatch(new haxe_ui_events_UIEvent("enabled"));
		}
		this._component.disableInteractivity(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this._value));
	}
	,__class__: haxe_ui_core_ComponentDisabledBehaviour
});
var haxe_ui_core_ComponentFieldMap = function() { };
$hxClasses["haxe.ui.core.ComponentFieldMap"] = haxe_ui_core_ComponentFieldMap;
haxe_ui_core_ComponentFieldMap.__name__ = "haxe.ui.core.ComponentFieldMap";
haxe_ui_core_ComponentFieldMap.mapField = function(name) {
	var _this = haxe_ui_core_ComponentFieldMap.MAP;
	if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
		var _this1 = haxe_ui_core_ComponentFieldMap.MAP;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	return name;
};
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else {
			var _this = this._invalidationFlags;
			if(!(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag))) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
				this.parentComponent.invalidateComponent("imageDisplay");
			}
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_LayoutClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.LayoutClassMap"] = haxe_ui_core_LayoutClassMap;
haxe_ui_core_LayoutClassMap.__name__ = "haxe.ui.core.LayoutClassMap";
haxe_ui_core_LayoutClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_LayoutClassMap.get_instance = function() {
	if(haxe_ui_core_LayoutClassMap._instance == null) {
		haxe_ui_core_LayoutClassMap._instance = new haxe_ui_core_LayoutClassMap();
	}
	return haxe_ui_core_LayoutClassMap._instance;
};
haxe_ui_core_LayoutClassMap.get = function(alias) {
	return haxe_ui_core_LayoutClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_LayoutClassMap.register = function(alias,className) {
	haxe_ui_core_LayoutClassMap.get_instance().registerClassName(StringTools.replace(alias,"layout",""),className);
	haxe_ui_core_LayoutClassMap.get_instance().registerClassName(alias,className);
};
haxe_ui_core_LayoutClassMap.list = function() {
	return haxe_ui_core_LayoutClassMap.get_instance()._map.keys();
};
haxe_ui_core_LayoutClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			return _this.getReserved(alias);
		} else {
			return _this.h[alias];
		}
	}
	,registerClassName: function(alias,className) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			_this.setReserved(alias,className);
		} else {
			_this.h[alias] = className;
		}
	}
	,__class__: haxe_ui_core_LayoutClassMap
};
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	haxe_ui_backend_ScreenImpl.call(this);
	this.rootComponents = [];
	this._eventMap = new haxe_ui_util_EventMap();
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	rootComponents: null
	,_eventMap: null
	,addComponent: function(component) {
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
			haxe_ui_focus_FocusManager.get_instance().pushView(component);
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
	}
	,removeComponent: function(component) {
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style");
			child.invalidateComponent("display");
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,messageBox: function(message,title,type,modal,callback) {
		if(modal == null) {
			modal = true;
		}
		return haxe_ui_Toolkit.messageBox(message,title,type,modal,callback);
	}
	,dialog: function(contents,title,buttons,modal,callback) {
		if(modal == null) {
			modal = true;
		}
		return haxe_ui_Toolkit.dialog(contents,title,buttons,modal,callback);
	}
	,invalidateAll: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c);
		}
	}
	,invalidateChildren: function(c) {
		var _g = 0;
		var _g1 = c.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child);
		}
		c.invalidateComponent();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		} else {
			haxe_Log.trace("WARNING: Screen event \"" + type + "\" not supported",{ fileName : "haxe/ui/core/Screen.hx", lineNumber : 114, className : "haxe.ui.core.Screen", methodName : "registerEvent"});
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else {
			var _this = this._invalidationFlags;
			if(!(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag))) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
				this.parentComponent.invalidateComponent("textDisplay");
			}
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			measureInvalid = this.validateStyle() || measureInvalid;
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"}
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else {
			var _this = this._invalidationFlags;
			if(!(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag))) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
				this.parentComponent.invalidateComponent("textInput");
			}
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			measureInvalid = this.validateStyle() || measureInvalid;
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"}
});
var haxe_ui_data_DataSource = function(transformer) {
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	onChange: null
	,transformer: null
	,_changed: null
	,_allowCallbacks: null
	,get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			if(this.onChange != null) {
				this.onChange();
			}
		}
		return value;
	}
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = this.onChange;
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		return r;
	}
	,insert: function(index,item) {
		var r = this.handleInsert(index,item);
		this.handleChanged();
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		return r;
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		this.handleClear();
		this._allowCallbacks = o;
		this.handleChanged();
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true && this.onChange != null) {
			this._changed = false;
			this.onChange();
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(index,item) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleClear: function() {
		var cachedTransformer = this.transformer;
		this.transformer = null;
		while(this.get_size() > 0) this.remove(this.get(0));
		this.transformer = cachedTransformer;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_size:"get_size",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,handleGetSize: function() {
		return this._array.length;
	}
	,handleGetItem: function(index) {
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		this._array.push(item);
		return item;
	}
	,handleInsert: function(index,item) {
		this._array.splice(index,0,item);
		return item;
	}
	,handleRemoveItem: function(item) {
		HxOverrides.remove(this._array,item);
		return item;
	}
	,handleClear: function() {
		while(this._array.length > 0) this._array.pop();
	}
	,handleUpdateItem: function(index,item) {
		return this._array[index] = item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ArrayDataSource();
		c._array = this._array.slice();
		return c;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_DataSourceFactory = function() {
};
$hxClasses["haxe.ui.data.DataSourceFactory"] = haxe_ui_data_DataSourceFactory;
haxe_ui_data_DataSourceFactory.__name__ = "haxe.ui.data.DataSourceFactory";
haxe_ui_data_DataSourceFactory.prototype = {
	create: function(type) {
		var ds = Type.createInstance(type,[]);
		return ds;
	}
	,fromString: function(data,type) {
		var ds = this.create(type);
		if(StringTools.startsWith(data,"<")) {
			var xml = Xml.parse(data).firstElement();
			var el = xml.elements();
			while(el.hasNext()) {
				var el1 = el.next();
				var o = this.xml2Object(el1);
				ds.add(o);
			}
		} else if(StringTools.startsWith(data,"[")) {
			var json = JSON.parse(StringTools.replace(data,"'","\""));
			var _g = 0;
			while(_g < json.length) {
				var o1 = json[_g];
				++_g;
				ds.add(o1);
			}
		}
		return ds;
	}
	,xml2Object: function(el,addId) {
		if(addId == null) {
			addId = true;
		}
		var o = { };
		if(addId == true) {
			if(el.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(el.nodeType));
			}
			o["id"] = el.nodeName;
		}
		var attr = el.attributes();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			o[attr1] = el.get(attr1);
		}
		var childEl = el.elements();
		while(childEl.hasNext()) {
			var childEl1 = childEl.next();
			var childObject = this.xml2Object(childEl1,false);
			if(childEl1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(childEl1.nodeType));
			}
			o[childEl1.nodeName] = childObject;
		}
		return o;
	}
	,__class__: haxe_ui_data_DataSourceFactory
};
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_ListDataSource = function(transformer) {
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = new haxe_ds_List();
};
$hxClasses["haxe.ui.data.ListDataSource"] = haxe_ui_data_ListDataSource;
haxe_ui_data_ListDataSource.__name__ = "haxe.ui.data.ListDataSource";
haxe_ui_data_ListDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ListDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,handleGetSize: function() {
		return this._array.length;
	}
	,handleGetItem: function(index) {
		var i = 0;
		var r = null;
		var _g_head = this._array.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var x = val;
			if(i == index) {
				r = x;
				break;
			}
			++i;
		}
		return r;
	}
	,handleIndexOf: function(item) {
		var i = 0;
		var r = null;
		var index = -1;
		var _g_head = this._array.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var x = val;
			if(x == item) {
				index = i;
				break;
			}
			++i;
		}
		return index;
	}
	,handleAddItem: function(item) {
		this._array.add(item);
		return item;
	}
	,handleInsert: function(index,item) {
		var i = 0;
		var r = null;
		var _g_head = this._array.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var x = val;
			if(i == index) {
				r = x;
				this._array.push(item);
				break;
			}
			++i;
		}
		return r;
	}
	,handleRemoveItem: function(item) {
		this._array.remove(item);
		return item;
	}
	,handleClear: function() {
		this._array.clear();
	}
	,handleUpdateItem: function(index,item) {
		var i = 0;
		var r = null;
		var _g_head = this._array.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var x = val;
			if(i == index) {
				x = item;
				break;
			}
			++i;
		}
		return item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ListDataSource();
		c._array = Lambda.list(this._array);
		return c;
	}
	,__class__: haxe_ui_data_ListDataSource
});
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_data_transformation_NativeTypeTransformer = function() {
};
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = "haxe.ui.data.transformation.NativeTypeTransformer";
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
haxe_ui_data_transformation_NativeTypeTransformer.prototype = {
	transformFrom: function(i) {
		var o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
	,__class__: haxe_ui_data_transformation_NativeTypeTransformer
};
var haxe_ui_debug_CallStackHelper = function() { };
$hxClasses["haxe.ui.debug.CallStackHelper"] = haxe_ui_debug_CallStackHelper;
haxe_ui_debug_CallStackHelper.__name__ = "haxe.ui.debug.CallStackHelper";
haxe_ui_debug_CallStackHelper.traceCallStack = function() {
	var arr = haxe_CallStack.callStack();
	if(arr == null) {
		haxe_Log.trace("Callstack is null!",{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 9, className : "haxe.ui.debug.CallStackHelper", methodName : "traceCallStack"});
		return;
	}
	haxe_Log.trace(haxe_CallStack.toString(arr),{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 12, className : "haxe.ui.debug.CallStackHelper", methodName : "traceCallStack"});
	haxe_Log.trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>> END >>>>>>>>>>>>>>>>>>>>>>>>>>>>",{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 13, className : "haxe.ui.debug.CallStackHelper", methodName : "traceCallStack"});
};
haxe_ui_debug_CallStackHelper.traceExceptionStack = function() {
	var arr = haxe_CallStack.exceptionStack();
	if(arr == null) {
		haxe_Log.trace("Callstack is null!",{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 19, className : "haxe.ui.debug.CallStackHelper", methodName : "traceExceptionStack"});
		return;
	}
	haxe_Log.trace(haxe_CallStack.toString(arr),{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 22, className : "haxe.ui.debug.CallStackHelper", methodName : "traceExceptionStack"});
	haxe_Log.trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>> END >>>>>>>>>>>>>>>>>>>>>>>>>>>>",{ fileName : "haxe/ui/debug/CallStackHelper.hx", lineNumber : 23, className : "haxe.ui.debug.CallStackHelper", methodName : "traceExceptionStack"});
};
haxe_ui_debug_CallStackHelper.getCallStackString = function() {
	var arr = haxe_CallStack.callStack();
	if(arr == null) {
		throw new js__$Boot_HaxeError("Callstack is null!");
	}
	return haxe_CallStack.toString(arr);
};
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_FilterParser = function() { };
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
haxe_ui_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
	}
	return filter;
};
haxe_ui_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var _this = haxe_ui_filters_FilterParser.filterParamDefaults;
	var defaultParams = __map_reserved[filterName] != null ? _this.getReserved(filterName) : _this.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g1 = 0;
		while(_g1 < params.length) {
			var p1 = params[_g1];
			++_g1;
			copy[n] = p1;
			++n;
		}
	}
	return copy;
};
haxe_ui_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	var _this = haxe_ui_filters_FilterParser.filterParamDefaults;
	if(__map_reserved["drop-shadow"] != null) {
		_this.setReserved("drop-shadow",v);
	} else {
		_this.h["drop-shadow"] = v;
	}
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var _this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v1 = (__map_reserved["drop-shadow"] != null ? _this1.getReserved("drop-shadow") : _this1.h["drop-shadow"]).concat([4,45,0,1,4,4,1,1,false,false,false]);
	var _this2 = this1;
	if(__map_reserved["drop-shadow"] != null) {
		_this2.setReserved("drop-shadow",v1);
	} else {
		_this2.h["drop-shadow"] = v1;
	}
	var v2 = [];
	var _this3 = haxe_ui_filters_FilterParser.filterParamDefaults;
	if(__map_reserved["blur"] != null) {
		_this3.setReserved("blur",v2);
	} else {
		_this3.h["blur"] = v2;
	}
	var this2 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var _this4 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v3 = (__map_reserved["blur"] != null ? _this4.getReserved("blur") : _this4.h["blur"]).concat([1]);
	var _this5 = this2;
	if(__map_reserved["blur"] != null) {
		_this5.setReserved("blur",v3);
	} else {
		_this5.h["blur"] = v3;
	}
};
var haxe_ui_focus_FocusInfo = function() {
};
$hxClasses["haxe.ui.focus.FocusInfo"] = haxe_ui_focus_FocusInfo;
haxe_ui_focus_FocusInfo.__name__ = "haxe.ui.focus.FocusInfo";
haxe_ui_focus_FocusInfo.prototype = {
	view: null
	,currentFocus: null
	,__class__: haxe_ui_focus_FocusInfo
};
var haxe_ui_focus_FocusManager = function() {
	this._views = [];
	this._focusInfo = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.prototype = {
	_views: null
	,_focusInfo: null
	,pushView: function(component) {
		this._views.push(component);
	}
	,popView: function() {
		var c = this._views.pop();
		this._focusInfo.remove(c);
	}
	,focusInfo: null
	,get_focusInfo: function() {
		if(this._views.length == 0) {
			return null;
		}
		var c = this._views[this._views.length - 1];
		var info = this._focusInfo.h[c.__id__];
		if(info == null) {
			info = new haxe_ui_focus_FocusInfo();
			info.view = c;
			this._focusInfo.set(c,info);
		}
		return info;
	}
	,get_focus: function() {
		return this.get_focusInfo().currentFocus;
	}
	,set_focus: function(value) {
		if(value != null && js_Boot.__implements(value,haxe_ui_focus_IFocusable) == false) {
			throw new js__$Boot_HaxeError("Component does not implement IFocusable");
		}
		if(this.get_focusInfo() == null) {
			return value;
		}
		if(this.get_focusInfo().currentFocus != null && this.get_focusInfo().currentFocus != value) {
			this.get_focusInfo().currentFocus.set_focus(false);
			this.get_focusInfo().currentFocus = null;
		}
		if(value != null) {
			this.get_focusInfo().currentFocus = value;
			this.get_focusInfo().currentFocus.set_focus(true);
		}
		haxe_ui_Toolkit.get_screen().set_focus(value);
		return this.get_focusInfo().currentFocus;
	}
	,focusNext: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list) {
		var currentFocus = null;
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(f.get_allowFocus() == true) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				list.push(f);
			}
		}
		var _g = 0;
		var _g1 = c.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var f1 = this.buildFocusableList(child,list);
			if(f1 != null) {
				currentFocus = f1;
			}
		}
		return currentFocus;
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus",get_focusInfo:"get_focusInfo"}
};
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,round: function() {
		this.width = Math.round(this.width);
		this.height = Math.round(this.height);
	}
	,toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx1 = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx1 * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX > ucx1) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width;
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g2 = 0;
		while(_g2 < dimensions.length) {
			var r = dimensions[_g2];
			++_g2;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g21 = 0;
			while(_g21 < r.length) {
				var c = r[_g21];
				++_g21;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g1 = 0;
		while(_g1 < rowHeights.length) {
			var rowHeight = rowHeights[_g1];
			++_g1;
			size.height -= rowHeight;
		}
		if(this.get_component().get_childComponents().length > 1) {
			var columns = Math.ceil(this.get_component().get_childComponents().length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var totalWidth = 0;
		var totalHeight = 0;
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g2 = 0;
		var _g3 = columnCount;
		while(_g2 < _g3) {
			var n = _g2++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g4 = 0;
		var _g5 = this.get_component().get_childComponents();
		while(_g4 < _g5.length) {
			var child1 = _g5[_g4];
			++_g4;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentWidth() == null) {
				if(child1.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child1.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			var copy = columnWidths.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g6 = 0;
			var _g7 = this.get_component().get_childComponents();
			while(_g6 < _g7.length) {
				var child2 = _g7[_g6];
				++_g6;
				if(child2.get_includeInLayout() == false) {
					continue;
				}
				if(child2.get_percentWidth() != null) {
					var cx = usableSize.width * child2.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var n = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g3 = this.get_component().get_childComponents();
		while(_g2 < _g3.length) {
			var child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			var copy = rowHeights.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g4 = 0;
			var _g5 = this.get_component().get_childComponents();
			while(_g4 < _g5.length) {
				var child1 = _g5[_g4];
				++_g4;
				if(child1.get_includeInLayout() == false) {
					continue;
				}
				if(child1.get_percentHeight() != null) {
					var cy = usableSize.height * child1.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g2 = 0;
		var _g3 = columnCount;
		while(_g2 < _g3) {
			var n = _g2++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g4 = 0;
		var _g5 = this.get_component().get_childComponents();
		while(_g4 < _g5.length) {
			var child1 = _g5[_g4];
			++_g4;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentWidth() == null && child1.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var n = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g3 = this.get_component().get_childComponents();
		while(_g2 < _g3.length) {
			var child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g1 = 0;
		while(_g1 < rowHeights.length) {
			var rowHeight = rowHeights[_g1];
			++_g1;
			size.height -= rowHeight;
		}
		if(this.get_component().get_childComponents().length > 1) {
			var rows = Math.ceil(this.get_component().get_childComponents().length / this.get_columns());
			size.width -= this.get_horizontalSpacing() * (this.get_columns() - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var n = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g3 = this.get_component().get_childComponents();
		while(_g2 < _g3.length) {
			var child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g4 = 0;
			var _g5 = this.get_component().get_childComponents();
			while(_g4 < _g5.length) {
				var child1 = _g5[_g4];
				++_g4;
				if(child1.get_includeInLayout() == false) {
					continue;
				}
				if(child1.get_percentWidth() != null) {
					var cx = usableSize.width * child1.get_percentWidth() / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g2 = 0;
		var _g3 = rowCount;
		while(_g2 < _g3) {
			var n = _g2++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g4 = 0;
		var _g5 = this.get_component().get_childComponents();
		while(_g4 < _g5.length) {
			var child1 = _g5[_g4];
			++_g4;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentHeight() == null) {
				if(child1.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child1.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g6 = 0;
			var _g7 = this.get_component().get_childComponents();
			while(_g6 < _g7.length) {
				var child2 = _g7[_g6];
				++_g6;
				if(child2.get_includeInLayout() == false) {
					continue;
				}
				if(child2.get_percentHeight() != null) {
					var cy = usableSize.height * child2.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex] && this._columns == 1) {
						rowHeights[rowIndex] = cy;
					} else if(usableSize.height > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = usableSize.height;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var n = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g3 = this.get_component().get_childComponents();
		while(_g2 < _g3.length) {
			var child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g2 = 0;
		var _g3 = rowCount;
		while(_g2 < _g3) {
			var n = _g2++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g4 = 0;
		var _g5 = this.get_component().get_childComponents();
		while(_g4 < _g5.length) {
			var child1 = _g5[_g4];
			++_g4;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentHeight() == null && child1.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = "haxe.ui.macros.BackendMacros";
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = "haxe.ui.macros.ModuleMacros";
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = "haxe.ui.macros.NativeMacros";
var haxe_ui_parsers_ui_ComponentInfo = function() {
	this.properties = new haxe_ds_StringMap();
	this.children = [];
	this.scriptlets = [];
	this.styles = [];
};
$hxClasses["haxe.ui.parsers.ui.ComponentInfo"] = haxe_ui_parsers_ui_ComponentInfo;
haxe_ui_parsers_ui_ComponentInfo.__name__ = "haxe.ui.parsers.ui.ComponentInfo";
haxe_ui_parsers_ui_ComponentInfo.prototype = {
	type: null
	,id: null
	,left: null
	,top: null
	,width: null
	,height: null
	,percentWidth: null
	,percentHeight: null
	,contentWidth: null
	,contentHeight: null
	,percentContentWidth: null
	,percentContentHeight: null
	,text: null
	,style: null
	,styleNames: null
	,composite: null
	,layoutName: null
	,direction: null
	,properties: null
	,parent: null
	,children: null
	,layout: null
	,scriptlets: null
	,styles: null
	,data: null
	,condition: null
	,get_styleString: function() {
		if(this.style == null) {
			return null;
		}
		return StringTools.replace(this.style,"\"","'");
	}
	,get_dataString: function() {
		if(this.data == null) {
			return null;
		}
		return StringTools.replace(this.data,"\"","'");
	}
	,findRootComponent: function() {
		var r = this;
		while(r.parent != null) r = r.parent;
		return r;
	}
	,validate: function() {
		var propsToRemove = [];
		if(this.layoutName != null && this.layout == null) {
			this.layout = new haxe_ui_parsers_ui_LayoutInfo();
			this.layout.type = this.layoutName;
			var propName = this.properties.keys();
			while(propName.hasNext()) {
				var propName1 = propName.next();
				if(StringTools.startsWith(propName1,"layout")) {
					var _this = this.properties;
					var propValue = __map_reserved[propName1] != null ? _this.getReserved(propName1) : _this.h[propName1];
					propsToRemove.push(propName1);
					propName1 = StringTools.replace(propName1,"layout","");
					propName1 = haxe_ui_util_StringUtil.uncapitalizeFirstLetter(propName1);
					var _this1 = this.layout.properties;
					if(__map_reserved[propName1] != null) {
						_this1.setReserved(propName1,propValue);
					} else {
						_this1.h[propName1] = propValue;
					}
				}
			}
		}
		var _g = 0;
		while(_g < propsToRemove.length) {
			var propName2 = propsToRemove[_g];
			++_g;
			this.properties.remove(propName2);
		}
	}
	,__class__: haxe_ui_parsers_ui_ComponentInfo
	,__properties__: {get_dataString:"get_dataString",get_styleString:"get_styleString"}
};
var haxe_ui_parsers_ui_ComponentParser = function() {
};
$hxClasses["haxe.ui.parsers.ui.ComponentParser"] = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_ComponentParser.__name__ = "haxe.ui.parsers.ui.ComponentParser";
haxe_ui_parsers_ui_ComponentParser.get = function(extension) {
	haxe_ui_parsers_ui_ComponentParser.defaultParsers();
	var _this = haxe_ui_parsers_ui_ComponentParser._parsers;
	var cls = __map_reserved[extension] != null ? _this.getReserved(extension) : _this.h[extension];
	if(cls == null) {
		throw new js__$Boot_HaxeError("No component parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw new js__$Boot_HaxeError("Could not create component parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_ui_ComponentParser.defaultParsers = function() {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser.register("xml",haxe_ui_parsers_ui_XMLParser);
	}
};
haxe_ui_parsers_ui_ComponentParser.register = function(extension,cls) {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser._parsers = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_parsers_ui_ComponentParser._parsers;
	if(__map_reserved[extension] != null) {
		_this.setReserved(extension,cls);
	} else {
		_this.h[extension] = cls;
	}
};
haxe_ui_parsers_ui_ComponentParser.nextId = function(prefix) {
	if(prefix == null) {
		prefix = "component";
	}
	var s = prefix + haxe_ui_parsers_ui_ComponentParser._nextId;
	haxe_ui_parsers_ui_ComponentParser._nextId++;
	return s;
};
haxe_ui_parsers_ui_ComponentParser.float = function(value) {
	return parseFloat(value);
};
haxe_ui_parsers_ui_ComponentParser.isPercentage = function(value) {
	if(value.indexOf("%") == value.length - 1) {
		return true;
	}
	return false;
};
haxe_ui_parsers_ui_ComponentParser.prototype = {
	_resourceResolver: null
	,parse: function(data,resourceResolver) {
		throw new js__$Boot_HaxeError("Component parser not implemented!");
	}
	,__class__: haxe_ui_parsers_ui_ComponentParser
};
var haxe_ui_parsers_ui_LayoutInfo = function() {
	this.properties = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.parsers.ui.LayoutInfo"] = haxe_ui_parsers_ui_LayoutInfo;
haxe_ui_parsers_ui_LayoutInfo.__name__ = "haxe.ui.parsers.ui.LayoutInfo";
haxe_ui_parsers_ui_LayoutInfo.prototype = {
	type: null
	,properties: null
	,__class__: haxe_ui_parsers_ui_LayoutInfo
};
var haxe_ui_parsers_ui_XMLParser = function() {
	haxe_ui_parsers_ui_ComponentParser.call(this);
};
$hxClasses["haxe.ui.parsers.ui.XMLParser"] = haxe_ui_parsers_ui_XMLParser;
haxe_ui_parsers_ui_XMLParser.__name__ = "haxe.ui.parsers.ui.XMLParser";
haxe_ui_parsers_ui_XMLParser.parseComponent = function(component,xml,resourceResolver) {
	var isComponent = false;
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	var nodeName = xml.nodeName;
	if(nodeName == "import") {
		haxe_ui_parsers_ui_XMLParser.parseImportNode(component.parent,xml,resourceResolver);
	} else if(nodeName == "script") {
		haxe_ui_parsers_ui_XMLParser.parseScriptNode(component,xml,resourceResolver);
	} else if(nodeName == "style") {
		haxe_ui_parsers_ui_XMLParser.parseStyleNode(component,xml,resourceResolver);
	} else if(nodeName == "data") {
		if(xml.firstElement() != null) {
			var tmp = haxe_xml_Printer.print(xml);
			component.parent.data = StringTools.trim(tmp);
		} else {
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
			}
			var _this = xml.children[0];
			if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(_this.nodeType));
			}
			if(StringTools.startsWith(StringTools.trim(_this.nodeValue),"[")) {
				if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
				}
				var _this1 = xml.children[0];
				if(_this1.nodeType == Xml.Document || _this1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(_this1.nodeType));
				}
				component.parent.data = StringTools.trim(_this1.nodeValue);
			}
		}
	} else if(nodeName == "layout") {
		haxe_ui_parsers_ui_XMLParser.parseLayoutNode(component.parent,xml);
	} else {
		haxe_ui_parsers_ui_XMLParser.parseDetails(component,xml);
		haxe_ui_parsers_ui_XMLParser.parseAttributes(component,xml);
		var childXml = xml.elements();
		while(childXml.hasNext()) {
			var childXml1 = childXml.next();
			var child = new haxe_ui_parsers_ui_ComponentInfo();
			child.parent = component;
			if(haxe_ui_parsers_ui_XMLParser.parseComponent(child,childXml1,resourceResolver) == true) {
				component.children.push(child);
			}
		}
		if(component.type == "itemrenderer" && component.parent != null) {
			var _this2 = component.parent.properties;
			if(__map_reserved["native"] != null) {
				_this2.setReserved("native","false");
			} else {
				_this2.h["native"] = "false";
			}
		}
		component.validate();
		isComponent = true;
	}
	return isComponent;
};
haxe_ui_parsers_ui_XMLParser.parseImportNode = function(component,xml,resourceResolver) {
	if(xml.get("source") != null) {
		var source = xml.get("source");
		if(source == null) {
			source = xml.get("resource");
		}
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			var extension = resourceResolver.extension(source);
			var c = haxe_ui_parsers_ui_ComponentParser.get(extension).parse(sourceData,resourceResolver);
			component.findRootComponent().styles = component.findRootComponent().styles.concat(c.styles);
			c.styles = [];
			component.findRootComponent().scriptlets = component.findRootComponent().scriptlets.concat(c.scriptlets);
			c.scriptlets = [];
			c.parent = component;
			component.children.push(c);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseScriptNode = function(component,xml,resourceResolver) {
	var scriptText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(_this.nodeType));
		}
		scriptText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(scriptText == null) {
				scriptText = "";
			}
			scriptText += "\n" + sourceData;
		}
	}
	if(scriptText != null) {
		var scope = "global";
		if(scope == "global") {
			component.findRootComponent().scriptlets.push(scriptText);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseStyleNode = function(component,xml,resourceResolver) {
	var styleText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(_this.nodeType));
		}
		styleText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(styleText == null) {
				styleText = "";
			}
			styleText += "\n" + sourceData;
		}
	}
	if(styleText != null) {
		var scope = "global";
		if(scope == "global") {
			component.findRootComponent().styles.push(styleText);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseLayoutNode = function(component,xml) {
	var layoutXml = xml.firstElement();
	var layout = new haxe_ui_parsers_ui_LayoutInfo();
	component.layout = layout;
	if(layoutXml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(layoutXml.nodeType));
	}
	layout.type = layoutXml.nodeName;
	var attrName = layoutXml.attributes();
	while(attrName.hasNext()) {
		var attrName1 = attrName.next();
		var attrValue = layoutXml.get(attrName1);
		var _this = layout.properties;
		if(__map_reserved[attrName1] != null) {
			_this.setReserved(attrName1,attrValue);
		} else {
			_this.h[attrName1] = attrValue;
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseDetails = function(component,xml) {
	var tmp;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
		}
		tmp = "" + _$Xml_XmlType_$Impl_$.toString(xml.children[0].nodeType) == "1";
	} else {
		tmp = false;
	}
	if(tmp) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(_this.nodeType));
		}
		var value = StringTools.trim(_this.nodeValue);
		if(value != null && value.length > 0) {
			component.text = value;
		}
	}
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(xml.nodeType));
	}
	component.type = StringTools.replace(xml.nodeName.toLowerCase(),"-","");
};
haxe_ui_parsers_ui_XMLParser.parseAttributes = function(component,xml) {
	var attrName = xml.attributes();
	while(attrName.hasNext()) {
		var attrName1 = attrName.next();
		var attrValue = xml.get(attrName1);
		switch(attrName1) {
		case "composite":
			component.composite = attrValue == "true";
			break;
		case "condition":
			component.condition = attrValue;
			break;
		case "contentHeight":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "contentWidth":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "direction":
			component.direction = attrValue;
			break;
		case "height":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.height = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "id":
			component.id = attrValue;
			break;
		case "if":
			var condition = [];
			var _g = 0;
			var _g1 = attrValue.split(",");
			while(_g < _g1.length) {
				var t = _g1[_g];
				++_g;
				condition.push("backend == \"" + StringTools.trim(t) + "\"");
			}
			component.condition = condition.join(" || ");
			break;
		case "layout":
			component.layoutName = attrValue;
			break;
		case "left":
			component.left = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "style":
			component.style = attrValue;
			break;
		case "styleName":case "styleNames":
			component.styleNames = attrValue;
			break;
		case "text":
			component.text = attrValue;
			break;
		case "top":
			component.top = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "unless":
			var condition1 = [];
			var _g2 = 0;
			var _g11 = attrValue.split(",");
			while(_g2 < _g11.length) {
				var t1 = _g11[_g2];
				++_g2;
				condition1.push("backend != \"" + StringTools.trim(t1) + "\"");
			}
			component.condition = condition1.join(" && ");
			break;
		case "width":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.width = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		default:
			var _this = component.properties;
			if(__map_reserved[attrName1] != null) {
				_this.setReserved(attrName1,attrValue);
			} else {
				_this.h[attrName1] = attrValue;
			}
		}
	}
};
haxe_ui_parsers_ui_XMLParser.__super__ = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_XMLParser.prototype = $extend(haxe_ui_parsers_ui_ComponentParser.prototype,{
	parse: function(data,resourceResolver) {
		this._resourceResolver = resourceResolver;
		var component = new haxe_ui_parsers_ui_ComponentInfo();
		var xml = Xml.parse(data).firstElement();
		haxe_ui_parsers_ui_XMLParser.parseComponent(component,xml,resourceResolver);
		return component;
	}
	,__class__: haxe_ui_parsers_ui_XMLParser
});
var haxe_ui_parsers_ui_resolvers_ResourceResolver = function(params) {
	this._params = params;
};
$hxClasses["haxe.ui.parsers.ui.resolvers.ResourceResolver"] = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_ResourceResolver.__name__ = "haxe.ui.parsers.ui.resolvers.ResourceResolver";
haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype = {
	_params: null
	,getResourceData: function(r) {
		return null;
	}
	,extension: function(path) {
		if(path.indexOf(".") == -1) {
			return null;
		}
		var arr = path.split(".");
		var extension = arr[arr.length - 1];
		return extension;
	}
	,__class__: haxe_ui_parsers_ui_resolvers_ResourceResolver
};
var haxe_ui_parsers_ui_resolvers_AssetResourceResolver = function(rootFile,params) {
	haxe_ui_parsers_ui_resolvers_ResourceResolver.call(this,params);
	this._rootFile = rootFile;
	var arr = this._rootFile.split("/");
	arr.pop();
	this._rootDir = arr.join("/");
	if(arr.length > 1) {
		this._rootDir += "/";
	}
};
$hxClasses["haxe.ui.parsers.ui.resolvers.AssetResourceResolver"] = haxe_ui_parsers_ui_resolvers_AssetResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__name__ = "haxe.ui.parsers.ui.resolvers.AssetResourceResolver";
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__super__ = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.prototype = $extend(haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype,{
	_rootFile: null
	,_rootDir: null
	,getResourceData: function(r) {
		var f = haxe_io_Path.normalize(this._rootDir + r);
		return haxe_ui_ToolkitAssets.get_instance().getText(f);
	}
	,__class__: haxe_ui_parsers_ui_resolvers_AssetResourceResolver
});
var haxe_ui_scripting_ConditionEvaluator = function() {
};
$hxClasses["haxe.ui.scripting.ConditionEvaluator"] = haxe_ui_scripting_ConditionEvaluator;
haxe_ui_scripting_ConditionEvaluator.__name__ = "haxe.ui.scripting.ConditionEvaluator";
haxe_ui_scripting_ConditionEvaluator.prototype = {
	evaluate: function(condition) {
		if(haxe_ui_scripting_ConditionEvaluator._parser == null) {
			haxe_ui_scripting_ConditionEvaluator._parser = new hscript_Parser();
		}
		if(haxe_ui_scripting_ConditionEvaluator._interp == null) {
			haxe_ui_scripting_ConditionEvaluator._interp = new hscript_Interp();
		}
		var _this = haxe_ui_scripting_ConditionEvaluator._interp.variables;
		var value = haxe_ui_Backend;
		if(__map_reserved["Backend"] != null) {
			_this.setReserved("Backend",value);
		} else {
			_this.h["Backend"] = value;
		}
		var _this1 = haxe_ui_scripting_ConditionEvaluator._interp.variables;
		var value1 = haxe_ui_Backend.get_id();
		if(__map_reserved["backend"] != null) {
			_this1.setReserved("backend",value1);
		} else {
			_this1.h["backend"] = value1;
		}
		var program = haxe_ui_scripting_ConditionEvaluator._parser.parseString(condition);
		var r = haxe_ui_scripting_ConditionEvaluator._interp.execute(program);
		return r;
	}
	,__class__: haxe_ui_scripting_ConditionEvaluator
};
var hscript_Interp = function() {
	var _gthis = this;
	this.variables = new haxe_ds_StringMap();
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	var _this = this.variables;
	var value = null;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",value);
	} else {
		_this.h["null"] = value;
	}
	var _this1 = this.variables;
	if(__map_reserved["true"] != null) {
		_this1.setReserved("true",true);
	} else {
		_this1.h["true"] = true;
	}
	var _this2 = this.variables;
	if(__map_reserved["false"] != null) {
		_this2.setReserved("false",false);
	} else {
		_this2.h["false"] = false;
	}
	var _this3 = this.variables;
	var value1 = Reflect.makeVarArgs(function(el) {
		var inf = _gthis.posInfos();
		var v = el.shift();
		if(el.length > 0) {
			inf.customParams = el;
		}
		haxe_Log.trace(Std.string(v),inf);
	});
	if(__map_reserved["trace"] != null) {
		_this3.setReserved("trace",value1);
	} else {
		_this3.h["trace"] = value1;
	}
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = "hscript.Interp";
hscript_Interp.prototype = {
	variables: null
	,locals: null
	,binops: null
	,depth: null
	,inTry: null
	,declared: null
	,returnValue: null
	,posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",value);
		} else {
			_this.h["+"] = value;
		}
		var _this1 = this.binops;
		var value1 = function(e11,e21) {
			return me.expr(e11) - me.expr(e21);
		};
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",value1);
		} else {
			_this1.h["-"] = value1;
		}
		var _this2 = this.binops;
		var value2 = function(e12,e22) {
			return me.expr(e12) * me.expr(e22);
		};
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",value2);
		} else {
			_this2.h["*"] = value2;
		}
		var _this3 = this.binops;
		var value3 = function(e13,e23) {
			return me.expr(e13) / me.expr(e23);
		};
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",value3);
		} else {
			_this3.h["/"] = value3;
		}
		var _this4 = this.binops;
		var value4 = function(e14,e24) {
			return me.expr(e14) % me.expr(e24);
		};
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",value4);
		} else {
			_this4.h["%"] = value4;
		}
		var _this5 = this.binops;
		var value5 = function(e15,e25) {
			return me.expr(e15) & me.expr(e25);
		};
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",value5);
		} else {
			_this5.h["&"] = value5;
		}
		var _this6 = this.binops;
		var value6 = function(e16,e26) {
			return me.expr(e16) | me.expr(e26);
		};
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",value6);
		} else {
			_this6.h["|"] = value6;
		}
		var _this7 = this.binops;
		var value7 = function(e17,e27) {
			return me.expr(e17) ^ me.expr(e27);
		};
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",value7);
		} else {
			_this7.h["^"] = value7;
		}
		var _this8 = this.binops;
		var value8 = function(e18,e28) {
			return me.expr(e18) << me.expr(e28);
		};
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",value8);
		} else {
			_this8.h["<<"] = value8;
		}
		var _this9 = this.binops;
		var value9 = function(e19,e29) {
			return me.expr(e19) >> me.expr(e29);
		};
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",value9);
		} else {
			_this9.h[">>"] = value9;
		}
		var _this10 = this.binops;
		var value10 = function(e110,e210) {
			return me.expr(e110) >>> me.expr(e210);
		};
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",value10);
		} else {
			_this10.h[">>>"] = value10;
		}
		var _this11 = this.binops;
		var value11 = function(e111,e211) {
			return me.expr(e111) == me.expr(e211);
		};
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",value11);
		} else {
			_this11.h["=="] = value11;
		}
		var _this12 = this.binops;
		var value12 = function(e112,e212) {
			return me.expr(e112) != me.expr(e212);
		};
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",value12);
		} else {
			_this12.h["!="] = value12;
		}
		var _this13 = this.binops;
		var value13 = function(e113,e213) {
			return me.expr(e113) >= me.expr(e213);
		};
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",value13);
		} else {
			_this13.h[">="] = value13;
		}
		var _this14 = this.binops;
		var value14 = function(e114,e214) {
			return me.expr(e114) <= me.expr(e214);
		};
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",value14);
		} else {
			_this14.h["<="] = value14;
		}
		var _this15 = this.binops;
		var value15 = function(e115,e215) {
			return me.expr(e115) > me.expr(e215);
		};
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",value15);
		} else {
			_this15.h[">"] = value15;
		}
		var _this16 = this.binops;
		var value16 = function(e116,e216) {
			return me.expr(e116) < me.expr(e216);
		};
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",value16);
		} else {
			_this16.h["<"] = value16;
		}
		var _this17 = this.binops;
		var value17 = function(e117,e217) {
			if(me.expr(e117) != true) {
				return me.expr(e217) == true;
			} else {
				return true;
			}
		};
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",value17);
		} else {
			_this17.h["||"] = value17;
		}
		var _this18 = this.binops;
		var value18 = function(e118,e218) {
			if(me.expr(e118) == true) {
				return me.expr(e218) == true;
			} else {
				return false;
			}
		};
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",value18);
		} else {
			_this18.h["&&"] = value18;
		}
		var _this19 = this.binops;
		var value19 = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value19);
		} else {
			_this19.h["="] = value19;
		}
		var _this20 = this.binops;
		var value20 = function(e119,e219) {
			return new IntIterator(me.expr(e119),me.expr(e219));
		};
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",value20);
		} else {
			_this20.h["..."] = value20;
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp("=");
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
		if(__map_reserved[op] != null) {
			_this.setReserved(op,value);
		} else {
			_this.h[op] = value;
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp(op);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			var v;
			if(l == null) {
				var _this1 = this.variables;
				v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
			} else {
				v = l.r;
			}
			if(prefix) {
				v += delta;
				if(l == null) {
					var _this2 = this.variables;
					var value = v;
					if(__map_reserved[id] != null) {
						_this2.setReserved(id,value);
					} else {
						_this2.h[id] = value;
					}
				} else {
					l.r = v;
				}
			} else if(l == null) {
				var _this3 = this.variables;
				var value1 = v + delta;
				if(__map_reserved[id] != null) {
					_this3.setReserved(id,value1);
				} else {
					_this3.h[id] = value1;
				}
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e.f;
			var e1 = e.e;
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e.index;
			var e2 = e.e;
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			var e3 = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw new js__$Boot_HaxeError(e3);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			if(js_Boot.__instanceof(e2,hscript__$Interp_Stop)) {
				switch(e2._hx_index) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw e1;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw js__$Boot_HaxeError.wrap(e);
		} else {
			throw new js__$Boot_HaxeError(e);
		}
	}
	,rethrow: function(e) {
		throw js__$Boot_HaxeError.wrap(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			var e = hscript_Error.EUnknownVariable(id);
			throw new js__$Boot_HaxeError(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var _g32 = e.t;
			var e1 = e.e;
			var n = e.n;
			var _this = this.locals;
			this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
			var this1 = this.locals;
			var value = { r : e1 == null ? null : this.expr(e1)};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			return null;
		case 3:
			var e2 = e.e;
			return this.expr(e2);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e.f;
			var e4 = e.e;
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			var _this2 = this.binops;
			var fop = __map_reserved[op] != null ? _this2.getReserved(op) : _this2.h[op];
			if(fop == null) {
				var e5 = hscript_Error.EInvalidOp(op);
				throw new js__$Boot_HaxeError(e5);
			}
			return fop(e11,e21);
		case 7:
			var e6 = e.e;
			var prefix = e.prefix;
			var op1 = e.op;
			switch(op1) {
			case "!":
				return this.expr(e6) != true;
			case "++":
				return this.increment(e6,prefix,1);
			case "-":
				return -this.expr(e6);
			case "--":
				return this.increment(e6,prefix,-1);
			case "~":
				return ~this.expr(e6);
			default:
				var e7 = hscript_Error.EInvalidOp(op1);
				throw new js__$Boot_HaxeError(e7);
			}
			break;
		case 8:
			var params = e.params;
			var e8 = e.e;
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			if(e8._hx_index == 5) {
				var f2 = e8.f;
				var e9 = e8.e;
				var obj = this.expr(e9);
				if(obj == null) {
					var e10 = hscript_Error.EInvalidAccess(f2);
					throw new js__$Boot_HaxeError(e10);
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e8),args);
			}
			break;
		case 9:
			var e22 = e.e2;
			var e12 = e.e1;
			var econd = e.cond;
			if(this.expr(econd) == true) {
				return this.expr(e12);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e13 = e.e;
			var econd1 = e.cond;
			this.whileLoop(econd1,e13);
			return null;
		case 11:
			var e14 = e.e;
			var it = e.it;
			var v2 = e.v;
			this.forLoop(v2,it,e14);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
		case 14:
			var _g44 = e.ret;
			var name = e.name;
			var fexpr = e.e;
			var params1 = e.args;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw new js__$Boot_HaxeError(str);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g11 = 0;
					while(_g11 < params1.length) {
						var p2 = params1[_g11];
						++_g11;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g12 = 0;
				var _g21 = params1.length;
				while(_g12 < _g21) {
					var i = _g12++;
					var key = params1[i].name;
					var _this3 = me.locals;
					var value1 = { r : args1[i]};
					if(__map_reserved[key] != null) {
						_this3.setReserved(key,value1);
					} else {
						_this3.h[key] = value1;
					}
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e15 ) {
						haxe_CallStack.lastException = e15;
						var e16 = ((e15) instanceof js__$Boot_HaxeError) ? e15.val : e15;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e16);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					var _this4 = this.variables;
					if(__map_reserved[name] != null) {
						_this4.setReserved(name,f4);
					} else {
						_this4.h[name] = f4;
					}
				} else {
					var tmp = this.declared;
					var _this5 = this.locals;
					var tmp1 = __map_reserved[name] != null ? _this5.getReserved(name) : _this5.h[name];
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					var _this6 = this.locals;
					if(__map_reserved[name] != null) {
						_this6.setReserved(name,ref);
					} else {
						_this6.h[name] = ref;
					}
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e17 = e.e;
			this.returnValue = e17 == null ? null : this.expr(e17);
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn);
		case 16:
			var index = e.index;
			var e18 = e.e;
			var arr = this.expr(e18);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e.e;
			var tmp2;
			if(arr1.length > 0) {
				var _g3 = arr1[0];
				if(_g3._hx_index == 6) {
					var _g31 = _g3.e2;
					var _g22 = _g3.e1;
					tmp2 = _g3.op == "=>";
				} else {
					tmp2 = false;
				}
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g4 = 0;
				while(_g4 < arr1.length) {
					var e19 = arr1[_g4];
					++_g4;
					if(e19._hx_index == 6) {
						if(e19.op == "=>") {
							var eValue = e19.e2;
							var eKey = e19.e1;
							var key1 = this.expr(eKey);
							var value2 = this.expr(eValue);
							isAllString = isAllString && typeof(key1) == "string";
							isAllInt = isAllInt && (typeof(key1) == "number" && ((key1 | 0) === key1));
							isAllObject = isAllObject && Reflect.isObject(key1);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key1);
							keys.push(key1);
							values.push(value2);
						} else {
							throw new js__$Boot_HaxeError("=> expected");
						}
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g5 = 0;
				var _g6 = keys.length;
				while(_g5 < _g6) {
					var n1 = _g5++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g41 = 0;
				while(_g41 < arr1.length) {
					var e20 = arr1[_g41];
					++_g41;
					a.push(this.expr(e20));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e.params;
			var cl = e.cl;
			var a1 = [];
			var _g7 = 0;
			while(_g7 < params2.length) {
				var e23 = params2[_g7];
				++_g7;
				a1.push(this.expr(e23));
			}
			return this.cnew(cl,a1);
		case 19:
			var e24 = e.e;
			throw js__$Boot_HaxeError.wrap(this.expr(e24));
		case 20:
			var _g51 = e.t;
			var ecatch = e.ecatch;
			var n2 = e.v;
			var e25 = e.e;
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e25);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( e26 ) {
				haxe_CallStack.lastException = e26;
				var e27 = ((e26) instanceof js__$Boot_HaxeError) ? e26.val : e26;
				if(js_Boot.__instanceof(e27,hscript__$Interp_Stop)) {
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(e27);
				} else {
					this.restore(old2);
					this.inTry = oldTry;
					var _this7 = this.locals;
					this.declared.push({ n : n2, old : __map_reserved[n2] != null ? _this7.getReserved(n2) : _this7.h[n2]});
					var _this8 = this.locals;
					var value3 = { r : e27};
					if(__map_reserved[n2] != null) {
						_this8.setReserved(n2,value3);
					} else {
						_this8.h[n2] = value3;
					}
					var v4 = this.expr(ecatch);
					this.restore(old2);
					return v4;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g8 = 0;
			while(_g8 < fl.length) {
				var f5 = fl[_g8];
				++_g8;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e28 = e.e2;
			var e110 = e.e1;
			var econd2 = e.cond;
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e28);
			}
			break;
		case 23:
			var def = e.defaultExpr;
			var cases = e.cases;
			var e29 = e.e;
			var val = this.expr(e29);
			var match = false;
			var _g9 = 0;
			while(_g9 < cases.length) {
				var c1 = cases[_g9];
				++_g9;
				var _g10 = 0;
				var _g13 = c1.values;
				while(_g10 < _g13.length) {
					var v5 = _g13[_g10];
					++_g10;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var e30 = e.e;
			var econd3 = e.cond;
			this.doWhileLoop(econd3,e30);
			return null;
		case 25:
			var _g52 = e.args;
			var _g511 = e.name;
			var e31 = e.e;
			return this.expr(e31);
		case 26:
			var _g46 = e.t;
			var e32 = e.e;
			return this.expr(e32);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( err ) {
			haxe_CallStack.lastException = err;
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
				var err2 = err1;
				switch(err2._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw new js__$Boot_HaxeError(err2);
				}
			} else {
				throw err;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		}
		if(v.hasNext == null || v.next == null) {
			var e2 = hscript_Error.EInvalidIterator(v);
			throw new js__$Boot_HaxeError(e2);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__implements(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var haxe_ui_scripting_ScriptInterp = function() {
	hscript_Interp.call(this);
	if(haxe_ui_scripting_ScriptInterp._staticClasses != null) {
		var name = haxe_ui_scripting_ScriptInterp._staticClasses.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = haxe_ui_scripting_ScriptInterp._staticClasses;
			var c = __map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1];
			var _this1 = this.variables;
			var value = c;
			if(__map_reserved[name1] != null) {
				_this1.setReserved(name1,value);
			} else {
				_this1.h[name1] = value;
			}
		}
	}
	var _this2 = this.variables;
	var value1 = $bind(this,this.isVar);
	if(__map_reserved["isVar"] != null) {
		_this2.setReserved("isVar",value1);
	} else {
		_this2.h["isVar"] = value1;
	}
};
$hxClasses["haxe.ui.scripting.ScriptInterp"] = haxe_ui_scripting_ScriptInterp;
haxe_ui_scripting_ScriptInterp.__name__ = "haxe.ui.scripting.ScriptInterp";
haxe_ui_scripting_ScriptInterp.addClassAlias = function(alias,classPath) {
	if(haxe_ui_scripting_ScriptInterp._classAliases == null) {
		haxe_ui_scripting_ScriptInterp._classAliases = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_scripting_ScriptInterp._classAliases;
	if(__map_reserved[alias] != null) {
		_this.setReserved(alias,classPath);
	} else {
		_this.h[alias] = classPath;
	}
};
haxe_ui_scripting_ScriptInterp.addStaticClass = function(alias,c) {
	if(haxe_ui_scripting_ScriptInterp._staticClasses == null) {
		haxe_ui_scripting_ScriptInterp._staticClasses = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_scripting_ScriptInterp._staticClasses;
	var value = c;
	if(__map_reserved[alias] != null) {
		_this.setReserved(alias,value);
	} else {
		_this.h[alias] = value;
	}
};
haxe_ui_scripting_ScriptInterp.__super__ = hscript_Interp;
haxe_ui_scripting_ScriptInterp.prototype = $extend(hscript_Interp.prototype,{
	isVar: function(varName) {
		var _this = this.variables;
		if(__map_reserved[varName] != null) {
			return _this.existsReserved(varName);
		} else {
			return _this.h.hasOwnProperty(varName);
		}
	}
	,cnew: function(cl,args) {
		var tmp;
		if(haxe_ui_scripting_ScriptInterp._classAliases != null) {
			var _this = haxe_ui_scripting_ScriptInterp._classAliases;
			tmp = __map_reserved[cl] != null ? _this.existsReserved(cl) : _this.h.hasOwnProperty(cl);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this1 = haxe_ui_scripting_ScriptInterp._classAliases;
			cl = __map_reserved[cl] != null ? _this1.getReserved(cl) : _this1.h[cl];
		}
		return hscript_Interp.prototype.cnew.call(this,cl,args);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		var v = Reflect.getProperty(o,f);
		return this.parseResult(v);
	}
	,parseResult: function(v) {
		if(v == null) {
			return v;
		}
		var temp = Std.string(v);
		var regexp = new EReg("^_?(Bool|Float|Int|String)\\((.*)\\)","g");
		if(regexp.match(temp) == false) {
			return v;
		}
		var m1 = regexp.matched(1);
		var m2 = regexp.matched(2);
		switch(m1) {
		case "Bool":
			return parseFloat(m2);
		case "Float":
			return parseFloat(m2);
		case "Int":
			return Std.parseInt(m2);
		case "String":
			if(m2 == null) {
				return "null";
			} else {
				return "" + m2;
			}
			break;
		default:
		}
		return v;
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,__class__: haxe_ui_scripting_ScriptInterp
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__ : "haxe.ui.styles.Dimension", __constructs__ : ["PERCENT","PX","VW","VH","REM","CALC"]
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__ : "haxe.ui.styles.EasingFunction", __constructs__ : ["LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT"]
	,LINEAR: {_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e1) {
			var id = e1.matched(1);
			var data = e1.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e2) {
				var selector = e2.matched(1);
				var directives = e2.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e3) {
			var selector1 = "";
			if(e3.matched(2) == null) {
				selector1 = StringTools.trim(e3.matched(5).split("\r\n").join("\n"));
			} else {
				selector1 = StringTools.trim(e3.matched(2).split("\r\n").join("\n"));
			}
			selector1 = selector1.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector1.indexOf("@media") != -1) {
				var n1 = selector1.indexOf("(");
				var n2 = selector1.lastIndexOf(")");
				var mediaQuery = selector1.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e3.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives1 = e3.matched(6);
				var directives2 = _gthis.parseDirectives(directives1);
				var selectors = selector1.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives2));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_Style = function() {
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,minWidth: null
	,maxWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,minHeight: null
	,maxHeight: null
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundOpacity: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,cursor: null
	,hidden: null
	,filter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,mergeDirectives: function(map) {
		var key = map.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var v = __map_reserved[key1] != null ? map.getReserved(key1) : map.h[key1];
			switch(key1) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "background-color":
				var _g1 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(__map_reserved["background-color-end"] != null ? map.existsReserved("background-color-end") : map.h.hasOwnProperty("background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int((__map_reserved["background-color-end"] != null ? map.getReserved("background-color-end") : map.h["background-color-end"]).value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-size":case "border-top-width":
				this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "filter":
				var _g2 = v.value;
				switch(_g2._hx_index) {
				case 5:
					var vl = _g2.vl;
					var f = _g2.f;
					var arr = haxe_ui_styles_ValueTools.array(vl);
					arr.splice(0,0,f);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					var f1 = _g2.v;
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([f1])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
	}
	,equalTo: function(s) {
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.backgroundImage != this.backgroundImage) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.icon != this.icon) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		return true;
	}
	,createAnimationOptions: function() {
		if(this.animationOptions == null) {
			this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
		}
	}
	,__class__: haxe_ui_styles_Style
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				return r;
			}
		}
		return null;
	}
	,removeRule: function(selector) {
		var r = this.findRule(selector);
		if(r != null) {
			HxOverrides.remove(this._rules,r);
		}
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		var key = el.id;
		var _this = this._animations;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,el);
		} else {
			_this.h[key] = el;
		}
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var k = styleSheet._animations.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var this1 = this._animations;
			var _this = styleSheet._animations;
			var value = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
			var _this1 = this1;
			if(__map_reserved[k1] != null) {
				_this1.setReserved(k1,value);
			} else {
				_this1.h[k1] = value;
			}
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style();
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__ : "haxe.ui.styles.Value", __constructs__ : ["VString","VNumber","VBool","VDimension","VColor","VCall","VConstant","VComposite","VTime","VNone"]
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_styles_ValueTools.validColor(s)) {
		v = haxe_ui_styles_ValueTools.parseColor(s);
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(s.indexOf("(") != -1 && StringTools.endsWith(s,")")) {
		var n = s.indexOf("(");
		var f = HxOverrides.substr(s,0,n);
		var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
		if(f == "calc") {
			params = "'" + params + "'";
		}
		var vl = [];
		var _g = 0;
		var _g1 = params.split(",");
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p = StringTools.trim(p);
			vl.push(haxe_ui_styles_ValueTools.parse(p));
		}
		v = haxe_ui_styles_Value.VCall(f,vl);
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl1 = [];
			var _g2 = 0;
			while(_g2 < arr.length) {
				var a = arr[_g2];
				++_g2;
				a = StringTools.trim(a);
				vl1.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl1);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.compositeParts = function(value) {
	if(value == null) {
		return 0;
	}
	if(value._hx_index == 7) {
		var vl = value.vl;
		return vl.length;
	} else {
		return 0;
	}
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g2 = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1);
		if(s.length == 6) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
		} else if(s.length == 3) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
		}
	} else {
		var _this = haxe_ui_styles_ValueTools.colors;
		if(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s)) {
			var _this1 = haxe_ui_styles_ValueTools.colors;
			return haxe_ui_styles_Value.VColor(__map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s]);
		}
	}
	return null;
};
haxe_ui_styles_ValueTools.validColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else {
		var _this = haxe_ui_styles_ValueTools.colors;
		if(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s)) {
			return true;
		}
	}
	return false;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var unit = value.unit;
		var v = value.v;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 6:
		var v1 = value.v;
		return v1;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v1 = value.v;
		return v1;
	case 5:
		var vl = value.vl;
		var f = value.f;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v1 = value.v;
		return v1;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.any = function(v) {
	if(v == null) {
		return null;
	}
	switch(v._hx_index) {
	case 1:
		var v1 = v.v;
		return v1;
	case 2:
		var v2 = v.v;
		return v2;
	case 4:
		var v3 = v.v;
		return v3;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.array = function(vl) {
	var arr = [];
	var _g = 0;
	while(_g < vl.length) {
		var v = vl[_g];
		++_g;
		var a = haxe_ui_styles_ValueTools.any(v);
		if(a != null) {
			arr.push(a);
		}
	}
	return arr;
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v1 = value.v;
		switch(v1._hx_index) {
		case 1:
			var d = v1.value;
			return d;
		case 2:
			var d1 = v1.value;
			return d1 / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d2 = v1.value;
			return d2 / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d3 = v1.value;
			return d3 * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var vl = value.vl;
		var f = value.f;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	case 6:
		var v1 = value.v;
		switch(v1) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	switch(f) {
	case "calc":
		var parser = new hscript_Parser();
		var program = parser.parseString(haxe_ui_styles_ValueTools.string(vl[0]));
		var interp = new hscript_Interp();
		return interp.expr(program);
	case "platform-color":
		return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
	default:
		return null;
	}
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g1 = 0;
		var _g2 = this._keyframes;
		while(_g1 < _g2.length) {
			var keyframe = _g2[_g1];
			++_g1;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe1 = new haxe_ui_styles_animation_KeyFrame();
			keyframe1.time = this.delay;
			keyframe1.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe1);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe2 = this._keyframes[0];
				currentTime -= keyframe2.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe2;
					this._keyframes.splice(0,1);
				} else {
					keyframe2.delay = -(currentTime - this.delay + keyframe2.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var f = $bind(this,this._runNextKeyframe);
			var onFinish1 = onFinish;
			var tmp = function() {
				f(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = keyframe.directives;
			while(_g2 < _g11.length) {
				var directive = _g11[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				var _this = this._initialState;
				if(!(__map_reserved[property] != null ? _this.existsReserved(property) : _this.h.hasOwnProperty(property))) {
					var _this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					if(__map_reserved[property] != null) {
						_this1.setReserved(property,value);
					} else {
						_this1.h[property] = value;
					}
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var property = this._initialState.keys();
			while(property.hasNext()) {
				var property1 = property.next();
				var _this = this._initialState;
				Reflect.setProperty(this.target,property1,__map_reserved[property1] != null ? _this.getReserved(property1) : _this.h[property1]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},null));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.tween = function(target,properties,duration,options) {
	var actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,duration,options);
	actuator.run();
	return actuator;
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
	}
	,run: function() {
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			this._currentTime = Date.now() / 1000;
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay($bind(this,this._nextFrame),this.delay * 1000 | 0);
			} else {
				new haxe_ui_CallLater($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_initialize: function() {
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				if(end._hx_index == 3) {
					var _g21 = end.v;
					if(_g21._hx_index == 0) {
						var v1 = _g21.value;
						start = 0;
					}
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 3:
				var _g22 = end.v;
				if(_g22._hx_index == 0) {
					var v2 = _g22.value;
					var val = v2;
					if(val != null) {
						var details = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details1 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details1);
					} else {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details2);
					}
				}
				break;
			case 4:
				var v3 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v3;
				var details3 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details3);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details4);
				} else {
					var details5 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details5);
				}
			}
		}
	}
	,_nextFrame: function() {
		if(this._stopped == true) {
			return;
		}
		var currentTime = Date.now() / 1000;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime);
		}
		if(delta >= this.duration) {
			this._finish();
		} else {
			new haxe_ui_CallLater($bind(this,this._nextFrame));
		}
	}
	,_apply: function(position) {
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		var _g2 = 0;
		var _g3 = this._colorPropertyDetails;
		while(_g2 < _g3.length) {
			var details1 = _g3[_g2];
			++_g2;
			var currentColor = haxe_ui_util__$Color_Color_$Impl_$.fromComponents((details1.start >> 16 & 255) + details1.changeR * position | 0,(details1.start >> 8 & 255) + details1.changeG * position | 0,(details1.start & 255) + details1.changeB * position | 0,(details1.start >> 24 & 255) + details1.changeA * position | 0);
			Reflect.setProperty(details1.target,details1.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction._hx_index) {
	case 0:
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	case 1:case 4:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	case 2:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case 3:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,addDirective: function(el) {
		this._directives.push(el);
	}
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
				haxe_Log.trace("WARN: media query \"" + d.directive + "\" not recognized",{ fileName : "haxe/ui/styles/elements/MediaQuery.hx", lineNumber : 49, className : "haxe.ui.styles.elements.MediaQuery", methodName : "get_relevant"});
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) == -1) {
			return false;
		}
	}
	if(c.className != null) {
		if(d.classes.indexOf(c.className) == -1) {
			return false;
		}
	}
	if(c.nodeName != null) {
		var c1 = js_Boot.getClass(d);
		var className = c1.__name__.split(".").pop().toLowerCase();
		if(c.nodeName != className) {
			return false;
		}
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.parent != null) {
		var p = d.parentComponent;
		while(p != null) {
			if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				break;
			}
			p = p.parentComponent;
		}
		if(p == null) {
			return false;
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,addDirective: function(directive,value) {
		var d = new haxe_ui_styles_elements_Directive(directive,value);
		this.processDirective(d);
	}
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					var _this = this1;
					if(__map_reserved["font-bold"] != null) {
						_this.setReserved("font-bold",value);
					} else {
						_this.h["font-bold"] = value;
					}
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					var _this1 = this2;
					if(__map_reserved["font-italic"] != null) {
						_this1.setReserved("font-italic",value1);
					} else {
						_this1.h["font-italic"] = value1;
					}
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					var _this2 = this3;
					if(__map_reserved["font-underline"] != null) {
						_this2.setReserved("font-underline",value2);
					} else {
						_this2.h["font-underline"] = value2;
					}
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl1.length == 4 || vl1.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl1.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl1[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl1[1]),["padding-left","padding-right"]);
			} else if(vl1.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			var key = d.directive;
			var _this3 = this.directives;
			if(__map_reserved[key] != null) {
				_this3.setReserved(key,d);
			} else {
				_this3.h[key] = d;
			}
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			this.directives.remove(p);
		}
		var _g1 = d.value;
		switch(_g1._hx_index) {
		case 1:
			var v = _g1.v;
			var _g11 = 0;
			while(_g11 < parts.length) {
				var p1 = parts[_g11];
				++_g11;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p1,d.value);
				var _this = this1;
				if(__map_reserved[p1] != null) {
					_this.setReserved(p1,value);
				} else {
					_this.h[p1] = value;
				}
			}
			break;
		case 3:
			var v1 = _g1.v;
			var _g12 = 0;
			while(_g12 < parts.length) {
				var p2 = parts[_g12];
				++_g12;
				var this2 = this.directives;
				var value1 = new haxe_ui_styles_elements_Directive(p2,haxe_ui_styles_Value.VDimension(v1));
				var _this1 = this2;
				if(__map_reserved[p2] != null) {
					_this1.setReserved(p2,value1);
				} else {
					_this1.h[p2] = value1;
				}
			}
			break;
		case 4:
			var v2 = _g1.v;
			if(duplicate == false) {
				var this3 = this.directives;
				var value2 = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				var _this2 = this3;
				var key = parts[0];
				if(__map_reserved[key] != null) {
					_this2.setReserved(key,value2);
				} else {
					_this2.h[key] = value2;
				}
			} else {
				var _g13 = 0;
				while(_g13 < parts.length) {
					var p3 = parts[_g13];
					++_g13;
					var this4 = this.directives;
					var value3 = new haxe_ui_styles_elements_Directive(p3,d.value);
					var _this3 = this4;
					if(__map_reserved[p3] != null) {
						_this3.setReserved(p3,value3);
					} else {
						_this3.h[p3] = value3;
					}
				}
			}
			break;
		case 6:
			var v3 = _g1.v;
			break;
		case 7:
			var vl = _g1.vl;
			var n = 0;
			var _g14 = 0;
			while(_g14 < parts.length) {
				var p4 = parts[_g14];
				++_g14;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p4,vl[n]);
					this.processDirective(nd);
					var _this4 = this.directives;
					if(__map_reserved[p4] != null) {
						_this4.setReserved(p4,nd);
					} else {
						_this4.h[p4] = nd;
					}
				}
				++n;
			}
			break;
		case 9:
			var _g15 = 0;
			while(_g15 < parts.length) {
				var p5 = parts[_g15];
				++_g15;
				var nd1 = new haxe_ui_styles_elements_Directive(p5,d.value);
				this.processDirective(nd1);
				var _this5 = this.directives;
				if(__map_reserved[p5] != null) {
					_this5.setReserved(p5,nd1);
				} else {
					_this5.h[p5] = nd1;
				}
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	var p = s.split(" ");
	var parent = null;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,toString: function() {
		return this.parts.join(" ");
	}
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,toString: function() {
		var sb_b = "";
		if(this.id != null) {
			sb_b += Std.string("#" + this.id);
		}
		if(this.nodeName != null) {
			sb_b += Std.string(this.nodeName);
		}
		if(this.className != null) {
			sb_b += Std.string("." + this.className);
		}
		if(this.pseudoClass != null) {
			sb_b += Std.string(":" + this.pseudoClass);
		}
		return sb_b;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,getTheme: function(themeName) {
		var _this = this._themes;
		var theme = __map_reserved[themeName] != null ? _this.getReserved(themeName) : _this.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			var _this1 = this._themes;
			if(__map_reserved[themeName] != null) {
				_this1.setReserved(themeName,theme);
			} else {
				_this1.h[themeName] = theme;
			}
		}
		return theme;
	}
	,addStyleResource: function(themeName,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority});
	}
	,applyTheme: function(themeName) {
		haxe_ui_Toolkit.styleSheet.clear("default");
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId);
		}
	}
	,applyResource: function(resourceId) {
		var style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		if(style != null) {
			this.addStyleString(style);
		} else {
			haxe_Log.trace("WARNING: could not find " + resourceId,{ fileName : "haxe/ui/themes/ThemeManager.hx", lineNumber : 64, className : "haxe.ui.themes.ThemeManager", methodName : "applyResource"});
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeEntries: function(themeName,arr) {
		var _this = this._themes;
		var theme = __map_reserved[themeName] != null ? _this.getReserved(themeName) : _this.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			var _this1 = this._map;
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,arr);
			} else {
				_this1.h[key] = arr;
			}
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				this._map.remove(key);
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			this._map.remove(key);
		}
	}
	,invoke: function(key,param) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util__$Color_Color_$Impl_$ = {};
$hxClasses["haxe.ui.util._Color.Color_Impl_"] = haxe_ui_util__$Color_Color_$Impl_$;
haxe_ui_util__$Color_Color_$Impl_$.__name__ = "haxe.ui.util._Color.Color_Impl_";
haxe_ui_util__$Color_Color_$Impl_$.__properties__ = {set_a:"set_a",get_a:"get_a",set_b:"set_b",get_b:"get_b",set_g:"set_g",get_g:"get_g",set_r:"set_r",get_r:"get_r"};
haxe_ui_util__$Color_Color_$Impl_$.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aqua":
		return 65535;
	case "black":
		return 0;
	case "blue":
		return 255;
	case "fuchsia":
		return 16711935;
	case "green":
		return 32768;
	case "gray":case "grey":
		return 8421504;
	case "lime":
		return 65280;
	case "maroon":
		return 8388608;
	case "navy":
		return 128;
	case "olive":
		return 8421376;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "silver":
		return 12632256;
	case "teal":
		return 32896;
	case "white":
		return 16777215;
	case "yellow":
		return 16776960;
	default:
		return 0;
	}
};
haxe_ui_util__$Color_Color_$Impl_$.fromComponents = function(r,g,b,a) {
	var result = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util__$Color_Color_$Impl_$.get_r = function(this1) {
	return this1 >> 16 & 255;
};
haxe_ui_util__$Color_Color_$Impl_$.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.get_g = function(this1) {
	return this1 >> 8 & 255;
};
haxe_ui_util__$Color_Color_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.get_b = function(this1) {
	return this1 & 255;
};
haxe_ui_util__$Color_Color_$Impl_$.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.get_a = function(this1) {
	return this1 >> 24 & 255;
};
haxe_ui_util__$Color_Color_$Impl_$.set_a = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.set = function(this1,r,g,b,a) {
	this1 = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.toInt = function(this1) {
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.or = function(a,b) {
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(a) | haxe_ui_util__$Color_Color_$Impl_$.toInt(b);
};
haxe_ui_util__$Color_Color_$Impl_$.sumColor = function(a,b) {
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(haxe_ui_util__$Color_Color_$Impl_$.fromComponents((a >> 16 & 255) + (b >> 16 & 255),(a >> 8 & 255) + (b >> 8 & 255),(a & 255) + (b & 255),(a >> 24 & 255) + (b >> 24 & 255)));
};
haxe_ui_util__$Color_Color_$Impl_$.restColor = function(a,b) {
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(haxe_ui_util__$Color_Color_$Impl_$.fromComponents((a >> 16 & 255) - (b >> 16 & 255),(a >> 8 & 255) - (b >> 8 & 255),(a & 255) - (b & 255),(a >> 24 & 255) - (b >> 24 & 255)));
};
haxe_ui_util__$Color_Color_$Impl_$.sumFloat = function(a,b) {
	var bInt = b | 0;
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(haxe_ui_util__$Color_Color_$Impl_$.fromComponents((a >> 16 & 255) - bInt,(a >> 8 & 255) - bInt,(a & 255) - bInt,(a >> 24 & 255) - bInt));
};
haxe_ui_util__$Color_Color_$Impl_$.mulFloat = function(a,b) {
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(haxe_ui_util__$Color_Color_$Impl_$.fromComponents((a >> 16 & 255) * b | 0,(a >> 8 & 255) * b | 0,(a & 255) * b | 0,(a >> 24 & 255) * b | 0));
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = 0 | (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util__$Color_Color_$Impl_$.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0x" + s);
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return this._map.keys();
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			var _this1 = this._map;
			if(__map_reserved[type] != null) {
				_this1.setReserved(type,arr);
			} else {
				_this1.h[type] = arr;
			}
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				this._map.remove(type);
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var this1 = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var listener = this1;
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,pop: function() {
		return this._array.pop().callback;
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return HxOverrides.iter(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_GUID = function() { };
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
haxe_ui_util_GUID.randomIntegerWithinRange = function(min,max) {
	return Math.floor(Math.random() * (1 + max - min) + min);
};
haxe_ui_util_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	radix = radix > 61 ? 61 : radix;
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	var x;
	var y = 100;
	var z;
	return id.join("");
};
haxe_ui_util_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + specialChars[Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
};
var haxe_ui_util_ImageLoader = function(resource) {
	this._resource = StringTools.trim(resource);
};
$hxClasses["haxe.ui.util.ImageLoader"] = haxe_ui_util_ImageLoader;
haxe_ui_util_ImageLoader.__name__ = "haxe.ui.util.ImageLoader";
haxe_ui_util_ImageLoader.prototype = {
	_resource: null
	,load: function(callback) {
		if(StringTools.startsWith(this._resource,"http://") || StringTools.startsWith(this._resource,"https://")) {
			this.loadFromHttp(this._resource,callback);
		} else if(StringTools.startsWith(this._resource,"file://")) {
			this.loadFromFile(HxOverrides.substr(this._resource,7,null),callback);
		} else {
			haxe_ui_Toolkit.get_assets().getImage(this._resource,callback);
		}
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				var error = "Http Error #" + request.status;
				if(s != null) {
					switch(s) {
					case 12007:
						error = "Unknown host";
						break;
					case 12029:
						error = "Failed to connect to host";
						break;
					default:
					}
				}
				haxe_Log.trace(error,{ fileName : "haxe/ui/util/ImageLoader.hx", lineNumber : 56, className : "haxe.ui.util.ImageLoader", methodName : "loadFromHttp"});
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,loadFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/util/ImageLoader.hx", lineNumber : 112, className : "haxe.ui.util.ImageLoader", methodName : "loadFromFile"});
		callback(null);
	}
	,__class__: haxe_ui_util_ImageLoader
};
var haxe_ui_util__$Listener_Listener_$Impl_$ = {};
$hxClasses["haxe.ui.util._Listener.Listener_Impl_"] = haxe_ui_util__$Listener_Listener_$Impl_$;
haxe_ui_util__$Listener_Listener_$Impl_$.__name__ = "haxe.ui.util._Listener.Listener_Impl_";
haxe_ui_util__$Listener_Listener_$Impl_$._new = function(callback,priority) {
	var this1 = new haxe_ui_util__$Listener_ListenerInternal(callback,priority);
	return this1;
};
haxe_ui_util__$Listener_Listener_$Impl_$.compareListener = function(a,b) {
	return a.callback == b.callback;
};
haxe_ui_util__$Listener_Listener_$Impl_$.compareFunction = function(a,b) {
	return a.callback == b;
};
haxe_ui_util__$Listener_Listener_$Impl_$.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
haxe_ui_util_MathUtil.round = function(v,precision) {
	if(precision == null) {
		precision = 0;
	}
	return Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision);
};
haxe_ui_util_MathUtil.clamp = function(v,min,max) {
	if(v == null || isNaN(v)) {
		return min;
	}
	if(min != null && v < min) {
		v = min;
	} else if(max != null && v > max) {
		v = max;
	}
	return v;
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.uncapitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
};
haxe_ui_util_StringUtil.capitalizeDelim = function(s,d) {
	var r = s;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var k = params.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			s = StringTools.replace(s,"${" + k1 + "}",__map_reserved[k1] != null ? params.getReserved(k1) : params.h[k1]);
		}
	}
	return s;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
haxe_ui_util_StyleUtil.componentProperty2StyleProperty = function(property) {
	return haxe_ui_util_StyleUtil.component2StyleEReg.map(property,function(re) {
		return "-" + re.matched(1).toLowerCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,time_ms) {
	var t = null;
	t = new haxe_ui_util_Timer(time_ms,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convert = function(input) {
	var output = input;
	var _g = Type.typeof(input);
	if(_g._hx_index == 6) {
		if(_g.c == String) {
			var s = Std.string(input);
			if(s == "true" || s == "false") {
				output = s == "true";
			} else if(new EReg("^[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = Std.parseInt(s);
			} else if(new EReg("^[0-9]\\.[^.]*$","i").match(s == null ? "null" : "" + s)) {
				output = parseFloat(s);
			}
		}
	}
	return output;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__ : "haxe.ui.util.VariantType", __constructs__ : ["VT_Int","VT_Float","VT_String","VT_Bool","VT_Array","VT_DataSource","VT_Component","VT_Date"]
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var haxe_ui_util__$Variant_Variant_$Impl_$ = {};
$hxClasses["haxe.ui.util._Variant.Variant_Impl_"] = haxe_ui_util__$Variant_Variant_$Impl_$;
haxe_ui_util__$Variant_Variant_$Impl_$.__name__ = "haxe.ui.util._Variant.Variant_Impl_";
haxe_ui_util__$Variant_Variant_$Impl_$.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isComponent:"get_isComponent",get_isDate:"get_isDate",get_isArray:"get_isArray",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isInt:"get_isInt",get_isFloat:"get_isFloat",get_isString:"get_isString"};
haxe_ui_util__$Variant_Variant_$Impl_$.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s1 = this1.s;
		if(s1 == null) {
			return "null";
		} else {
			return "" + s1;
		}
		break;
	case 2:
		var s2 = this1.s;
		return s2;
	case 3:
		var s3 = this1.s;
		if(s3 == null) {
			return "null";
		} else {
			return "" + s3;
		}
		break;
	case 4:
		var s4 = this1.s;
		return Std.string(s4);
	case 5:
		var s5 = this1.s;
		return Std.string(s5);
	case 6:
		var s6 = this1.s;
		return Std.string(s6);
	case 7:
		var s7 = this1.s;
		return Std.string(s7);
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toFloat = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s1 = this1.s;
		return s1;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toInt = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s1 = this1.s;
		return s1 | 0;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		return true;
	case 1:
		var _g = this1.s;
		return true;
	default:
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s1 = this1.s;
		return s1;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s1 = this1.s;
		return s1;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isArray = function(this1) {
	if(this1._hx_index == 4) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isDate = function(this1) {
	if(this1._hx_index == 7) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util__$Variant_Variant_$Impl_$.toInt(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g11 = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g2 = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) + haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.postInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + 1);
		return old;
	} else {
		throw new js__$Boot_HaxeError("Variant operation error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.preInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + 1);
		return this1;
	} else {
		throw new js__$Boot_HaxeError("Variant operation error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g11 = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g2 = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(StringTools.replace(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1),haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs),""));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.postDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - 1);
		return old;
	} else {
		throw new js__$Boot_HaxeError("Variant operation error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.preDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - 1);
		return this1;
	} else {
		throw new js__$Boot_HaxeError("Variant operation error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g11 = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g2 = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) * haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g11 = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g2 = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) / haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) > haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) > haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) >= haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) >= haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) < haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) < haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) <= haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) <= haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.invert = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(this1)) {
		var v = haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this1);
		v = !v;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(v);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.eq = function(this1,rhs) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1) && !haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g11 = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g2 = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) == haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this1) == haxe_ui_util__$Variant_Variant_$Impl_$.toBool(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) == haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.neq = function(this1,rhs) {
	return !haxe_ui_util__$Variant_Variant_$Impl_$.eq(this1,rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull = function(this1) {
	if(this1 != null) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) == null;
	} else {
		return true;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.containsOnlyDigits(r) && isNaN(parseFloat("" + Std.string(r))) == false) {
			if(Std.string(r).indexOf(".") != -1) {
				v = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(parseFloat("" + Std.string(r)));
			} else {
				v = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(Std.parseInt("" + Std.string(r)));
			}
		} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromBool("" + Std.string(r) == "true");
		} else if(typeof(r) == "string") {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(Std.string(r));
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = r;
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(Std.string(r));
		}
	}
	return v;
};
haxe_ui_util__$Variant_Variant_$Impl_$.containsOnlyDigits = function(s) {
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != ".") {
			return false;
		}
	}
	return true;
};
haxe_ui_util__$Variant_Variant_$Impl_$.toDynamic = function(v) {
	var d = null;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y1 = v.s;
			d = y1;
			break;
		case 2:
			var y2 = v.s;
			d = y2;
			break;
		case 3:
			var y3 = v.s;
			d = y3;
			break;
		case 4:
			var y4 = v.s;
			d = y4;
			break;
		case 5:
			var y5 = v.s;
			d = y5;
			break;
		case 6:
			var y6 = v.s;
			d = y6;
			break;
		case 7:
			var y7 = v.s;
			d = y7;
			break;
		}
	}
	return d;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(parent.nodeType));
			}
			throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
				}
				var child = HxOverrides.iter(value.children);
				while(child.hasNext()) {
					var child1 = child.next();
					this.writeNode(child1,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input1 = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input1);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input2 = StringTools.trim(commentContent);
			this.output.b += Std.string(input2);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
			}
			var child2 = HxOverrides.iter(value.children);
			while(child2.hasNext()) {
				var child3 = child2.next();
				this.writeNode(child3,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + _$Xml_XmlType_$Impl_$.toString(value.nodeType));
		}
		var child = HxOverrides.iter(value.children);
		while(child.hasNext()) {
			var child1 = child.next();
			switch(child1.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child1.nodeType == Xml.Document || child1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _$Xml_XmlType_$Impl_$.toString(child1.nodeType));
				}
				if(StringTools.ltrim(child1.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : "hscript.Const", __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__ : "hscript.Expr", __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta","ECheckType"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","t"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : "hscript.CType", __constructs__ : ["CTPath","CTFun","CTAnon","CTParent","CTOpt","CTNamed"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["n","t"],$_)
};
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__ : "hscript.Error", __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
};
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__ : "hscript.ModuleDecl", __constructs__ : ["DPackage","DImport","DClass","DTypedef"]
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
};
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__ : "hscript.FieldAccess", __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"]
	,APublic: {_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__ : "hscript.FieldKind", __constructs__ : ["KFunction","KVar"]
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__ : "hscript._Interp.Stop", __constructs__ : ["SBreak","SContinue","SReturn"]
	,SBreak: {_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : "hscript.Token", __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g11 = priorities[i];
		while(_g2 < _g11.length) {
			var x = _g11[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var x1 = "!";
	var _this2 = this.unops;
	var value = x1 == "++" || x1 == "--";
	if(__map_reserved[x1] != null) {
		_this2.setReserved(x1,value);
	} else {
		_this2.h[x1] = value;
	}
	var x2 = "++";
	var _this3 = this.unops;
	var value1 = x2 == "++" || x2 == "--";
	if(__map_reserved[x2] != null) {
		_this3.setReserved(x2,value1);
	} else {
		_this3.h[x2] = value1;
	}
	var x3 = "--";
	var _this4 = this.unops;
	var value2 = x3 == "++" || x3 == "--";
	if(__map_reserved[x3] != null) {
		_this4.setReserved(x3,value2);
	} else {
		_this4.h[x3] = value2;
	}
	var x4 = "-";
	var _this5 = this.unops;
	var value3 = x4 == "++" || x4 == "--";
	if(__map_reserved[x4] != null) {
		_this5.setReserved(x4,value3);
	} else {
		_this5.h[x4] = value3;
	}
	var x5 = "~";
	var _this6 = this.unops;
	var value4 = x5 == "++" || x5 == "--";
	if(__map_reserved[x5] != null) {
		_this6.setReserved(x5,value4);
	} else {
		_this6.h[x5] = value4;
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = "hscript.Parser";
hscript_Parser.prototype = {
	line: null
	,opChars: null
	,identChars: null
	,opPriority: null
	,opRightAssoc: null
	,unops: null
	,preprocesorValues: null
	,allowJSON: null
	,allowTypes: null
	,allowMetadata: null
	,input: null
	,char: null
	,ops: null
	,idents: null
	,uid: null
	,tokens: null
	,error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(err);
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g2 = 0;
		var _g3 = this.identChars.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(hscript_Error.EUnexpected(this.tokenString(tk)));
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e._hx_index) {
		case 2:
			var _g20 = e.n;
			var e1 = e.e;
			var t = e.t;
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					var _g = t.fields;
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			var _g10 = e.e;
			return true;
		case 6:
			var _g28 = e.e1;
			var _g27 = e.op;
			var e2 = e.e2;
			return this.isBlock(e2);
		case 7:
			var _g7 = e.op;
			var e3 = e.e;
			var prefix = e.prefix;
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var _g1 = e.cond;
			var e21 = e.e2;
			var e11 = e.e1;
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var _g11 = e.cond;
			var e4 = e.e;
			return this.isBlock(e4);
		case 11:
			var _g17 = e.it;
			var _g16 = e.v;
			var e5 = e.e;
			return this.isBlock(e5);
		case 14:
			var _g26 = e.ret;
			var _g25 = e.name;
			var _g23 = e.args;
			var e6 = e.e;
			return this.isBlock(e6);
		case 15:
			var e7 = e.e;
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var _g5 = e.t;
			var _g4 = e.v;
			var _g3 = e.e;
			var e8 = e.ecatch;
			return this.isBlock(e8);
		case 21:
			var _g19 = e.fl;
			return true;
		case 23:
			var _g15 = e.defaultExpr;
			var _g14 = e.cases;
			var _g13 = e.e;
			return true;
		case 24:
			var _g30 = e.cond;
			var e9 = e.e;
			return this.isBlock(e9);
		case 25:
			var _g34 = e.args;
			var _g33 = e.name;
			var e10 = e.e;
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma) {
				if(e._hx_index == 2) {
					var _g2 = e.e;
					var _g1 = e.t;
					var _g = e.n;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 1:
					var c = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c._hx_index == 2) {
						var s = c.s;
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk.s;
					id = i;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
				}
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				return this.parseExprNext(hscript_Expr.EConst(c));
			case 2:
				var id = tk.s;
				var e = this.parseStructure(id);
				if(e == null) {
					e = hscript_Expr.EIdent(id);
				}
				return this.parseExprNext(e);
			case 3:
				var op = tk.s;
				var _this = this.unops;
				if(__map_reserved[op] != null ? _this.existsReserved(op) : _this.h.hasOwnProperty(op)) {
					var start = 0;
					var e1 = this.parseExpr();
					if(op == "-") {
						if(e1._hx_index == 0) {
							var _g = e1.c;
							switch(_g._hx_index) {
							case 0:
								var i = _g.v;
								return hscript_Expr.EConst(hscript_Const.CInt(-i));
							case 1:
								var f = _g.f;
								return hscript_Expr.EConst(hscript_Const.CFloat(-f));
							default:
							}
						}
					}
					return this.makeUnop(op,e1);
				}
				return this.unexpected(tk);
			case 4:
				var e2 = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e2));
					case 9:
						if(e2._hx_index == 1) {
							var v = e2.v;
							return this.parseLambda([{ name : v}],0);
						}
						break;
					case 14:
						var t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e2,t));
							case 9:
								if(e2._hx_index == 1) {
									var v1 = e2.v;
									return this.parseLambda([{ name : v1, t : t}],0);
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						var c1 = tk.c;
						if(this.allowJSON) {
							if(c1._hx_index == 2) {
								var _g1 = c1.s;
								var tk2 = this.token();
								var _this2 = this.tokens;
								_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
								var _this3 = this.tokens;
								_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								var _this4 = this.tokens;
								_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
							}
						} else {
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
						}
						break;
					case 2:
						var _g11 = tk.s;
						var tk21 = this.token();
						var _this6 = this.tokens;
						_this6.head = new haxe_ds_GenericCell(tk21,_this6.head);
						var _this7 = this.tokens;
						_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
						if(tk21 != null) {
							if(tk21._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						var _this8 = this.tokens;
						_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
					}
				}
				var a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose) {
						break;
					}
					var _this9 = this.tokens;
					_this9.head = new haxe_ds_GenericCell(tk,_this9.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				var a1 = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose) {
					var _this10 = this.tokens;
					_this10.head = new haxe_ds_GenericCell(tk,_this10.head);
					a1.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a1.length == 1) {
					var _g2 = a1[0];
					switch(_g2._hx_index) {
					case 10:
						var _g21 = _g2.e;
						var _g12 = _g2.cond;
						var tmp = "__a_" + this.uid++;
						var e3 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e3);
					case 11:
						var _g5 = _g2.e;
						var _g4 = _g2.it;
						var _g3 = _g2.v;
						var tmp1 = "__a_" + this.uid++;
						var e4 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp1,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp1,a1[0]),hscript_Expr.EIdent(tmp1)]);
						return this.parseExprNext(e4);
					case 24:
						var _g7 = _g2.e;
						var _g6 = _g2.cond;
						var tmp2 = "__a_" + this.uid++;
						var e5 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp2,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp2,a1[0]),hscript_Expr.EIdent(tmp2)]);
						return this.parseExprNext(e5);
					default:
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
			case 15:
				var id1 = tk.s;
				if(this.allowMetadata) {
					var args = this.parseMetaArgs();
					return hscript_Expr.EMeta(id1,args,this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		var t1 = this.token();
		if(!Type.enumEq(t1,hscript_Token.TOp("->"))) {
			this.unexpected(t1);
		}
		var eret = this.parseExpr();
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(eret));
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				if(_g == null) {
					var tk1 = _g;
					this.unexpected(tk1);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						var tk2 = _g;
						this.unexpected(tk2);
					}
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			var _g5 = e.e;
			if(_g5.length == 1) {
				var e1 = _g5[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			var cond = e.cond;
			edef = e21 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var e22 = e.e;
			var cond1 = e.cond;
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e.e;
			var it = e.it;
			var v = e.v;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e.e;
			var cond2 = e.cond;
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		switch(e._hx_index) {
		case 6:
			var e2 = e.e2;
			var e1 = e.e1;
			var bop = e.op;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e.e2;
			var e21 = e.e1;
			var e11 = e.cond;
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e._hx_index) {
		case 6:
			var e3 = e.e2;
			var e2 = e.e1;
			var op2 = e.op;
			var tmp;
			var _this = this.opPriority;
			var tmp1 = __map_reserved[op] != null ? _this.getReserved(op) : _this.h[op];
			var _this1 = this.opPriority;
			if(tmp1 <= (__map_reserved[op2] != null ? _this1.getReserved(op2) : _this1.h[op2])) {
				var _this2 = this.opRightAssoc;
				tmp = !(__map_reserved[op] != null ? _this2.existsReserved(op) : _this2.h.hasOwnProperty(op));
			} else {
				tmp = false;
			}
			if(tmp) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e.e2;
			var e31 = e.e1;
			var e21 = e.cond;
			var _this3 = this.opRightAssoc;
			if(__map_reserved[op] != null ? _this3.existsReserved(op) : _this3.h.hasOwnProperty(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1 == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			} else if(tk1._hx_index == 2) {
				var id1 = tk1.s;
				name = id1;
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk1,_this1.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
				if(semic) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this3.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk3 = this.token();
				if(tk3 == null) {
					this.unexpected(tk3);
				} else {
					switch(tk3._hx_index) {
					case 4:
						next = false;
						break;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk3);
					}
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk4 = this.token();
			var _this4 = this.tokens;
			_this4.head = new haxe_ds_GenericCell(tk4,_this4.head);
			var e3 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop2: while(true) {
				var tk5 = this.token();
				if(tk5 == null) {
					this.unexpected(tk5);
				} else {
					switch(tk5._hx_index) {
					case 2:
						switch(tk5.s) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								var e5 = this.parseExpr();
								c.values.push(e5);
								tk5 = this.token();
								if(tk5 == null) {
									this.unexpected(tk5);
								} else {
									switch(tk5._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk5);
									}
								}
							}
							var exprs = [];
							_hx_loop4: while(true) {
								tk5 = this.token();
								var _this5 = this.tokens;
								_this5.head = new haxe_ds_GenericCell(tk5,_this5.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk5._hx_index) {
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk5);
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TDoubleDot) {
								this.unexpected(t6);
							}
							var exprs1 = [];
							_hx_loop5: while(true) {
								tk5 = this.token();
								var _this6 = this.tokens;
								_this6.head = new haxe_ds_GenericCell(tk5,_this6.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk5._hx_index) {
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk5);
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk5);
					}
				}
			}
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e6 = this.parseExpr();
			return hscript_Expr.EThrow(e6);
		case "try":
			var e7 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e7,vname1,t10,ec);
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e8 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e8 = this.parseExpr();
			} else {
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk6,_this7.head);
			}
			return hscript_Expr.EVar(ident,t13,e8);
		case "while":
			var econd1 = this.parseExpr();
			var e9 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e9);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				var op = tk.s;
				if(op == "->") {
					switch(e1._hx_index) {
					case 1:
						var i = e1.v;
						var eret = this.parseExpr();
						return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
					case 3:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i1 = _hx_tmp.v;
							var eret1 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i1}],hscript_Expr.EReturn(eret1));
						}
						break;
					case 26:
						var _hx_tmp1 = e1.e;
						if(_hx_tmp1._hx_index == 1) {
							var t = e1.t;
							var i2 = _hx_tmp1.v;
							var eret2 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i2, t : t}],hscript_Expr.EReturn(eret2));
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				var _this1 = this.unops;
				if(__map_reserved[op] != null ? _this1.getReserved(op) : _this1.h[op]) {
					var tmp;
					if(!this.isBlock(e1)) {
						if(e1._hx_index == 3) {
							var _g = e1.e;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = true;
					}
					if(tmp) {
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
				}
				return this.makeBinop(op,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				var field = this.getIdent();
				return this.parseExprNext(hscript_Expr.EField(e1,field));
			case 11:
				var e2 = this.parseExpr();
				var t1 = this.token();
				if(t1 != hscript_Token.TBkClose) {
					this.unexpected(t1);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				var e21 = this.parseExpr();
				var t2 = this.token();
				if(t2 != hscript_Token.TDoubleDot) {
					this.unexpected(t2);
				}
				var e3 = this.parseExpr();
				return hscript_Expr.ETernary(e1,e21,e3);
			default:
				var _this3 = this.tokens;
				_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
				return e1;
			}
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
				} else if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				var v = t.s;
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				var path = this.parsePath();
				var params = null;
				t = this.token();
				if(t == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(t,_this1.head);
				} else if(t._hx_index == 3) {
					var op = t.s;
					if(op == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									var op1 = t.s;
									if(op1 == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(op1,0) == 62) {
										var _this2 = this.tokens;
										_this2.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this2.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
						}
					} else {
						var _this3 = this.tokens;
						_this3.head = new haxe_ds_GenericCell(t,_this3.head);
					}
				} else {
					var _this4 = this.tokens;
					_this4.head = new haxe_ds_GenericCell(t,_this4.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				var a = this.token();
				var b = this.token();
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(b,_this5.head);
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(a,_this6.head);
				var withReturn = function(args) {
					var _g = _gthis.token();
					if(_g == null) {
						var t1 = _g;
						_gthis.unexpected(t1);
					} else if(_g._hx_index == 3) {
						if(_g.s != "->") {
							var t2 = _g;
							_gthis.unexpected(t2);
						}
					} else {
						var t3 = _g;
						_gthis.unexpected(t3);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					var t4 = this.parseType();
					var _g1 = this.token();
					if(_g1 == null) {
						var t5 = _g1;
						return this.unexpected(t5);
					} else {
						switch(_g1._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t4));
						case 9:
							var args1 = [t4];
							while(true) {
								args1.push(this.parseType());
								if(!this.maybe(hscript_Token.TComma)) {
									break;
								}
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TPClose) {
								this.unexpected(t6);
							}
							return withReturn(args1);
						default:
							var t7 = _g1;
							return this.unexpected(t7);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						var _g2 = a.s;
						if(b == null) {
							var t8 = this.parseType();
							var _g3 = this.token();
							if(_g3 == null) {
								var t9 = _g3;
								return this.unexpected(t9);
							} else {
								switch(_g3._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t8));
								case 9:
									var args2 = [t8];
									while(true) {
										args2.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t10 = this.token();
									if(t10 != hscript_Token.TPClose) {
										this.unexpected(t10);
									}
									return withReturn(args2);
								default:
									var t11 = _g3;
									return this.unexpected(t11);
								}
							}
						} else if(b._hx_index == 14) {
							var _g4 = [];
							var _g11 = 0;
							var _g21 = this.parseFunctionArgs();
							while(_g11 < _g21.length) {
								var arg = _g21[_g11];
								++_g11;
								var _g12 = arg.value;
								if(_g12 != null) {
									var v1 = _g12;
									throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
								}
								_g4.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							var args3 = _g4;
							return withReturn(args3);
						} else {
							var t12 = this.parseType();
							var _g5 = this.token();
							if(_g5 == null) {
								var t13 = _g5;
								return this.unexpected(t13);
							} else {
								switch(_g5._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t12));
								case 9:
									var args4 = [t12];
									while(true) {
										args4.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t14 = this.token();
									if(t14 != hscript_Token.TPClose) {
										this.unexpected(t14);
									}
									return withReturn(args4);
								default:
									var t15 = _g5;
									return this.unexpected(t15);
								}
							}
						}
						break;
					case 5:
						var _g6 = [];
						var _g13 = 0;
						var _g22 = this.parseFunctionArgs();
						while(_g13 < _g22.length) {
							var arg1 = _g22[_g13];
							++_g13;
							var _g14 = arg1.value;
							if(_g14 != null) {
								var v2 = _g14;
								throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
							}
							_g6.push(hscript_CType.CTNamed(arg1.name,arg1.opt ? hscript_CType.CTOpt(arg1.t) : arg1.t));
						}
						var args5 = _g6;
						return withReturn(args5);
					default:
						var t16 = this.parseType();
						var _g7 = this.token();
						if(_g7 == null) {
							var t17 = _g7;
							return this.unexpected(t17);
						} else {
							switch(_g7._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t16));
							case 9:
								var args6 = [t16];
								while(true) {
									args6.push(this.parseType());
									if(!this.maybe(hscript_Token.TComma)) {
										break;
									}
								}
								var t18 = this.token();
								if(t18 != hscript_Token.TPClose) {
									this.unexpected(t18);
								}
								return withReturn(args6);
							default:
								var t19 = _g7;
								return this.unexpected(t19);
							}
						}
					}
				}
				break;
			case 6:
				var fields = [];
				var meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
					} else {
						switch(t._hx_index) {
						case 2:
							var _g8 = t.s;
							if(_g8 == "var") {
								var name = this.getIdent();
								var t20 = this.token();
								if(t20 != hscript_Token.TDoubleDot) {
									this.unexpected(t20);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								var t21 = this.token();
								if(t21 != hscript_Token.TSemicolon) {
									this.unexpected(t21);
								}
							} else {
								var name1 = _g8;
								var t22 = this.token();
								if(t22 != hscript_Token.TDoubleDot) {
									this.unexpected(t22);
								}
								fields.push({ name : name1, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							var name2 = t.s;
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : name2, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				return t;
			}
		} else {
			var _this2 = this.tokens;
			_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var _g2 = t2.ret;
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = new haxe_io_StringInput(content);
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			} else if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("Unsupported class type parameters"));
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				} else if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						break _hx_loop2;
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
					break;
				}
			}
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(t2,_this3.head);
					break;
				}
				t2 = this.token();
				if(t2 == null) {
					this.unexpected(t2);
				} else {
					switch(t2._hx_index) {
					case 2:
						var id = t2.s;
						path.push(id);
						break;
					case 3:
						if(t2.s == "*") {
							star = true;
						} else {
							this.unexpected(t2);
						}
						break;
					default:
						this.unexpected(t2);
					}
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else {
					var tmp;
					if(type != null) {
						if(type == null) {
							tmp = false;
						} else if(type._hx_index == 2) {
							var _g = type.fields;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t3 = this.token();
						if(t3 != hscript_Token.TSemicolon) {
							this.unexpected(t3);
						}
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
			}
		}
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						code = s.readString(4);
					} catch( e2 ) {
						haxe_CallStack.lastException = e2;
						var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
						this.line = old;
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
					}
					var k = 0;
					k <<= 4;
					var char = HxOverrides.cca(code,0);
					if(char == null) {
						this.invalidChar(char);
					} else {
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							this.invalidChar(char);
						}
					}
					k <<= 4;
					var char1 = HxOverrides.cca(code,1);
					if(char1 == null) {
						this.invalidChar(char1);
					} else {
						switch(char1) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char1 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char1 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char1 - 87;
							break;
						default:
							this.invalidChar(char1);
						}
					}
					k <<= 4;
					var char2 = HxOverrides.cca(code,2);
					if(char2 == null) {
						this.invalidChar(char2);
					} else {
						switch(char2) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char2 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char2 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char2 - 87;
							break;
						default:
							this.invalidChar(char2);
						}
					}
					k <<= 4;
					var char3 = HxOverrides.cca(code,3);
					if(char3 == null) {
						this.invalidChar(char3);
					} else {
						switch(char3) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char3 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char3 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char3 - 87;
							break;
						default:
							this.invalidChar(char3);
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.readChar();
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.readChar();
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.readChar();
				switch(char) {
				case 46:
					char = this.readChar();
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.readChar();
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.readChar();
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						if(tk == null) {
							var _this2 = this.tokens;
							_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								var _g = tk.c;
								if(_g._hx_index == 0) {
									var e = _g.v;
									pow = e;
								} else {
									var _this3 = this.tokens;
									_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										var _this4 = this.tokens;
										_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
									} else if(tk._hx_index == 1) {
										var _g1 = tk.c;
										if(_g1._hx_index == 0) {
											var e1 = _g1.v;
											pow = -e1;
										} else {
											var _this5 = this.tokens;
											_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
										}
									} else {
										var _this6 = this.tokens;
										_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
									}
								} else {
									var _this7 = this.tokens;
									_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
								}
								break;
							default:
								var _this8 = this.tokens;
								_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.readChar();
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.readChar();
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.readChar();
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.readChar();
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.readChar();
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,preprocStack: null
	,parsePreproCond: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				var id = tk.s;
				return hscript_Expr.EIdent(id);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			var _g6 = e.e2;
			var _g5 = e.e1;
			switch(e.op) {
			case "&&":
				var e2 = _g6;
				var e11 = _g5;
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = _g6;
				var e12 = _g5;
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		case 7:
			var _g1 = e.prefix;
			if(e.op == "!") {
				var e3 = e.e;
				return !this.evalPreproCond(e3);
			} else {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = 0;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Unclosed"));
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while(char != 13 && char != 10) char = s.readByte();
				this.char = char;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			try {
				while(true) {
					while(char != 42) {
						if(char == 10) {
							this.line++;
						}
						char = s.readByte();
					}
					char = s.readByte();
					if(char == 47) {
						break;
					}
				}
			} catch( e2 ) {
				haxe_CallStack.lastException = e2;
				var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s1 = t.s;
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id1 = t.s;
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = "hscript.Tools";
hscript_Tools.iter = function(e,f) {
	switch(e._hx_index) {
	case 0:
		var _g19 = e.c;
		break;
	case 1:
		var _g27 = e.v;
		break;
	case 2:
		var _g32 = e.t;
		var _g31 = e.n;
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 3:
		var e2 = e.e;
		f(e2);
		break;
	case 4:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e3 = el[_g];
			++_g;
			f(e3);
		}
		break;
	case 5:
		var _g49 = e.f;
		var e4 = e.e;
		f(e4);
		break;
	case 6:
		var _g36 = e.op;
		var e21 = e.e2;
		var e11 = e.e1;
		f(e11);
		f(e21);
		break;
	case 7:
		var _g13 = e.prefix;
		var _g12 = e.op;
		var e5 = e.e;
		f(e5);
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		f(e6);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		f(c);
		f(e12);
		if(e22 != null) {
			f(e22);
		}
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		f(c1);
		f(e7);
		break;
	case 11:
		var _g28 = e.v;
		var e8 = e.e;
		var it = e.it;
		f(it);
		f(e8);
		break;
	case 12:case 13:
		break;
	case 14:
		var _g44 = e.ret;
		var _g43 = e.name;
		var _g41 = e.args;
		var e9 = e.e;
		f(e9);
		break;
	case 15:
		var e10 = e.e;
		if(e10 != null) {
			f(e10);
		}
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		f(e13);
		f(i);
		break;
	case 17:
		var el1 = e.e;
		var _g2 = 0;
		while(_g2 < el1.length) {
			var e14 = el1[_g2];
			++_g2;
			f(e14);
		}
		break;
	case 18:
		var _g17 = e.cl;
		var el2 = e.params;
		var _g3 = 0;
		while(_g3 < el2.length) {
			var e15 = el2[_g3];
			++_g3;
			f(e15);
		}
		break;
	case 19:
		var e16 = e.e;
		f(e16);
		break;
	case 20:
		var _g5 = e.t;
		var _g4 = e.v;
		var c2 = e.ecatch;
		var e17 = e.e;
		f(e17);
		f(c2);
		break;
	case 21:
		var fl = e.fl;
		var _g6 = 0;
		while(_g6 < fl.length) {
			var fi = fl[_g6];
			++_g6;
			f(fi.e);
		}
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		f(c3);
		f(e18);
		f(e23);
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		f(e19);
		var _g7 = 0;
		while(_g7 < cases.length) {
			var c4 = cases[_g7];
			++_g7;
			var _g8 = 0;
			var _g11 = c4.values;
			while(_g8 < _g11.length) {
				var v = _g11[_g8];
				++_g8;
				f(v);
			}
			f(c4.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		f(c5);
		f(e20);
		break;
	case 25:
		var e24 = e.e;
		var args1 = e.args;
		var name = e.name;
		if(args1 != null) {
			var _g9 = 0;
			while(_g9 < args1.length) {
				var a1 = args1[_g9];
				++_g9;
				f(a1);
			}
		}
		f(e24);
		break;
	case 26:
		var _g46 = e.t;
		var e25 = e.e;
		f(e25);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	switch(e._hx_index) {
	case 0:
		var _g19 = e.c;
		edef = e;
		break;
	case 1:
		var _g27 = e.v;
		edef = e;
		break;
	case 2:
		var e1 = e.e;
		var t = e.t;
		var n = e.n;
		edef = hscript_Expr.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e2 = e.e;
		edef = hscript_Expr.EParent(f(e2));
		break;
	case 4:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e3 = el[_g1];
			++_g1;
			_g.push(f(e3));
		}
		edef = hscript_Expr.EBlock(_g);
		break;
	case 5:
		var fi = e.f;
		var e4 = e.e;
		edef = hscript_Expr.EField(f(e4),fi);
		break;
	case 6:
		var e21 = e.e2;
		var e11 = e.e1;
		var op = e.op;
		edef = hscript_Expr.EBinop(op,f(e11),f(e21));
		break;
	case 7:
		var e5 = e.e;
		var pre = e.prefix;
		var op1 = e.op;
		edef = hscript_Expr.EUnop(op1,pre,f(e5));
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		var edef1 = f(e6);
		var _g2 = [];
		var _g11 = 0;
		while(_g11 < args.length) {
			var a = args[_g11];
			++_g11;
			_g2.push(f(a));
		}
		edef = hscript_Expr.ECall(edef1,_g2);
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		edef = hscript_Expr.EIf(f(c),f(e12),e22 != null ? f(e22) : null);
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		edef = hscript_Expr.EWhile(f(c1),f(e7));
		break;
	case 11:
		var e8 = e.e;
		var it = e.it;
		var v = e.v;
		edef = hscript_Expr.EFor(v,f(it),f(e8));
		break;
	case 12:case 13:
		edef = e;
		break;
	case 14:
		var t1 = e.ret;
		var name = e.name;
		var e9 = e.e;
		var args1 = e.args;
		edef = hscript_Expr.EFunction(args1,f(e9),name,t1);
		break;
	case 15:
		var e10 = e.e;
		edef = hscript_Expr.EReturn(e10 != null ? f(e10) : null);
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		edef = hscript_Expr.EArray(f(e13),f(i));
		break;
	case 17:
		var el1 = e.e;
		var _g3 = [];
		var _g12 = 0;
		while(_g12 < el1.length) {
			var e14 = el1[_g12];
			++_g12;
			_g3.push(f(e14));
		}
		edef = hscript_Expr.EArrayDecl(_g3);
		break;
	case 18:
		var el2 = e.params;
		var cl = e.cl;
		var _g4 = [];
		var _g13 = 0;
		while(_g13 < el2.length) {
			var e15 = el2[_g13];
			++_g13;
			_g4.push(f(e15));
		}
		edef = hscript_Expr.ENew(cl,_g4);
		break;
	case 19:
		var e16 = e.e;
		edef = hscript_Expr.EThrow(f(e16));
		break;
	case 20:
		var c2 = e.ecatch;
		var t2 = e.t;
		var v1 = e.v;
		var e17 = e.e;
		edef = hscript_Expr.ETry(f(e17),v1,t2,f(c2));
		break;
	case 21:
		var fl = e.fl;
		var _g5 = [];
		var _g14 = 0;
		while(_g14 < fl.length) {
			var fi1 = fl[_g14];
			++_g14;
			_g5.push({ name : fi1.name, e : f(fi1.e)});
		}
		edef = hscript_Expr.EObject(_g5);
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		edef = hscript_Expr.ETernary(f(c3),f(e18),f(e23));
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		var edef2 = f(e19);
		var _g6 = [];
		var _g15 = 0;
		while(_g15 < cases.length) {
			var c4 = cases[_g15];
			++_g15;
			var _g16 = [];
			var _g21 = 0;
			var _g31 = c4.values;
			while(_g21 < _g31.length) {
				var v2 = _g31[_g21];
				++_g21;
				_g16.push(f(v2));
			}
			_g6.push({ values : _g16, expr : f(c4.expr)});
		}
		edef = hscript_Expr.ESwitch(edef2,_g6,def == null ? null : f(def));
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		edef = hscript_Expr.EDoWhile(f(c5),f(e20));
		break;
	case 25:
		var e24 = e.e;
		var args2 = e.args;
		var name1 = e.name;
		var edef3;
		if(args2 == null) {
			edef3 = null;
		} else {
			var _g7 = [];
			var _g17 = 0;
			while(_g17 < args2.length) {
				var a1 = args2[_g17];
				++_g17;
				_g7.push(f(a1));
			}
			edef3 = _g7;
		}
		edef = hscript_Expr.EMeta(name1,edef3,f(e24));
		break;
	case 26:
		var t3 = e.t;
		var e25 = e.e;
		edef = hscript_Expr.ECheckType(f(e25),t3);
		break;
	}
	return edef;
};
hscript_Tools.expr = function(e) {
	return e;
};
hscript_Tools.mk = function(e,p) {
	return e;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var kbe_Importer = function() { };
$hxClasses["kbe.Importer"] = kbe_Importer;
kbe_Importer.__name__ = "kbe.Importer";
kbe_Importer.__isInterface__ = true;
kbe_Importer.prototype = {
	value: null
	,convert: null
	,__class__: kbe_Importer
};
var kbe_CSVImporter = function() {
	this.value = "CSV importer [WIP]";
};
$hxClasses["kbe.CSVImporter"] = kbe_CSVImporter;
kbe_CSVImporter.__name__ = "kbe.CSVImporter";
kbe_CSVImporter.__interfaces__ = [kbe_Importer];
kbe_CSVImporter.prototype = {
	value: null
	,convert: function(bytes,name) {
		var keyboard = new kbe_KeyBoard();
		var csv = thx_csv_Csv.decodeObjects(bytes.toString());
		var fields = ["name","x","y","angle","width","height","row","column"];
		var _g = 0;
		while(_g < csv.length) {
			var line = csv[_g];
			++_g;
			var idParsed = Std.parseInt(Reflect.field(line,"id"));
			var id = idParsed != null ? idParsed : 1;
			var key = new kbe_Key(id);
			var _g1 = 0;
			while(_g1 < fields.length) {
				var field = fields[_g1];
				++_g1;
				var value = Reflect.field(line,field);
				if(value != null) {
					if(field == "name") {
						key[field] = value;
					} else {
						key[field] = parseFloat(value);
					}
				}
			}
			keyboard.addKey(key);
		}
		return keyboard;
	}
	,__class__: kbe_CSVImporter
};
var kbe_Exporter = function() { };
$hxClasses["kbe.Exporter"] = kbe_Exporter;
kbe_Exporter.__name__ = "kbe.Exporter";
kbe_Exporter.__isInterface__ = true;
kbe_Exporter.prototype = {
	value: null
	,fileName: null
	,mimeType: null
	,convert: null
	,__class__: kbe_Exporter
};
var kbe_CSVExporter = function() {
	this.value = "CSV exporter [WIP]";
};
$hxClasses["kbe.CSVExporter"] = kbe_CSVExporter;
kbe_CSVExporter.__name__ = "kbe.CSVExporter";
kbe_CSVExporter.__interfaces__ = [kbe_Exporter];
kbe_CSVExporter.prototype = {
	value: null
	,convert: function(keyboard) {
		var ans = new haxe_io_BytesBuffer();
		var data = [];
		data.push(["id","name","x","y","angle","width","height","row","column"]);
		var _g = 0;
		var _g1 = keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var row = [key.id == null ? "null" : "" + key.id,key.name,key.x == null ? "null" : "" + key.x,key.y == null ? "null" : "" + key.y,key.angle == null ? "null" : "" + key.angle,key.width == null ? "null" : "" + key.width,key.height == null ? "null" : "" + key.height,key.row == null ? "null" : "" + key.row,key.column == null ? "null" : "" + key.column];
			data.push(row);
		}
		return haxe_io_Bytes.ofString(thx_csv_Dsv.encode(data,thx_csv_Csv.encodeOptions));
	}
	,fileName: function() {
		return "keyboard.csv";
	}
	,mimeType: function() {
		return "text/csv";
	}
	,__class__: kbe_CSVExporter
};
var kbe_IPoint = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["kbe.IPoint"] = kbe_IPoint;
kbe_IPoint.__name__ = "kbe.IPoint";
kbe_IPoint.prototype = {
	x: null
	,y: null
	,__class__: kbe_IPoint
};
var kbe_EditorAction = $hxEnums["kbe.EditorAction"] = { __ename__ : "kbe.EditorAction", __constructs__ : ["ActionList","AddKey","RemoveKeys","ModifyKey","ModifyKeys","MoveKeys","NewLayout","RenameLayout","RemoveLayout","UpdateLayout","AddLayoutMapping","AddLayoutExclusiveMapping","UpdateWireMapping"]
	,ActionList: ($_=function(actions) { return {_hx_index:0,actions:actions,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["actions"],$_)
	,AddKey: ($_=function(key) { return {_hx_index:1,key:key,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["key"],$_)
	,RemoveKeys: ($_=function(id) { return {_hx_index:2,id:id,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["id"],$_)
	,ModifyKey: ($_=function(id,properties) { return {_hx_index:3,id:id,properties:properties,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["id","properties"],$_)
	,ModifyKeys: ($_=function(id,properties) { return {_hx_index:4,id:id,properties:properties,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["id","properties"],$_)
	,MoveKeys: ($_=function(id,positions) { return {_hx_index:5,id:id,positions:positions,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["id","positions"],$_)
	,NewLayout: ($_=function(layout) { return {_hx_index:6,layout:layout,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["layout"],$_)
	,RenameLayout: ($_=function(oldName,newName) { return {_hx_index:7,oldName:oldName,newName:newName,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["oldName","newName"],$_)
	,RemoveLayout: ($_=function(name) { return {_hx_index:8,name:name,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["name"],$_)
	,UpdateLayout: ($_=function(name,layout) { return {_hx_index:9,name:name,layout:layout,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["name","layout"],$_)
	,AddLayoutMapping: ($_=function(layout,gridId,layoutId) { return {_hx_index:10,layout:layout,gridId:gridId,layoutId:layoutId,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["layout","gridId","layoutId"],$_)
	,AddLayoutExclusiveMapping: ($_=function(layout,gridId,layoutId) { return {_hx_index:11,layout:layout,gridId:gridId,layoutId:layoutId,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["layout","gridId","layoutId"],$_)
	,UpdateWireMapping: ($_=function(rows,columns) { return {_hx_index:12,rows:rows,columns:columns,__enum__:"kbe.EditorAction",toString:$estr}; },$_.__params__ = ["rows","columns"],$_)
};
var kbe_UndoExecutor = function() { };
$hxClasses["kbe.UndoExecutor"] = kbe_UndoExecutor;
kbe_UndoExecutor.__name__ = "kbe.UndoExecutor";
kbe_UndoExecutor.__isInterface__ = true;
kbe_UndoExecutor.prototype = {
	get_state: null
	,set_state: null
	,applyAction: null
	,mergeActions: null
	,__class__: kbe_UndoExecutor
	,__properties__: {set_state:"set_state",get_state:"get_state"}
};
var kbe_Editor = function(keyboard) {
	this.alignButtons = true;
	this.alignment = 0.25;
	this.keyboard = keyboard;
	this.undoBuffer = new kbe_UndoBuffer(this);
};
$hxClasses["kbe.Editor"] = kbe_Editor;
kbe_Editor.__name__ = "kbe.Editor";
kbe_Editor.__interfaces__ = [kbe_UndoExecutor];
kbe_Editor.prototype = {
	keyboard: null
	,undoBuffer: null
	,alignment: null
	,alignButtons: null
	,setKeyboard: function(keyboard) {
		this.keyboard = keyboard;
	}
	,getKeyboard: function() {
		return this.keyboard;
	}
	,set_state: function(v) {
		this.setKeyboard(v);
		return this.keyboard;
	}
	,get_state: function() {
		return this.keyboard;
	}
	,applyAction: function(a) {
		switch(a._hx_index) {
		case 0:
			var actions = a.actions;
			var _g = 0;
			while(_g < actions.length) {
				var action = actions[_g];
				++_g;
				this.applyAction(action);
			}
			break;
		case 1:
			var key = a.key;
			var k = key.clone();
			this.keyboard.addKey(k);
			return k;
		case 2:
			var ids = a.id;
			var _g1 = 0;
			while(_g1 < ids.length) {
				var id = ids[_g1];
				++_g1;
				this.keyboard.removeKey(this.keyboard.getKeyById(id));
			}
			break;
		case 3:
			var prop = a.properties;
			var id1 = a.id;
			this.keyboard.getKeyById(id1).copyProperties(prop);
			break;
		case 4:
			var prop1 = a.properties;
			var id2 = a.id;
			this.modifyKeysImpl(id2,prop1);
			break;
		case 5:
			var positions = a.positions;
			var ids1 = a.id;
			this.moveKeysImpl(ids1,positions);
			break;
		case 6:
			var layout = a.layout;
			var v = layout.clone();
			this.keyboard.addLayout(v);
			return v;
		case 7:
			var newName = a.newName;
			var oldName = a.oldName;
			this.keyboard.renameLayout(oldName,newName);
			break;
		case 8:
			var name = a.name;
			this.keyboard.removeLayout(name);
			break;
		case 9:
			var layout1 = a.layout;
			var name1 = a.name;
			return this.keyboard.updateLayout(name1,layout1.clone());
		case 10:
			var layoutId = a.layoutId;
			var gridId = a.gridId;
			var layout2 = a.layout;
			this.keyboard.getLayoutByName(layout2).addMapping(gridId,layoutId);
			break;
		case 11:
			var layoutId1 = a.layoutId;
			var gridId1 = a.gridId;
			var layout3 = a.layout;
			this.keyboard.getLayoutByName(layout3).addExclusiveMapping(gridId1,layoutId1);
			break;
		case 12:
			var columns = a.columns;
			var rows = a.rows;
			if(rows != null) {
				this.keyboard.rowMapping = rows.clone();
			}
			if(columns != null) {
				this.keyboard.columnMapping = columns.clone();
			}
			break;
		}
		return null;
	}
	,modifyKeysImpl: function(ids,prop) {
		var _g = 0;
		var _g1 = ids.length;
		while(_g < _g1) {
			var i = _g++;
			var key = this.keyboard.getKeyById(ids[i]);
			var _g2 = new haxe_iterators_MapKeyValueIterator(prop[i]);
			while(_g2.hasNext()) {
				var _g11 = _g2.next();
				var name = _g11.key;
				var value = _g11.value;
				key[name] = value;
			}
		}
	}
	,moveKeysImpl: function(ids,positions) {
		var index = 0;
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var key = this.keyboard.getKeyById(id);
			key.x = positions[index].x;
			key.y = positions[index].y;
			++index;
		}
	}
	,mergeActions: function(a,b) {
		switch(a._hx_index) {
		case 1:
			if(b._hx_index == 3) {
				var key = a.key;
				var properties2 = b.properties;
				var id2 = b.id;
				if(key.id == id2) {
					return kbe_EditorAction.AddKey(properties2);
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		case 3:
			var _g8 = a.properties;
			if(b._hx_index == 3) {
				var id1 = a.id;
				var properties21 = b.properties;
				var id21 = b.id;
				if(id1 == id21) {
					return kbe_EditorAction.ModifyKey(id1,properties21);
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		case 4:
			if(b._hx_index == 4) {
				var ids1 = a.id;
				var prop1 = a.properties;
				var prop2 = b.properties;
				var ids2 = b.id;
				if(thx_Arrays.equals(ids1,ids2)) {
					var res = prop1.slice();
					var _g = 0;
					var _g1 = prop1.length;
					while(_g < _g1) {
						var i = _g++;
						var mapA = res[i];
						var mapB = prop2[i];
						var _g2 = new haxe_iterators_MapKeyValueIterator(mapB);
						while(_g2.hasNext()) {
							var _g11 = _g2.next();
							var key1 = _g11.key;
							var value = _g11.value;
							var value1 = value;
							if(__map_reserved[key1] != null) {
								mapA.setReserved(key1,value1);
							} else {
								mapA.h[key1] = value1;
							}
						}
					}
					return kbe_EditorAction.ModifyKeys(ids1,res);
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		case 5:
			if(b._hx_index == 5) {
				var ids11 = a.id;
				var pos1 = a.positions;
				var pos2 = b.positions;
				var ids21 = b.id;
				if(thx_Arrays.equals(ids11,ids21)) {
					return kbe_EditorAction.MoveKeys(ids11,pos2);
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		default:
			return null;
		}
	}
	,runAction: function(a,merge) {
		if(merge == null) {
			merge = false;
		}
		return this.undoBuffer.runAction(a,merge);
	}
	,createKey: function() {
		return this.keyboard.createKey();
	}
	,addNewKey: function() {
		return this.runAction(kbe_EditorAction.AddKey(this.createKey()));
	}
	,addDown: function(prevKey) {
		var key = this.createKey();
		key.y = prevKey.y + prevKey.height;
		key.x = prevKey.x;
		key.width = prevKey.width;
		key.row = prevKey.row + 1;
		key.column = prevKey.column;
		return this.runAction(kbe_EditorAction.AddKey(key));
	}
	,addRight: function(prevKey) {
		var key = this.createKey();
		key.y = prevKey.y;
		key.x = prevKey.x + prevKey.width;
		key.height = prevKey.height;
		key.row = prevKey.row;
		key.column = prevKey.column + 1;
		return this.runAction(kbe_EditorAction.AddKey(key));
	}
	,removeKey: function(key) {
		this.runAction(kbe_EditorAction.RemoveKeys([key.id]));
	}
	,removeKeys: function(keys) {
		var result = new Array(keys.length);
		var _g = 0;
		var _g1 = keys.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = keys[i].id;
		}
		this.runAction(kbe_EditorAction.RemoveKeys(result));
	}
	,alignPoint: function(pos,force) {
		if(force == null) {
			force = false;
		}
		var rnd = function(val,step) {
			return Math.round(val / step) * step;
		};
		if(this.alignButtons || force) {
			var st = this.alignment;
			pos.x = rnd(pos.x,st);
			pos.y = rnd(pos.y,st);
		}
		return pos;
	}
	,alignKey: function(key,force) {
		if(force == null) {
			force = false;
		}
		var p = this.alignPoint({ x : key.x, y : key.y});
		key.x = p.x;
		key.y = p.y;
	}
	,moveKey: function(key,x,y,merge) {
		if(merge == null) {
			merge = false;
		}
		var key2 = key.clone();
		key2.x = x;
		key2.y = y;
		if(this.alignButtons) {
			this.alignKey(key2);
		}
		this.runAction(kbe_EditorAction.ModifyKey(key.id,key2),merge);
	}
	,moveKeys: function(ids,positions,merge) {
		if(merge == null) {
			merge = false;
		}
		var _gthis = this;
		var result = new Array(positions.length);
		var _g = 0;
		var _g1 = positions.length;
		while(_g < _g1) {
			var i = _g++;
			var position = positions[i];
			result[i] = _gthis.alignPoint({ x : position.x, y : position.y});
		}
		var alignedPositions = result;
		this.runAction(kbe_EditorAction.MoveKeys(ids.slice(),alignedPositions),merge);
	}
	,alignKeys: function(mainKey,keys,y) {
		if(y == null) {
			y = true;
		}
		var resultKeys = [];
		var resultPos = [];
		var _g = 0;
		while(_g < keys.length) {
			var key = keys[_g];
			++_g;
			if(key != mainKey) {
				resultKeys.push(key.id);
				if(y) {
					resultPos.push({ x : key.x, y : mainKey.y});
				} else {
					resultPos.push({ x : mainKey.x, y : key.y});
				}
			}
		}
		this.runAction(kbe_EditorAction.MoveKeys(resultKeys,resultPos),false);
	}
	,comparePropertyChanges: function(a,b) {
		var _g = new haxe_iterators_MapKeyValueIterator(a);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var key = _g1.key;
			var value = _g1.value;
			if((__map_reserved[key] != null ? b.getReserved(key) : b.h[key]) != value) {
				return false;
			}
		}
		var _g2 = new haxe_iterators_MapKeyValueIterator(b);
		while(_g2.hasNext()) {
			var _g11 = _g2.next();
			var key1 = _g11.key;
			var value1 = _g11.value;
			if((__map_reserved[key1] != null ? a.getReserved(key1) : a.h[key1]) != value1) {
				return false;
			}
		}
		return true;
	}
	,modifyKeys: function(ids,properties,mergeDuplicate) {
		if(mergeDuplicate == null) {
			mergeDuplicate = true;
		}
		var prevAction = this.undoBuffer.lastAction();
		var merge = false;
		if(mergeDuplicate && prevAction != null) {
			if(prevAction._hx_index == 4) {
				var prevProperties = prevAction.properties;
				var prevId = prevAction.id;
				if(thx_Arrays.equals(prevId,ids)) {
					merge = true;
					var _g = 0;
					var _g1 = properties.length;
					while(_g < _g1) {
						var i = _g++;
						if(!this.comparePropertyChanges(prevProperties[i],properties[i])) {
							merge = false;
							break;
						}
					}
				}
			}
		}
		this.runAction(kbe_EditorAction.ModifyKeys(ids,properties),merge);
	}
	,getConflictingWiring: function() {
		var badKeys = [];
		var cmp = function(a,b) {
			if(a.x != b.x) {
				return a.x - b.x;
			}
			return a.y - b.y;
		};
		var posCount = new kbe_OrderedMap(cmp);
		var _g = 0;
		var _g1 = this.keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var pos = new kbe_IPoint(key.row,key.column);
			var count = posCount.get(pos);
			if(count == null) {
				posCount.set(pos,1);
			} else {
				posCount.set(pos,count + 1);
			}
		}
		var _g2 = 0;
		var _g3 = this.keyboard.keys;
		while(_g2 < _g3.length) {
			var key1 = _g3[_g2];
			++_g2;
			var c = posCount.get(new kbe_IPoint(key1.row,key1.column));
			if(c != null && c > 1) {
				badKeys.push(key1);
			}
		}
		return badKeys;
	}
	,newLayout: function() {
		var layout = new kbe_KeyboardLayout();
		layout.name = "Layout";
		return this.runAction(kbe_EditorAction.NewLayout(layout));
	}
	,newLayoutFromKeys: function(keys,identityMapping) {
		var layout = new kbe_KeyboardLayout();
		layout.name = "Layout";
		layout.setKeys(this.keyboard.keys,identityMapping);
		return this.runAction(kbe_EditorAction.NewLayout(layout));
	}
	,addLayout: function(layout) {
		return this.runAction(kbe_EditorAction.NewLayout(layout));
	}
	,renameLayout: function(layout,name) {
		this.runAction(kbe_EditorAction.RenameLayout(layout.name,name));
	}
	,removeLayout: function(layout) {
		this.runAction(kbe_EditorAction.RemoveLayout(layout.name));
	}
	,addLayoutMapping: function(layout,gridId,layoutId) {
		if(layout.synchronised) {
			return;
		}
		this.runAction(kbe_EditorAction.AddLayoutMapping(layout.name,gridId,layoutId));
	}
	,addLayoutMappingFromLayoutExclusive: function(layout,gridId,layoutId) {
		if(layout.synchronised) {
			return;
		}
		this.runAction(kbe_EditorAction.AddLayoutExclusiveMapping(layout.name,gridId,layoutId));
	}
	,updateLayout: function(name,layout) {
		return this.runAction(kbe_EditorAction.UpdateLayout(name,layout.clone()));
	}
	,updateRowMapping: function(rows,columns) {
		this.runAction(kbe_EditorAction.UpdateWireMapping(rows,columns));
	}
	,addWiringRow: function(row) {
		var rows = (row ? this.keyboard.rowMapping : this.keyboard.columnMapping).clone();
		var count = rows.get_rows();
		rows.set_rows(count + 1);
		rows.setMatrixRow(count,count);
		if(row) {
			this.updateRowMapping(rows);
		} else {
			this.updateRowMapping(null,rows);
		}
	}
	,resizeWiringToKeyboard: function() {
		var size = this.keyboard.getMatrixSize();
		var rows = this.keyboard.rowMapping.clone();
		var cols = this.keyboard.columnMapping.clone();
		rows.resize(size.row);
		cols.resize(size.col);
		this.updateRowMapping(rows,cols);
	}
	,swapWiringRowColumnProperties: function() {
		var rows = this.keyboard.rowMapping.clone();
		var cols = this.keyboard.columnMapping.clone();
		this.updateRowMapping(cols,rows);
	}
	,swapWiringRowColumnAssignment: function() {
		var keys = [];
		var properties = [];
		var _g = 0;
		var _g1 = this.keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			keys.push(key.id);
			var changes = new haxe_ds_StringMap();
			var value = key.column;
			if(__map_reserved["row"] != null) {
				changes.setReserved("row",value);
			} else {
				changes.h["row"] = value;
			}
			var value1 = key.row;
			if(__map_reserved["column"] != null) {
				changes.setReserved("column",value1);
			} else {
				changes.h["column"] = value1;
			}
			properties.push(changes);
		}
		this.runAction(kbe_EditorAction.ActionList([kbe_EditorAction.ModifyKeys(keys,properties),kbe_EditorAction.UpdateWireMapping(this.keyboard.columnMapping.clone(),this.keyboard.rowMapping.clone())]));
	}
	,__class__: kbe_Editor
	,__properties__: {set_state:"set_state",get_state:"get_state"}
};
var kbe_EditorApp = function() {
	haxe_ui_HaxeUIApp.call(this);
	this.ready($bind(this,this.onReady));
};
$hxClasses["kbe.EditorApp"] = kbe_EditorApp;
kbe_EditorApp.__name__ = "kbe.EditorApp";
kbe_EditorApp.main = function() {
	new kbe_EditorApp();
};
kbe_EditorApp.__super__ = haxe_ui_HaxeUIApp;
kbe_EditorApp.prototype = $extend(haxe_ui_HaxeUIApp.prototype,{
	onReady: function() {
		var editor = new kbe_EditorGui();
		this.addComponent(editor);
		editor.set_percentWidth(100);
		editor.set_percentHeight(100);
		this.start();
	}
	,__class__: kbe_EditorApp
});
var kbe_EditorGui = function() {
	this.pages = [];
	this.keyboard = new kbe_KeyBoard();
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n\t\t.selected {\r\n            background-color: #404040;\r\n\t\t}\r\n  ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("padding: 5px;");
	var c1 = new haxe_ui_containers_HBox();
	var c2 = new haxe_ui_components_DropDown();
	c2.set_id("importFormat");
	c2.set_width(250.);
	c2.set_text("Import format");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_id("importButton");
	c3.set_text("Import");
	c1.addComponent(c3);
	var c4 = new haxe_ui_components_DropDown();
	c4.set_id("exportFormat");
	c4.set_width(250.);
	c4.set_text("Export format");
	c1.addComponent(c4);
	var c5 = new haxe_ui_components_Button();
	c5.set_id("exportButton");
	c5.set_text("Export");
	c1.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("undoButton");
	c6.set_text("Undo");
	c1.addComponent(c6);
	var c7 = new haxe_ui_components_Button();
	c7.set_id("redoButton");
	c7.set_text("Redo");
	c1.addComponent(c7);
	c0.addComponent(c1);
	var c21 = new haxe_ui_containers_TabView();
	c21.set_id("tabList");
	c21.set_percentWidth(100.);
	c21.set_percentHeight(100.);
	c0.addComponent(c21);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.undoButton = this.findComponent("undoButton",haxe_ui_components_Button,true);
	this.tabList = this.findComponent("tabList",haxe_ui_containers_TabView,true);
	this.redoButton = this.findComponent("redoButton",haxe_ui_components_Button,true);
	this.importFormat = this.findComponent("importFormat",haxe_ui_components_DropDown,true);
	this.importButton = this.findComponent("importButton",haxe_ui_components_Button,true);
	this.exportFormat = this.findComponent("exportFormat",haxe_ui_components_DropDown,true);
	this.exportButton = this.findComponent("exportButton",haxe_ui_components_Button,true);
	this.addClass("custom-component");
	this.addClass("editorgui-component");
	this.editor = new kbe_Editor(this.keyboard);
	this.pageMechanical = new kbe_MechanicalPage(this.editor);
	this.tabList.addComponent(this.pageMechanical);
	this.pages.push(this.pageMechanical);
	this.pageWiring = new kbe_WiringPage(this.editor);
	this.tabList.addComponent(this.pageWiring);
	this.pages.push(this.pageWiring);
	var layoutPage = new kbe_LayoutPage(this.editor);
	this.tabList.addComponent(layoutPage);
	this.pages.push(layoutPage);
	var _g = 0;
	var _g1 = this.pages;
	while(_g < _g1.length) {
		var page = _g1[_g];
		++_g;
		page.init(this.editor);
	}
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.reloadPages();
	this.exportButton.set_onClick($bind(this,this.onClickExport));
	this.importButton.set_onClick($bind(this,this.onClickImport));
	this.tabList.set_onChange($bind(this,this.onPageChange));
	this.undoButton.set_onClick(function(_) {
		_gthis.undo();
		return;
	});
	this.redoButton.set_onClick(function(_1) {
		_gthis.redo();
		return;
	});
	this.fillFormats();
	this.bindJsKeyShortcuts();
};
$hxClasses["kbe.EditorGui"] = kbe_EditorGui;
kbe_EditorGui.__name__ = "kbe.EditorGui";
kbe_EditorGui.__super__ = haxe_ui_core_Component;
kbe_EditorGui.prototype = $extend(haxe_ui_core_Component.prototype,{
	pageMechanical: null
	,pageWiring: null
	,keyboard: null
	,editor: null
	,pages: null
	,undo: function() {
		this.editor.undoBuffer.undo();
		this.reloadCurrentPage();
	}
	,redo: function() {
		this.editor.undoBuffer.redo();
		this.reloadCurrentPage();
	}
	,bindJsKeyShortcuts: function() {
		var _gthis = this;
		var document = window.document;
		document.addEventListener("keydown",function(event) {
			if(event.ctrlKey) {
				switch(event.key) {
				case "y":
					_gthis.redo();
					break;
				case "z":
					_gthis.undo();
					break;
				default:
				}
			}
			return;
		});
	}
	,reloadPages: function() {
		var _g = 0;
		var _g1 = this.pages;
		while(_g < _g1.length) {
			var page = _g1[_g];
			++_g;
			page.reload();
		}
	}
	,reloadCurrentPage: function() {
		var page = this.tabList.get_selectedPage();
		page.reload();
	}
	,fillFormats: function() {
		var importers = kbe_FormatManager.getImporters();
		this.importFormat.set_dataSource(new haxe_ui_data_ArrayDataSource());
		var _g = 0;
		while(_g < importers.length) {
			var importer = importers[_g];
			++_g;
			this.importFormat.get_dataSource().add(importer);
		}
		var exporters = kbe_FormatManager.getExporters();
		this.exportFormat.set_dataSource(new haxe_ui_data_ArrayDataSource());
		var _g1 = 0;
		while(_g1 < exporters.length) {
			var exporter = exporters[_g1];
			++_g1;
			this.exportFormat.get_dataSource().add(exporter);
		}
	}
	,onClickExport: function(_) {
		var exporter = this.exportFormat.get_selectedItem();
		var result = exporter.convert(this.keyboard);
		var intArray = [];
		var _g = 0;
		var _g1 = result.length;
		while(_g < _g1) {
			var i = _g++;
			intArray.push(result.b[i]);
		}
		window.saveAs(new Blob([new Uint8Array(intArray)]),exporter.fileName(),true);
	}
	,onClickImport: function(_) {
		var _gthis = this;
		var importer = this.importFormat.get_selectedItem();
		if(importer == null) {
			return;
		}
		kbe_FileOpener.tryToOpenFile(function(bytes,names) {
			var result = null;
			try {
				result = importer.convert(bytes[0],names[0]);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				haxe_ui_Toolkit.messageBox("Import error " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),null,"haxeui-core/styles/default/dialogs/cross-circle.png");
				return;
			}
			_gthis.keyboard = result;
			_gthis.editor.setKeyboard(_gthis.keyboard);
			_gthis.editor.undoBuffer.clear();
			_gthis.reloadPages();
		});
	}
	,onPageChange: function(_) {
		this.reloadCurrentPage();
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_EditorGui();
	}
	,undoButton: null
	,tabList: null
	,redoButton: null
	,importFormat: null
	,importButton: null
	,exportFormat: null
	,exportButton: null
	,__class__: kbe_EditorGui
});
var kbe_EditorPage = function() { };
$hxClasses["kbe.EditorPage"] = kbe_EditorPage;
kbe_EditorPage.__name__ = "kbe.EditorPage";
kbe_EditorPage.__isInterface__ = true;
kbe_EditorPage.prototype = {
	init: null
	,reload: null
	,__class__: kbe_EditorPage
};
var kbe_PartialImporter = function() { };
$hxClasses["kbe.PartialImporter"] = kbe_PartialImporter;
kbe_PartialImporter.__name__ = "kbe.PartialImporter";
kbe_PartialImporter.__isInterface__ = true;
kbe_PartialImporter.prototype = {
	convert: null
	,__class__: kbe_PartialImporter
};
var kbe_LayoutExporter = function() { };
$hxClasses["kbe.LayoutExporter"] = kbe_LayoutExporter;
kbe_LayoutExporter.__name__ = "kbe.LayoutExporter";
kbe_LayoutExporter.__isInterface__ = true;
kbe_LayoutExporter.prototype = {
	value: null
	,fileName: null
	,mimeType: null
	,convert: null
	,__class__: kbe_LayoutExporter
};
var kbe_FileOpener = function(callback) {
	this.reader = new FileReader();
	this.filesToProcess = [];
	this.names = [];
	this.data = [];
	this.callback = callback;
};
$hxClasses["kbe.FileOpener"] = kbe_FileOpener;
kbe_FileOpener.__name__ = "kbe.FileOpener";
kbe_FileOpener.tryToOpenFile = function(callback) {
	var uploader = kbe_FileOpener.getUploader();
	var handler = new kbe_FileOpener(callback);
	uploader.onchange = function() {
		handler.onFiles(uploader.files);
	};
	uploader.click();
};
kbe_FileOpener.getUploader = function() {
	if(kbe_FileOpener.uploader == null) {
		var document = window.document;
		kbe_FileOpener.uploader = document.createElement("input");
		kbe_FileOpener.uploader.hidden = true;
		kbe_FileOpener.uploader.id = kbe_FileOpener.ID;
		kbe_FileOpener.uploader.type = "file";
		document.body.appendChild(kbe_FileOpener.uploader);
	}
	return kbe_FileOpener.uploader;
};
kbe_FileOpener.prototype = {
	data: null
	,names: null
	,filesToProcess: null
	,reader: null
	,callback: null
	,onFiles: function(fileList) {
		var _g = 0;
		while(_g < fileList.length) {
			var file = fileList[_g];
			++_g;
			this.filesToProcess.push(file);
		}
		this.reader.onload = $bind(this,this.onLoad);
		this.readNextFile();
	}
	,readNextFile: function() {
		var next = this.filesToProcess.pop();
		if(next != null) {
			this.names.push(next.name);
			this.reader.readAsArrayBuffer(next);
		}
	}
	,onLoad: function() {
		var jsBytes = new Uint8Array(this.reader.result);
		var haxeBytes = new haxe_io_Bytes(new ArrayBuffer(jsBytes.length));
		var _g = 0;
		var _g1 = jsBytes.length;
		while(_g < _g1) {
			var i = _g++;
			haxeBytes.b[i] = jsBytes[i];
		}
		this.data.push(haxeBytes);
		if(this.filesToProcess.length > 0) {
			this.readNextFile();
		} else {
			this.callback(this.data,this.names);
		}
	}
	,__class__: kbe_FileOpener
};
var kbe_FormatManager = function() { };
$hxClasses["kbe.FormatManager"] = kbe_FormatManager;
kbe_FormatManager.__name__ = "kbe.FormatManager";
kbe_FormatManager.getImporters = function() {
	return [new kbe_CSVImporter(),new kbe_KBLEImporter(),new kbe_KBLERawImporter(),new kbe_QMKInfoJsonImporter(),new kbe_TKBEImporter()];
};
kbe_FormatManager.getExporters = function() {
	return [new kbe_CSVExporter(),new kbe_TKBEExporter(),new kbe_TestExporter()];
};
var kbe_KBLEImporter = function() {
	this.value = "Keyboard layout editor .json importer";
};
$hxClasses["kbe.KBLEImporter"] = kbe_KBLEImporter;
kbe_KBLEImporter.__name__ = "kbe.KBLEImporter";
kbe_KBLEImporter.__interfaces__ = [kbe_Importer];
kbe_KBLEImporter.prototype = {
	value: null
	,convert: function(bytes,name) {
		var keyboard = new kbe_KeyBoard();
		var json = tjson_TJSON.parse(bytes.toString());
		var y = 0;
		var x = 0;
		var w = 1;
		var h = 1;
		var id = 1;
		var _g = 0;
		while(_g < json.length) {
			var line = json[_g];
			++_g;
			if(((line) instanceof Array)) {
				var lineArray = line;
				var _g1 = 0;
				while(_g1 < lineArray.length) {
					var item = lineArray[_g1];
					++_g1;
					if(typeof(item) == "string") {
						var key = new kbe_Key(id++);
						key.x = x;
						key.y = y;
						key.name = item;
						key.width = w;
						key.height = h;
						keyboard.addKey(key);
						x += w;
						w = 1;
						h = 1;
					} else {
						var properties = item;
						var access = properties;
						var _g_access = access;
						var _g_keys = Reflect.fields(access);
						var _g_index = 0;
						while(_g_index < _g_keys.length) {
							var key1 = _g_keys[_g_index++];
							var _g11 = { value : _g_access[key1], key : key1};
							var key2 = _g11.key;
							var value = _g11.value;
							if(value == null) {
								continue;
							}
							switch(key2) {
							case "h":
								h = value;
								break;
							case "w":
								w = value;
								break;
							case "x":
								x += value;
								break;
							case "y":
								y += value;
								break;
							default:
								haxe_Log.trace("Unrecognized property " + key2,{ fileName : "src/kbe/KBLEFormat.hx", lineNumber : 56, className : "kbe.KBLEImporter", methodName : "convert"});
							}
						}
					}
				}
				++y;
				x = 0;
			} else {
				var description = line;
				var access1 = description;
				var _g_access1 = access1;
				var _g_keys1 = Reflect.fields(access1);
				var _g_index1 = 0;
				while(_g_index1 < _g_keys1.length) {
					var key3 = _g_keys1[_g_index1++];
					var _g12 = { value : _g_access1[key3], key : key3};
					var key4 = _g12.key;
					var value1 = _g12.value;
					var _this = keyboard.description;
					var value2 = value1 == null ? "" : value1;
					if(__map_reserved[key4] != null) {
						_this.setReserved(key4,value2);
					} else {
						_this.h[key4] = value2;
					}
				}
			}
		}
		return keyboard;
	}
	,__class__: kbe_KBLEImporter
};
var kbe_KBLERawImporter = function() {
	kbe_KBLEImporter.call(this);
	this.value = "Raw layout.json";
};
$hxClasses["kbe.KBLERawImporter"] = kbe_KBLERawImporter;
kbe_KBLERawImporter.__name__ = "kbe.KBLERawImporter";
kbe_KBLERawImporter.__super__ = kbe_KBLEImporter;
kbe_KBLERawImporter.prototype = $extend(kbe_KBLEImporter.prototype,{
	convert: function(bytes,name) {
		var data = new haxe_io_BytesBuffer();
		data.addString("[");
		data.add(bytes);
		data.addString("]");
		return kbe_KBLEImporter.prototype.convert.call(this,data.getBytes(),name);
	}
	,__class__: kbe_KBLERawImporter
});
var kbe_KC = function() { };
$hxClasses["kbe.KC"] = kbe_KC;
kbe_KC.__name__ = "kbe.KC";
var kbe_Key = function(id) {
	this.name = "";
	this.id = 0;
	this.column = 0;
	this.row = 0;
	this.height = 1;
	this.width = 1;
	this.angle = 0;
	this.y = 0;
	this.x = 0;
	this.id = id;
};
$hxClasses["kbe.Key"] = kbe_Key;
kbe_Key.__name__ = "kbe.Key";
kbe_Key.prototype = {
	x: null
	,y: null
	,angle: null
	,width: null
	,height: null
	,row: null
	,column: null
	,id: null
	,name: null
	,point: function() {
		return { x : this.x, y : this.y};
	}
	,clone: function() {
		var key = new kbe_Key(this.id);
		key.copyProperties(this);
		return key;
	}
	,copyProperties: function(key) {
		this.id = key.id;
		this.x = key.x;
		this.y = key.y;
		this.angle = key.angle;
		this.width = key.width;
		this.height = key.height;
		this.row = key.row;
		this.column = key.column;
		this.name = key.name;
	}
	,__class__: kbe_Key
};
var kbe_KeyboarLayoutAutoConnectMode = $hxEnums["kbe.KeyboarLayoutAutoConnectMode"] = { __ename__ : "kbe.KeyboarLayoutAutoConnectMode", __constructs__ : ["NamePos","NameOnly","Position"]
	,NamePos: {_hx_index:0,__enum__:"kbe.KeyboarLayoutAutoConnectMode",toString:$estr}
	,NameOnly: {_hx_index:1,__enum__:"kbe.KeyboarLayoutAutoConnectMode",toString:$estr}
	,Position: {_hx_index:2,__enum__:"kbe.KeyboarLayoutAutoConnectMode",toString:$estr}
};
var kbe_KeyboardLayout = function() {
	this.reverseMapping = new haxe_ds_IntMap();
	this.mapping = new haxe_ds_IntMap();
	this.synchronised = false;
	this.keys = [];
	this.name = "Layout";
};
$hxClasses["kbe.KeyboardLayout"] = kbe_KeyboardLayout;
kbe_KeyboardLayout.__name__ = "kbe.KeyboardLayout";
kbe_KeyboardLayout.keyDistance = function(a,b) {
	return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);
};
kbe_KeyboardLayout.prototype = {
	autoConnect_String: function(keyboard,groupFunction,comparator,maxDistance,unassigned) {
		if(unassigned == null) {
			unassigned = false;
		}
		if(maxDistance == null) {
			maxDistance = 0.5;
		}
		var _gthis = this;
		var createGroups = function(keys) {
			var result = new haxe_ds_StringMap();
			var _g = 0;
			while(_g < keys.length) {
				var key = keys[_g];
				++_g;
				var groupId = groupFunction(key);
				var group = __map_reserved[groupId] != null ? result.getReserved(groupId) : result.h[groupId];
				if(group == null) {
					group = [];
					if(__map_reserved[groupId] != null) {
						result.setReserved(groupId,group);
					} else {
						result.h[groupId] = group;
					}
				}
				group.push(key);
			}
			return result;
		};
		var groupSize = function(group1) {
			var result1 = 0;
			var _ = new haxe_ds__$StringMap_StringMapIterator(group1,group1.arrayKeys());
			while(_.hasNext()) {
				var _1 = _.next();
				++result1;
			}
			return result1;
		};
		if(!unassigned) {
			this.mapping.clear();
			this.reverseMapping.clear();
		}
		if(groupFunction != null) {
			var _g1 = [];
			var _g11 = 0;
			var _g2 = this.keys;
			while(_g11 < _g2.length) {
				var v = _g2[_g11];
				++_g11;
				if(!_gthis.hasLayoutMapping(v.id)) {
					_g1.push(v);
				}
			}
			var layoutKeys = _g1;
			var groupsLayout = createGroups(layoutKeys);
			var _g3 = [];
			var _g12 = 0;
			var _g21 = keyboard.keys;
			while(_g12 < _g21.length) {
				var v1 = _g21[_g12];
				++_g12;
				if(!_gthis.mapping.exists(v1.id)) {
					_g3.push(v1);
				}
			}
			var keyboardKeys = _g3;
			var groupsKeyboard = createGroups(keyboardKeys);
			if(!(groupSize(groupsLayout) == 1 && groupSize(groupsKeyboard) == 1 && keyboardKeys.length > 1)) {
				var _g4 = new haxe_iterators_MapKeyValueIterator(groupsKeyboard);
				while(_g4.hasNext()) {
					var _g13 = _g4.next();
					var groupId1 = _g13.key;
					var group2 = _g13.value;
					var layoutGroup = __map_reserved[groupId1] != null ? groupsLayout.getReserved(groupId1) : groupsLayout.h[groupId1];
					if(layoutGroup == null) {
						continue;
					}
					if(group2.length == 1 && layoutGroup.length == 1) {
						this.addMapping(group2[0].id,layoutGroup[0].id);
					} else if(comparator != null && group2.length == layoutGroup.length && group2.length < 3) {
						var _g22 = 0;
						while(_g22 < group2.length) {
							var keyboardKey = group2[_g22];
							++_g22;
							var nearest = null;
							var nearestDistance = maxDistance + 1;
							var _g23 = 0;
							while(_g23 < layoutGroup.length) {
								var layoutKey = layoutGroup[_g23];
								++_g23;
								var d = comparator(keyboardKey,layoutKey);
								if(d < nearestDistance) {
									nearest = layoutKey;
									nearestDistance = d;
								}
							}
							if(nearest != null && nearestDistance < maxDistance) {
								this.addMapping(keyboardKey.id,nearest.id);
							}
						}
					}
				}
				return;
			}
		}
		if(comparator != null) {
			this.autoConnectPairs(keyboard,comparator,maxDistance,unassigned);
		}
	}
	,name: null
	,keys: null
	,synchronised: null
	,mapping: null
	,reverseMapping: null
	,clone: function() {
		var result = new kbe_KeyboardLayout();
		result.name = this.name;
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			result.keys.push(key.clone());
		}
		result.mapping = this.mapping.copy();
		result.reverseMapping = new haxe_ds_IntMap();
		var _g2 = new haxe_iterators_MapKeyValueIterator(this.reverseMapping);
		while(_g2.hasNext()) {
			var _g3 = _g2.next();
			var key1 = _g3.key;
			var value = _g3.value;
			var this1 = result.reverseMapping;
			var value1 = value.slice();
			this1.h[key1] = value1;
		}
		result.synchronised = this.synchronised;
		return result;
	}
	,getMapping: function() {
		return this.mapping;
	}
	,mappingFromGrid: function(gridId) {
		return this.mapping.h[gridId];
	}
	,mappingToGrid: function(layoutId) {
		var result = this.reverseMapping.h[layoutId];
		if(result == null) {
			return [];
		}
		return result.slice();
	}
	,hasLayoutMapping: function(layoutId) {
		var result = this.reverseMapping.h[layoutId];
		if(result == null) {
			return false;
		}
		return result.length > 0;
	}
	,hasKeyboardMapping: function(keyboardId) {
		return this.mappingFromGrid(keyboardId) != null;
	}
	,addMapping: function(gridId,layoutId) {
		this.removeSingleMapping(gridId);
		if(layoutId >= 0 && gridId >= 0) {
			this.mapping.h[gridId] = layoutId;
			var reverse = this.reverseMapping.h[layoutId];
			if(reverse == null) {
				this.reverseMapping.h[layoutId] = [gridId];
			} else {
				reverse.push(gridId);
			}
		}
	}
	,clearMapping: function() {
		this.mapping.h = { };
		this.reverseMapping.h = { };
	}
	,removeAllMappingFromReverse: function(reverseId) {
		if(reverseId < 0) {
			return;
		}
		var reverse = this.reverseMapping.h[reverseId];
		if(reverse != null) {
			var _g = 0;
			while(_g < reverse.length) {
				var value = reverse[_g];
				++_g;
				this.mapping.remove(value);
			}
			this.reverseMapping.remove(reverseId);
		}
	}
	,removeSingleMapping: function(gridId) {
		if(gridId < 0) {
			return;
		}
		var current = this.mapping.h[gridId];
		if(current != null) {
			var reverse = this.reverseMapping.h[current];
			HxOverrides.remove(reverse,gridId);
		}
		this.mapping.remove(gridId);
	}
	,addExclusiveMapping: function(gridId,layoutId) {
		this.removeAllMappingFromReverse(layoutId);
		this.addMapping(gridId,layoutId);
	}
	,setKeys: function(keys,identityMapping) {
		if(identityMapping == null) {
			identityMapping = true;
		}
		this.clearMapping();
		var result = new Array(keys.length);
		var _g = 0;
		var _g1 = keys.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = keys[i].clone();
		}
		this.keys = result;
		if(identityMapping) {
			var _g2 = 0;
			while(_g2 < keys.length) {
				var key = keys[_g2];
				++_g2;
				this.addMapping(key.id,key.id);
			}
		}
	}
	,autoConnectPairs: function(keyboard,comparator,maxDistance,unassigned) {
		if(unassigned == null) {
			unassigned = false;
		}
		if(maxDistance == null) {
			maxDistance = 0.5;
		}
		var _gthis = this;
		if(!unassigned) {
			this.mapping.h = { };
			this.reverseMapping.h = { };
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = keyboard.keys;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(!_gthis.hasKeyboardMapping(v.id)) {
				_g.push(v);
			}
		}
		var keyboardKeys = _g;
		var _g3 = [];
		var _g11 = 0;
		var _g21 = this.keys;
		while(_g11 < _g21.length) {
			var v1 = _g21[_g11];
			++_g11;
			if(!_gthis.hasLayoutMapping(v1.id)) {
				_g3.push(v1);
			}
		}
		var layoutKeys = _g3;
		var _g4 = 0;
		while(_g4 < keyboardKeys.length) {
			var keyboardKey = keyboardKeys[_g4];
			++_g4;
			var nearest = null;
			var nearestDistance = maxDistance + 1;
			var _g5 = 0;
			while(_g5 < layoutKeys.length) {
				var layoutKey = layoutKeys[_g5];
				++_g5;
				var d = comparator(keyboardKey,layoutKey);
				if(d < nearestDistance) {
					nearest = layoutKey;
					nearestDistance = d;
				}
			}
			if(nearest != null && nearestDistance < maxDistance) {
				this.addMapping(keyboardKey.id,nearest.id);
			}
		}
	}
	,autoConnectInMode: function(keyboard,mode,unassigned,maxDistance) {
		if(maxDistance == null) {
			maxDistance = 0.5;
		}
		switch(mode._hx_index) {
		case 0:
			this.autoConnect_String(keyboard,function(key) {
				return key.name.toLowerCase();
			},kbe_KeyboardLayout.keyDistance,maxDistance,unassigned);
			break;
		case 1:
			this.autoConnect_String(keyboard,function(key1) {
				return key1.name.toLowerCase();
			},null,maxDistance,unassigned);
			break;
		case 2:
			this.autoConnectPairs(keyboard,kbe_KeyboardLayout.keyDistance,maxDistance,unassigned);
			break;
		}
	}
	,connectByNameAndPos: function(keyboard) {
		this.autoConnect_String(keyboard,function(key) {
			return key.name.toLowerCase();
		},kbe_KeyboardLayout.keyDistance);
	}
	,connectByPos: function(keyboard) {
		this.autoConnectInMode(keyboard,kbe_KeyboarLayoutAutoConnectMode.Position,false,0.01);
	}
	,__class__: kbe_KeyboardLayout
};
var kbe_Clonable = function() { };
$hxClasses["kbe.Clonable"] = kbe_Clonable;
kbe_Clonable.__name__ = "kbe.Clonable";
kbe_Clonable.__isInterface__ = true;
kbe_Clonable.prototype = {
	clone: null
	,__class__: kbe_Clonable
};
var kbe_KeyBoard = function() {
	this._layouts = [];
	this.columnMapping = new kbe_WireMapping();
	this.rowMapping = new kbe_WireMapping();
	this.description = new haxe_ds_StringMap();
	this.keys = [];
};
$hxClasses["kbe.KeyBoard"] = kbe_KeyBoard;
kbe_KeyBoard.__name__ = "kbe.KeyBoard";
kbe_KeyBoard.__interfaces__ = [kbe_Clonable];
kbe_KeyBoard.prototype = {
	keys: null
	,description: null
	,rowMapping: null
	,columnMapping: null
	,_layouts: null
	,clone: function() {
		var result = new kbe_KeyBoard();
		result.description = this.description.copy();
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			result.keys.push(key.clone());
		}
		var _g2 = 0;
		var _g3 = this._layouts;
		while(_g2 < _g3.length) {
			var layout = _g3[_g2];
			++_g2;
			result._layouts.push(layout.clone());
		}
		result.rowMapping = this.rowMapping.clone();
		result.columnMapping = this.columnMapping.clone();
		return result;
	}
	,get_layouts: function() {
		var _this = this._layouts;
		var f = $bind(this,this.getResolvedLayout);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(_this[i]);
		}
		return result.slice(0);
	}
	,unresolved_layouts: function() {
		return this._layouts;
	}
	,getResolvedLayout: function(layout) {
		if(!layout.synchronised) {
			return layout;
		}
		var resolvedlayout = layout.clone();
		resolvedlayout.setKeys(this.keys);
		return resolvedlayout;
	}
	,addKey: function(key) {
		this.keys.push(key);
		return key;
	}
	,removeKey: function(key) {
		HxOverrides.remove(this.keys,key);
	}
	,createKey: function() {
		return new kbe_Key(this.getNextId());
	}
	,createAndAddKey: function() {
		var key = this.createKey();
		this.addKey(key);
		return key;
	}
	,getNextId: function() {
		if(this.keys.length == 0) {
			return 1;
		}
		var this1 = new Array(this.keys.length);
		var used = this1;
		var i = 0;
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			used[i++] = key.id;
		}
		var compareInt = function(a,b) {
			if(a < b) {
				return -1;
			} else if(a > b) {
				return 1;
			}
			return 0;
		};
		used.sort(compareInt);
		var last = 0;
		var _g2 = 0;
		while(_g2 < used.length) {
			var v = used[_g2];
			++_g2;
			if(v > last + 1) {
				return last + 1;
			}
			last = v;
		}
		return last + 1;
	}
	,getKeyById: function(id) {
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			if(key.id == id) {
				return key;
			}
		}
		return null;
	}
	,getLayoutByName: function(name) {
		var _g = 0;
		var _g1 = this._layouts;
		while(_g < _g1.length) {
			var layout = _g1[_g];
			++_g;
			if(layout.name == name) {
				return layout;
			}
		}
		return null;
	}
	,renameLayout: function(oldName,newName) {
		var layout = this.getLayoutByName(oldName);
		var conflict = this.getLayoutByName(newName);
		if(layout != null && conflict == null) {
			layout.name = newName;
		}
	}
	,removeLayout: function(name) {
		HxOverrides.remove(this._layouts,this.getLayoutByName(name));
	}
	,updateLayout: function(name,layout) {
		var _g = 0;
		var _g1 = this._layouts.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._layouts[i].name == name) {
				if(name != layout.name) {
					layout.name = this.getUnusedLayoutName(layout.name);
				}
				return this._layouts[i] = layout;
			}
		}
		return null;
	}
	,getUnusedLayoutName: function(name) {
		var conflict = this.getLayoutByName(name);
		if(conflict == null) {
			return name;
		}
		var i = 2;
		var MAX_LAYOUTS = 1000000;
		while(i < MAX_LAYOUTS) {
			var newName = name + ("_" + i);
			if(this.getLayoutByName(newName) == null) {
				return newName;
			}
			++i;
		}
		throw new js__$Boot_HaxeError("Too many layouts");
	}
	,addLayout: function(layout) {
		layout.name = this.getUnusedLayoutName(layout.name);
		this._layouts.push(layout);
		return layout;
	}
	,getMatrixRow: function(electricRow) {
		return this.rowMapping.getMatrixRow(electricRow);
	}
	,getMatrixCol: function(electricCol) {
		return this.columnMapping.getMatrixRow(electricCol);
	}
	,getMatrixPos: function(key) {
		return { row : this.getMatrixRow(key.row), col : this.getMatrixCol(key.column)};
	}
	,getMatrixSize: function() {
		var rows = 0;
		var col = 0;
		var _g = 0;
		var _g1 = this.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var pos = this.getMatrixPos(key);
			if(pos.row + 1 > rows) {
				rows = pos.row + 1;
			}
			if(pos.col + 1 > col) {
				col = pos.col + 1;
			}
		}
		return { row : rows, col : col};
	}
	,__class__: kbe_KeyBoard
	,__properties__: {get_layouts:"get_layouts"}
};
var kbe_WireMapping = function() {
	this.minRows = 0;
	this.columns = [];
	this.matrixRow = [];
	this.columnNames = [];
	this.hasWireColumn = false;
	this.addColumn("pin");
};
$hxClasses["kbe.WireMapping"] = kbe_WireMapping;
kbe_WireMapping.__name__ = "kbe.WireMapping";
kbe_WireMapping.prototype = {
	hasWireColumn: null
	,columnNames: null
	,matrixRow: null
	,columns: null
	,minRows: null
	,clone: function() {
		var result = new kbe_WireMapping();
		result.set_hasWireColumn(this.hasWireColumn);
		result.columnNames = this.columnNames.slice();
		result.matrixRow = this.matrixRow.slice();
		var _this = this.columns;
		var result1 = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result1[i] = _this[i].slice();
		}
		result.columns = result1;
		result.minRows = this.minRows;
		return result;
	}
	,addColumn: function(name) {
		var index = this.columns.length;
		this.columns.push([]);
		this.columnNames.push(name);
		return index;
	}
	,getColumnIndex: function(name) {
		return this.columnNames.indexOf(name);
	}
	,removeColumn: function(name) {
		var column = this.columnNames.indexOf(name);
		if(column > -1) {
			this.columnNames.splice(column,1);
			this.columns.splice(column,1);
		}
	}
	,get_rows: function() {
		var result = this.minRows;
		if(this.hasWireColumn && this.matrixRow.length > result) {
			result = this.matrixRow.length;
		}
		var _g = 0;
		var _g1 = this.columns;
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			if(column.length > result) {
				result = column.length;
			}
		}
		return result;
	}
	,set_rows: function(v) {
		this.minRows = v;
		return v;
	}
	,set_hasWireColumn: function(v) {
		this.hasWireColumn = v;
		if(!this.hasWireColumn) {
			this.matrixRow = [];
		}
		return v;
	}
	,getMatrixRow: function(row) {
		if(this.hasWireColumn && row < this.matrixRow.length) {
			return this.matrixRow[row];
		}
		return row;
	}
	,setMatrixRow: function(row,matrixRow) {
		while(this.matrixRow.length <= row) this.matrixRow.push(this.matrixRow.length);
		this.matrixRow[row] = matrixRow;
	}
	,getColumnValue: function(row,columnIndex) {
		if(columnIndex < this.columns.length) {
			var column = this.columns[columnIndex];
			if(row < column.length) {
				return column[row];
			}
		}
		return null;
	}
	,setColumnValue: function(row,columnIndex,value) {
		var column = this.columns[columnIndex];
		while(column.length <= row) column.push(null);
		return column[row] = value;
	}
	,resize: function(count) {
		this.minRows = count;
		if(this.matrixRow.length > count) {
			this.matrixRow.length = count;
		}
		var _g = 0;
		var _g1 = this.columns;
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			if(column.length > count) {
				column.length = count;
			}
		}
	}
	,__class__: kbe_WireMapping
	,__properties__: {set_rows:"set_rows",get_rows:"get_rows",set_hasWireColumn:"set_hasWireColumn"}
};
var kbe_components_OneWayButton = function() {
	haxe_ui_components_Button.call(this);
	this.set_toggle(true);
	this.registerEvent("click",$bind(this,this.onMouseClick));
};
$hxClasses["kbe.components.OneWayButton"] = kbe_components_OneWayButton;
kbe_components_OneWayButton.__name__ = "kbe.components.OneWayButton";
kbe_components_OneWayButton.__super__ = haxe_ui_components_Button;
kbe_components_OneWayButton.prototype = $extend(haxe_ui_components_Button.prototype,{
	onMouseClick: function(event) {
		this.set_selected(true);
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_OneWayButton();
	}
	,__class__: kbe_components_OneWayButton
});
var kbe_KeyButton = function(key) {
	kbe_components_OneWayButton.call(this);
	if(key == null) {
		throw new js__$Boot_HaxeError("Bad call");
	}
	this.key = key;
};
$hxClasses["kbe.KeyButton"] = kbe_KeyButton;
kbe_KeyButton.__name__ = "kbe.KeyButton";
kbe_KeyButton.__super__ = kbe_components_OneWayButton;
kbe_KeyButton.prototype = $extend(kbe_components_OneWayButton.prototype,{
	key: null
	,registerBehaviours: function() {
		kbe_components_OneWayButton.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = kbe_components_OneWayButton.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_KeyButton();
	}
	,__class__: kbe_KeyButton
});
var kbe_KeyLabelMode = $hxEnums["kbe.KeyLabelMode"] = { __ename__ : "kbe.KeyLabelMode", __constructs__ : ["Name","RowColumn","Row","Column","Id"]
	,Name: {_hx_index:0,__enum__:"kbe.KeyLabelMode",toString:$estr}
	,RowColumn: {_hx_index:1,__enum__:"kbe.KeyLabelMode",toString:$estr}
	,Row: {_hx_index:2,__enum__:"kbe.KeyLabelMode",toString:$estr}
	,Column: {_hx_index:3,__enum__:"kbe.KeyLabelMode",toString:$estr}
	,Id: {_hx_index:4,__enum__:"kbe.KeyLabelMode",toString:$estr}
};
var kbe_KeyVisualizer = function() { };
$hxClasses["kbe.KeyVisualizer"] = kbe_KeyVisualizer;
kbe_KeyVisualizer.__name__ = "kbe.KeyVisualizer";
kbe_KeyVisualizer.getIndexedColor = function(index,selected) {
	var angle = 129.0 * index % 360.0;
	var color = thx_color__$Hsv_Hsv_$Impl_$.toRgb(thx_color__$Hsv_Hsv_$Impl_$.fromFloats([angle,0.4,0.8]));
	if(selected) {
		color = thx_color__$Rgb_Rgb_$Impl_$.darker(color,0.3);
	}
	return thx_color__$Rgb_Rgb_$Impl_$.toInt(color);
};
kbe_KeyVisualizer.updateButtonLabel = function(button,mode) {
	var key = button.key;
	var tmp;
	switch(mode._hx_index) {
	case 0:
		tmp = key.name;
		break;
	case 1:
		tmp = "" + StringTools.hex(key.row) + " " + StringTools.hex(key.column);
		break;
	case 2:
		tmp = "" + key.row;
		break;
	case 3:
		tmp = "" + key.column;
		break;
	case 4:
		tmp = "" + key.id;
		break;
	}
	button.set_text(tmp);
};
var kbe__$LayoutPage_ColorMode = $hxEnums["kbe._LayoutPage.ColorMode"] = { __ename__ : "kbe._LayoutPage.ColorMode", __constructs__ : ["Unassigned","MappingPairs"]
	,Unassigned: {_hx_index:0,__enum__:"kbe._LayoutPage.ColorMode",toString:$estr}
	,MappingPairs: {_hx_index:1,__enum__:"kbe._LayoutPage.ColorMode",toString:$estr}
};
var kbe__$LayoutPage_LabelMode = $hxEnums["kbe._LayoutPage.LabelMode"] = { __ename__ : "kbe._LayoutPage.LabelMode", __constructs__ : ["Common","SameAsTop"]
	,Common: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"kbe._LayoutPage.LabelMode",toString:$estr}; },$_.__params__ = ["v"],$_)
	,SameAsTop: {_hx_index:1,__enum__:"kbe._LayoutPage.LabelMode",toString:$estr}
};
var kbe_LayoutPage = function(editor) {
	this.colorMode = kbe__$LayoutPage_ColorMode.Unassigned;
	this.keyboardLabelMode = kbe__$LayoutPage_LabelMode.SameAsTop;
	this.layoutLabelMode = kbe__$LayoutPage_LabelMode.Common(kbe_KeyLabelMode.Name);
	this.disableRecursion = false;
	this.directionDown = true;
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("layoutPage");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	var c2 = new haxe_ui_components_Label();
	c2.set_text("Tools");
	c2.set_styleString("font-size: 20px; horizontal-align: center;");
	c1.addComponent(c2);
	var c3 = new kbe_components_OneWayButton();
	c3.set_id("btnViewOnly");
	c3.set_text("View only");
	c1.addComponent(c3);
	var c4 = new kbe_components_OneWayButton();
	c4.set_id("btnDown");
	c4.set_text("Top to bottom");
	c1.addComponent(c4);
	var c5 = new kbe_components_OneWayButton();
	c5.set_id("btnUp");
	c5.set_text("Bottom to top");
	c1.addComponent(c5);
	var c6 = new haxe_ui_components_CheckBox();
	c6.set_id("btnExclusive");
	c6.set_text("Exclusive mapping");
	c6.set_selected(true);
	c1.addComponent(c6);
	var c7 = new haxe_ui_components_Spacer();
	c1.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_text("Commands");
	c8.set_styleString("font-size: 20px; horizontal-align: center;");
	c1.addComponent(c8);
	var c9 = new haxe_ui_containers_VBox();
	c9.set_styleString("border: 1px solid #555; padding: 2px");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("btnAuto");
	c10.set_percentWidth(100.);
	c10.set_text("Auto connect");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Label();
	c11.set_text("mode:");
	c9.addComponent(c11);
	var c12 = new haxe_ui_components_DropDown();
	c12.set_id("autoConnectMode");
	c12.set_percentWidth(100.);
	c9.addComponent(c12);
	var c13 = new haxe_ui_components_CheckBox();
	c13.set_id("autoConnectUnassigned");
	c13.set_text("Unassigned only");
	c13.set_selected(true);
	c9.addComponent(c13);
	var c14 = new haxe_ui_components_Label();
	c14.set_text("max distance:");
	c9.addComponent(c14);
	var c15 = new haxe_ui_components_NumberStepper();
	c15.set_id("autoConnectLimitStepper");
	c15.set_percentWidth(100.);
	c15.set_precision(2);
	c15.set_pos(0.5);
	c15.set_min(0.01);
	c15.set_max(100);
	c9.addComponent(c15);
	c1.addComponent(c9);
	c0.addComponent(c1);
	var c21 = new haxe_ui_containers_VBox();
	c21.set_percentWidth(100.);
	c21.set_percentHeight(100.);
	var c31 = new haxe_ui_containers_HBox();
	var c41 = new haxe_ui_components_Label();
	c41.set_text("VIEW ");
	c31.addComponent(c41);
	var c51 = new haxe_ui_components_Label();
	c51.set_text("color");
	c31.addComponent(c51);
	var c61 = new haxe_ui_components_DropDown();
	c61.set_id("colorSelection");
	c31.addComponent(c61);
	var c71 = new haxe_ui_components_Label();
	c71.set_text("layout label");
	c31.addComponent(c71);
	var c81 = new haxe_ui_components_DropDown();
	c81.set_id("layoutLabelSelection");
	c81.set_width(150.);
	c31.addComponent(c81);
	var c91 = new haxe_ui_components_Label();
	c91.set_text("keyboard label");
	c31.addComponent(c91);
	var c101 = new haxe_ui_components_DropDown();
	c101.set_id("keyboardLabelSelection");
	c101.set_width(150.);
	c31.addComponent(c101);
	c21.addComponent(c31);
	var c42 = new haxe_ui_containers_HBox();
	var c52 = new haxe_ui_components_DropDown();
	c52.set_id("layoutSelect");
	c52.set_width(200.);
	c52.set_text("");
	c42.addComponent(c52);
	var c62 = new haxe_ui_components_TextField();
	c62.set_id("nameField");
	c42.addComponent(c62);
	var c72 = new haxe_ui_components_CheckBox();
	c72.set_id("synchronizeLayout");
	c72.set_text("synchronize");
	c42.addComponent(c72);
	var c82 = new haxe_ui_components_Button();
	c82.set_id("layoutRemove");
	c82.set_text("Remove");
	c42.addComponent(c82);
	var c92 = new haxe_ui_components_Button();
	c92.set_id("layoutFromThis");
	c92.set_text("New from this");
	c42.addComponent(c92);
	var c102 = new haxe_ui_components_Button();
	c102.set_id("layoutImport");
	c102.set_text("Import");
	c42.addComponent(c102);
	var c111 = new haxe_ui_components_DropDown();
	c111.set_id("importFormat");
	c111.set_width(200.);
	c111.set_text("Import format");
	c42.addComponent(c111);
	c21.addComponent(c42);
	var c53 = new kbe_components_KeyboardContainer();
	c53.set_id("layoutView");
	c53.set_percentWidth(100.);
	c53.set_percentHeight(50.);
	c21.addComponent(c53);
	var c63 = new haxe_ui_containers_HBox();
	var c73 = new haxe_ui_components_Label();
	c73.set_text("Unassigned layout keys: ");
	c63.addComponent(c73);
	var c83 = new haxe_ui_components_Label();
	c83.set_id("unsassignedLayoutKeysLabel");
	c63.addComponent(c83);
	var c93 = new haxe_ui_components_Label();
	c93.set_text("Unassigned keyboard keys: ");
	c63.addComponent(c93);
	var c103 = new haxe_ui_components_Label();
	c103.set_id("unsassignedKeyboardKeysLabel");
	c63.addComponent(c103);
	c21.addComponent(c63);
	var c74 = new kbe_components_KeyboardContainer();
	c74.set_id("keyboardView");
	c74.set_percentWidth(100.);
	c74.set_percentHeight(50.);
	c21.addComponent(c74);
	c0.addComponent(c21);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.unsassignedLayoutKeysLabel = this.findComponent("unsassignedLayoutKeysLabel",haxe_ui_components_Label,true);
	this.unsassignedKeyboardKeysLabel = this.findComponent("unsassignedKeyboardKeysLabel",haxe_ui_components_Label,true);
	this.synchronizeLayout = this.findComponent("synchronizeLayout",haxe_ui_components_CheckBox,true);
	this.nameField = this.findComponent("nameField",haxe_ui_components_TextField,true);
	this.layoutView = this.findComponent("layoutView",kbe_components_KeyboardContainer,true);
	this.layoutSelect = this.findComponent("layoutSelect",haxe_ui_components_DropDown,true);
	this.layoutRemove = this.findComponent("layoutRemove",haxe_ui_components_Button,true);
	this.layoutPage = this.findComponent("layoutPage",haxe_ui_containers_HBox,true);
	this.layoutLabelSelection = this.findComponent("layoutLabelSelection",haxe_ui_components_DropDown,true);
	this.layoutImport = this.findComponent("layoutImport",haxe_ui_components_Button,true);
	this.layoutFromThis = this.findComponent("layoutFromThis",haxe_ui_components_Button,true);
	this.keyboardView = this.findComponent("keyboardView",kbe_components_KeyboardContainer,true);
	this.keyboardLabelSelection = this.findComponent("keyboardLabelSelection",haxe_ui_components_DropDown,true);
	this.importFormat = this.findComponent("importFormat",haxe_ui_components_DropDown,true);
	this.colorSelection = this.findComponent("colorSelection",haxe_ui_components_DropDown,true);
	this.btnViewOnly = this.findComponent("btnViewOnly",kbe_components_OneWayButton,true);
	this.btnUp = this.findComponent("btnUp",kbe_components_OneWayButton,true);
	this.btnExclusive = this.findComponent("btnExclusive",haxe_ui_components_CheckBox,true);
	this.btnDown = this.findComponent("btnDown",kbe_components_OneWayButton,true);
	this.btnAuto = this.findComponent("btnAuto",haxe_ui_components_Button,true);
	this.autoConnectUnassigned = this.findComponent("autoConnectUnassigned",haxe_ui_components_CheckBox,true);
	this.autoConnectMode = this.findComponent("autoConnectMode",haxe_ui_components_DropDown,true);
	this.autoConnectLimitStepper = this.findComponent("autoConnectLimitStepper",haxe_ui_components_NumberStepper,true);
	this.addClass("custom-component");
	this.addClass("layoutpage-component");
	var c = this.findComponent("layoutImport",haxe_ui_core_Component);
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onClickImport));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutImport" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c16 = this.findComponent("btnAuto",haxe_ui_core_Component);
	if(c16 != null) {
		c16.registerEvent("click",$bind(this,this.onAutoConnectClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnAuto" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c17 = this.findComponent("synchronizeLayout",haxe_ui_core_Component);
	if(c17 != null) {
		c17.registerEvent("click",$bind(this,this.onSynchronizeClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "synchronizeLayout" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c18 = this.findComponent("colorSelection",haxe_ui_core_Component);
	if(c18 != null) {
		c18.registerEvent("change",$bind(this,this.colorModeChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "colorSelection" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c19 = this.findComponent("keyboardLabelSelection",haxe_ui_core_Component);
	if(c19 != null) {
		c19.registerEvent("change",$bind(this,this.keyboardLabelSelectionChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "keyboardLabelSelection" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c20 = this.findComponent("layoutLabelSelection",haxe_ui_core_Component);
	if(c20 != null) {
		c20.registerEvent("change",$bind(this,this.layoutLabelSelectionChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutLabelSelection" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c22 = this.findComponent("keyboardView",haxe_ui_core_Component);
	if(c22 != null) {
		c22.registerEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,$bind(this,this.clickDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "keyboardView" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c23 = this.findComponent("layoutView",haxe_ui_core_Component);
	if(c23 != null) {
		c23.registerEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,$bind(this,this.clickUp));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutView" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c24 = this.findComponent("btnViewOnly",haxe_ui_core_Component);
	if(c24 != null) {
		c24.registerEvent("click",$bind(this,this.switchViewMode));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnViewOnly" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c25 = this.findComponent("btnUp",haxe_ui_core_Component);
	if(c25 != null) {
		c25.registerEvent("click",$bind(this,this.switchUp));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnUp" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c26 = this.findComponent("btnDown",haxe_ui_core_Component);
	if(c26 != null) {
		c26.registerEvent("click",$bind(this,this.switchDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnDown" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c27 = this.findComponent("layoutImport",haxe_ui_core_Component);
	if(c27 != null) {
		c27.registerEvent("click",$bind(this,this.layoutFromImported));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutImport" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c28 = this.findComponent("layoutFromThis",haxe_ui_core_Component);
	if(c28 != null) {
		c28.registerEvent("click",$bind(this,this.creatLayoutFromThis));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutFromThis" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c29 = this.findComponent("layoutRemove",haxe_ui_core_Component);
	if(c29 != null) {
		c29.registerEvent("click",$bind(this,this.removeLayout));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutRemove" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c30 = this.findComponent("nameField",haxe_ui_core_Component);
	if(c30 != null) {
		c30.registerEvent("change",$bind(this,this.onNameChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "nameField" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	var c32 = this.findComponent("layoutSelect",haxe_ui_core_Component);
	if(c32 != null) {
		c32.registerEvent("change",$bind(this,this.onLayoutChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "layoutSelect" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.LayoutPage", methodName : "new"});
	}
	if(editor == null) {
		throw new js__$Boot_HaxeError("bad call");
	}
	this.editor = editor;
	this.set_text("Layout");
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.layoutSelect.set_dataSource(new haxe_ui_data_ListDataSource());
	this.btnDown.set_selected(true);
	this.layoutView.formatButton = $bind(this,this.formatLayoutButton);
	this.keyboardView.formatButton = $bind(this,this.formatKeyboardButton);
	this.layoutView.set_selectionMode(kbe_components_SelectionMode.SingleToggle);
	this.keyboardView.set_selectionMode(kbe_components_SelectionMode.SingleToggle);
	var _this = kbe_KeyVisualizer.COMMON_LABEL_MODES;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var data = _this[i];
		result[i] = { value : data.value, mode : kbe__$LayoutPage_LabelMode.Common(data.mode)};
	}
	var labelModes = result;
	this.keyboardLabelSelection.set_dataSource(new haxe_ui_data_ListDataSource());
	this.layoutLabelSelection.set_dataSource(new haxe_ui_data_ListDataSource());
	this.colorSelection.set_dataSource(new haxe_ui_data_ListDataSource());
	this.keyboardLabelSelection.get_dataSource().add({ value : "Same as layout", mode : kbe__$LayoutPage_LabelMode.SameAsTop});
	var _g2 = 0;
	while(_g2 < labelModes.length) {
		var mode = labelModes[_g2];
		++_g2;
		this.layoutLabelSelection.get_dataSource().add(mode);
		this.keyboardLabelSelection.get_dataSource().add(mode);
	}
	var mode1 = { value : "Unassigned", mode : kbe__$LayoutPage_ColorMode.Unassigned};
	this.colorSelection.get_dataSource().add(mode1);
	var mode2 = { value : "Mapping", mode : kbe__$LayoutPage_ColorMode.MappingPairs};
	this.colorSelection.get_dataSource().add(mode2);
	this.autoConnectMode.set_dataSource(new haxe_ui_data_ListDataSource());
	var mode3 = { value : "Name and position", mode : kbe_KeyboarLayoutAutoConnectMode.NamePos};
	this.autoConnectMode.get_dataSource().add(mode3);
	var mode4 = { value : "Name", mode : kbe_KeyboarLayoutAutoConnectMode.NameOnly};
	this.autoConnectMode.get_dataSource().add(mode4);
	var mode5 = { value : "Position", mode : kbe_KeyboarLayoutAutoConnectMode.Position};
	this.autoConnectMode.get_dataSource().add(mode5);
	this.importFormat.set_dataSource(new haxe_ui_data_ListDataSource());
	var _g11 = 0;
	var _g21 = kbe_FormatManager.getImporters();
	while(_g11 < _g21.length) {
		var importer = _g21[_g11];
		++_g11;
		this.importFormat.get_dataSource().add(importer);
	}
};
$hxClasses["kbe.LayoutPage"] = kbe_LayoutPage;
kbe_LayoutPage.__name__ = "kbe.LayoutPage";
kbe_LayoutPage.__interfaces__ = [kbe_EditorPage];
kbe_LayoutPage.__super__ = haxe_ui_containers_HBox;
kbe_LayoutPage.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	editor: null
	,directionDown: null
	,disableRecursion: null
	,layoutLabelMode: null
	,keyboardLabelMode: null
	,colorMode: null
	,init: function(editor) {
		this.editor = editor;
		this.reload();
	}
	,formatLayoutButton: function(button) {
		this.formatLabel(button,this.layoutLabelMode);
		button.set_backgroundColor(null);
		var layout = this.selectedLayout();
		if(layout != null) {
			switch(this.colorMode._hx_index) {
			case 0:
				if(layout.mappingToGrid(button.key.id).length == 0) {
					var color = 16777215;
					if(button.get_selected()) {
						color = thx_color__$Rgb_Rgb_$Impl_$.darker(color,0.20);
					}
					button.set_backgroundColor(thx_color__$Rgb_Rgb_$Impl_$.toInt(color));
				}
				break;
			case 1:
				if(layout.mappingToGrid(button.key.id).length != 0) {
					button.set_backgroundColor(kbe_KeyVisualizer.getIndexedColor(button.key.id,button.get_selected()));
				}
				break;
			}
		}
	}
	,formatKeyboardButton: function(button) {
		this.formatLabel(button,this.keyboardLabelMode);
		button.set_backgroundColor(null);
		var layout = this.selectedLayout();
		if(layout == null) {
			return;
		}
		switch(this.colorMode._hx_index) {
		case 0:
			if(layout.mappingFromGrid(button.key.id) == null) {
				var color = 16777215;
				if(button.get_selected()) {
					color = thx_color__$Rgb_Rgb_$Impl_$.darker(color,0.20);
				}
				button.set_backgroundColor(thx_color__$Rgb_Rgb_$Impl_$.toInt(color));
			}
			break;
		case 1:
			var mapping = layout.mappingFromGrid(button.key.id);
			if(mapping != null) {
				button.set_backgroundColor(kbe_KeyVisualizer.getIndexedColor(mapping,button.get_selected()));
			}
			break;
		}
	}
	,refreshFormat: function() {
		this.layoutView.refreshFormatting();
		this.keyboardView.refreshFormatting();
	}
	,formatLabel: function(button,mode) {
		switch(mode._hx_index) {
		case 0:
			var v = mode.v;
			kbe_KeyVisualizer.updateButtonLabel(button,v);
			break;
		case 1:
			var mode1 = this.layoutLabelMode;
			if(mode1 == kbe__$LayoutPage_LabelMode.SameAsTop) {
				kbe_KeyVisualizer.updateButtonLabel(button,kbe_KeyLabelMode.Name);
			} else {
				this.formatLabel(button,mode1);
			}
			break;
		}
	}
	,selectedLayout: function() {
		var item = this.layoutSelect.get_selectedItem();
		if(item != null) {
			return item.layout;
		}
		return null;
	}
	,selectLayoutByName: function(layout) {
		var ds = this.layoutSelect.get_dataSource();
		if(this.layoutSelect.get_dataSource().get_size() == 0) {
			return;
		}
		var _g = 0;
		var _g1 = ds.get_size();
		while(_g < _g1) {
			var i = _g++;
			var item = ds.get(i);
			if(item.layout.name == layout) {
				this.layoutSelect.set_selectedIndex(i);
				this.onLayoutChanged(null);
				return;
			}
		}
		this.layoutSelect.set_selectedIndex(0);
		this.onLayoutChanged(null);
	}
	,reloadLayouts: function() {
		var previousIndex = this.layoutSelect.get_selectedIndex();
		var ds = this.layoutSelect.get_dataSource();
		ds.clear();
		var _g = 0;
		var _g1 = this.editor.getKeyboard().get_layouts();
		while(_g < _g1.length) {
			var layout = _g1[_g];
			++_g;
			ds.add({ value : layout.name, layout : layout});
		}
		this.layoutSelect.set_selectedIndex(-1);
		this.layoutSelect.set_selectedIndex(previousIndex < 0 || previousIndex >= this.layoutSelect.get_dataSource().get_size() ? 0 : previousIndex);
		this.onLayoutChanged(null);
	}
	,reload: function() {
		this.reloadLayouts();
		this.keyboardView.loadFromList(this.editor.getKeyboard().keys);
		this.refreshFormat();
	}
	,updateStatistics: function() {
		var keyboard = this.editor.getKeyboard();
		var currentLayout = this.selectedLayout();
		if(currentLayout == null) {
			return;
		}
		var unassignedKeyboard = 0;
		var _g = 0;
		var _g1 = keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			if(currentLayout.mappingFromGrid(key.id) == null) {
				++unassignedKeyboard;
			}
		}
		var unassignedLayout = 0;
		var _g2 = 0;
		var _g3 = currentLayout.keys;
		while(_g2 < _g3.length) {
			var key1 = _g3[_g2];
			++_g2;
			if(currentLayout.mappingToGrid(key1.id).length == 0) {
				++unassignedLayout;
			}
		}
		this.unsassignedKeyboardKeysLabel.set_text("" + unassignedKeyboard);
		this.unsassignedLayoutKeysLabel.set_text("" + unassignedLayout);
	}
	,onLayoutChanged: function(_) {
		var layout = this.selectedLayout();
		if(layout == null) {
			this.nameField.set_text("");
		} else {
			this.nameField.set_text(layout.name);
			this.layoutView.loadFromList(layout.keys);
			this.synchronizeLayout.set_selected(layout.synchronised);
			this.btnAuto.set_disabled(layout.synchronised);
			if(layout.synchronised) {
				this.btnViewOnly.set_selected(true);
				this.btnDown.set_selected(false);
				this.btnUp.set_selected(false);
			}
			this.btnUp.set_disabled(layout.synchronised);
			this.btnDown.set_disabled(layout.synchronised);
		}
		this.refreshFormat();
		this.updateStatistics();
	}
	,onNameChanged: function(_) {
		var layout = this.selectedLayout();
		if(layout != null) {
			this.editor.renameLayout(layout,this.nameField.get_text());
		}
		this.reloadLayouts();
	}
	,removeLayout: function(_) {
		var layout = this.selectedLayout();
		if(layout != null) {
			this.editor.removeLayout(this.editor.getKeyboard().getLayoutByName(layout.name));
			this.reloadLayouts();
		}
	}
	,selectLastLayout: function() {
		var i = this.layoutSelect.get_dataSource().get_size() - 1;
		this.layoutSelect.set_selectedIndex(this.layoutSelect.get_dataSource().get_size() - 1);
		this.onLayoutChanged(null);
	}
	,creatLayoutFromThis: function(_) {
		var layout = new kbe_KeyboardLayout();
		layout.synchronised = true;
		this.editor.addLayout(layout);
		this.reloadLayouts();
		this.selectLastLayout();
	}
	,layoutFromImported: function(_) {
	}
	,switchDown: function(_) {
		this.directionDown = true;
		this.btnUp.set_selected(false);
		this.btnViewOnly.set_selected(false);
	}
	,switchUp: function(_) {
		this.directionDown = false;
		this.btnDown.set_selected(false);
		this.btnViewOnly.set_selected(false);
	}
	,switchViewMode: function(_) {
		this.btnDown.set_selected(false);
		this.btnUp.set_selected(false);
	}
	,clickUp: function(e) {
		if(this.disableRecursion) {
			return;
		}
		var layout = this.selectedLayout();
		if(layout == null) {
			return;
		}
		if(this.btnViewOnly.get_selected() || this.directionDown) {
			this.disableRecursion = true;
			var topButton = this.layoutView.get_activeButton();
			this.keyboardView.set_activeButton(null);
			if(topButton != null) {
				var keyboardIds = layout.mappingToGrid(topButton.key.id);
				var _g_head = this.keyboardView.buttons.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var key = val;
					if(keyboardIds.indexOf(key.key.id) > -1) {
						this.keyboardView.selectButton(key,kbe_components_SelectionCommand.Add);
					}
				}
			}
			this.disableRecursion = false;
		} else if(!e.software && !layout.synchronised) {
			var keyboardButton = this.keyboardView.get_activeButton();
			var layoutButton = this.layoutView.get_activeButton();
			var keyboardId = -1;
			if(keyboardButton != null) {
				keyboardId = keyboardButton.key.id;
			}
			var layoutId = -1;
			if(layoutButton != null) {
				layoutId = layoutButton.key.id;
			}
			if(this.btnExclusive.get_selected()) {
				this.editor.addLayoutMappingFromLayoutExclusive(layout,keyboardId,layoutId);
			} else {
				this.editor.addLayoutMapping(layout,keyboardId,layoutId);
			}
			this.updateStatistics();
		}
		this.refreshFormat();
	}
	,clickDown: function(e) {
		if(this.disableRecursion) {
			return;
		}
		var layout = this.selectedLayout();
		if(layout == null) {
			return;
		}
		if(this.btnViewOnly.get_selected() || !this.directionDown) {
			this.disableRecursion = true;
			var keyboardKey = this.keyboardView.get_activeButton();
			this.layoutView.set_activeButton(null);
			if(keyboardKey != null) {
				var id = layout.mappingFromGrid(keyboardKey.key.id);
				if(id != null) {
					var _g_head = this.layoutView.buttons.h;
					while(_g_head != null) {
						var val = _g_head.item;
						_g_head = _g_head.next;
						var button = val;
						if(button.key.id == id) {
							this.layoutView.set_activeButton(button);
						}
					}
				}
			}
			this.disableRecursion = false;
		} else if(!e.software && !layout.synchronised) {
			var keyboardButton = this.keyboardView.get_activeButton();
			var layoutButton = this.layoutView.get_activeButton();
			var keyboardId = -1;
			if(keyboardButton != null) {
				keyboardId = keyboardButton.key.id;
			}
			var layoutId = -1;
			if(layoutButton != null) {
				layoutId = layoutButton.key.id;
			}
			if(this.btnExclusive.get_selected()) {
				this.editor.addLayoutMappingFromLayoutExclusive(layout,keyboardId,layoutId);
			} else {
				this.editor.addLayoutMapping(layout,keyboardId,layoutId);
			}
			this.updateStatistics();
		}
		this.refreshFormat();
	}
	,layoutLabelSelectionChanged: function(_) {
		var modeData = this.layoutLabelSelection.get_selectedItem();
		if(modeData != null) {
			this.layoutLabelMode = modeData.mode;
		}
		this.layoutView.refreshFormatting();
		if(this.keyboardLabelMode == kbe__$LayoutPage_LabelMode.SameAsTop) {
			this.keyboardView.refreshFormatting();
		}
	}
	,keyboardLabelSelectionChanged: function(_) {
		var modeData = this.keyboardLabelSelection.get_selectedItem();
		if(modeData != null) {
			this.keyboardLabelMode = modeData.mode;
		}
		this.keyboardView.refreshFormatting();
	}
	,colorModeChanged: function(_) {
		var modeData = this.colorSelection.get_selectedItem();
		if(modeData != null) {
			this.colorMode = modeData.mode;
		}
		this.keyboardView.refreshFormatting();
		this.layoutView.refreshFormatting();
	}
	,onSynchronizeClicked: function(_) {
		var currentLayout = this.selectedLayout();
		if(currentLayout == null) {
			return;
		}
		var layout = currentLayout.clone();
		layout.synchronised = !layout.synchronised;
		this.editor.updateLayout(layout.name,layout);
		this.reload();
	}
	,onAutoConnectClicked: function(_) {
		var currentLayout = this.selectedLayout();
		if(currentLayout == null) {
			return;
		}
		var layout = currentLayout.clone();
		if(layout.synchronised) {
			return;
		}
		var keyboard = this.editor.getKeyboard();
		var mode = this.autoConnectMode.get_selectedItem().mode;
		layout.autoConnectInMode(keyboard,mode,this.autoConnectUnassigned.get_selected(),this.autoConnectLimitStepper.get_pos());
		this.editor.updateLayout(layout.name,layout);
		this.reload();
	}
	,handleImportLayoutFile: function(bytes,names) {
		var importer = this.importFormat.get_selectedItem();
		if(importer == null) {
			haxe_ui_Toolkit.messageBox("Format not selected",null,"haxeui-core/styles/default/dialogs/exclamation.png");
			return;
		}
		try {
			var result = importer.convert(bytes[0],names[0]);
			var layouts = result.get_layouts();
			var hasSynchronised = false;
			var count = 0;
			var _g = 0;
			while(_g < layouts.length) {
				var layout = layouts[_g];
				++_g;
				if(layout.synchronised) {
					hasSynchronised = true;
				}
				layout.synchronised = false;
				layout.clearMapping();
				this.editor.addLayout(layout);
				++count;
			}
			if(!hasSynchronised) {
				var layout1 = new kbe_KeyboardLayout();
				layout1.setKeys(result.keys,false);
				this.editor.addLayout(layout1);
				++count;
			}
			if(count > 0) {
				this.reloadLayouts();
				this.selectLastLayout();
			}
			haxe_ui_Toolkit.messageBox("Imported " + count + " layouts",null,"haxeui-core/styles/default/dialogs/information.png");
		} catch( e ) {
			haxe_CallStack.lastException = e;
			haxe_ui_Toolkit.messageBox("Import error \"" + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e) + "\"",null,"haxeui-core/styles/default/dialogs/cross-circle.png");
		}
	}
	,onClickImport: function(_) {
		var _gthis = this;
		kbe_FileOpener.tryToOpenFile(function(bytes,names) {
			_gthis.handleImportLayoutFile(bytes,names);
		});
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_LayoutPage();
	}
	,unsassignedLayoutKeysLabel: null
	,unsassignedKeyboardKeysLabel: null
	,synchronizeLayout: null
	,nameField: null
	,layoutView: null
	,layoutSelect: null
	,layoutRemove: null
	,layoutPage: null
	,layoutLabelSelection: null
	,layoutImport: null
	,layoutFromThis: null
	,keyboardView: null
	,keyboardLabelSelection: null
	,importFormat: null
	,colorSelection: null
	,btnViewOnly: null
	,btnUp: null
	,btnExclusive: null
	,btnDown: null
	,btnAuto: null
	,autoConnectUnassigned: null
	,autoConnectMode: null
	,autoConnectLimitStepper: null
	,__class__: kbe_LayoutPage
});
var kbe_ToolType = $hxEnums["kbe.ToolType"] = { __ename__ : "kbe.ToolType", __constructs__ : ["Add","Remove","Move","Select"]
	,Add: {_hx_index:0,__enum__:"kbe.ToolType",toString:$estr}
	,Remove: {_hx_index:1,__enum__:"kbe.ToolType",toString:$estr}
	,Move: {_hx_index:2,__enum__:"kbe.ToolType",toString:$estr}
	,Select: {_hx_index:3,__enum__:"kbe.ToolType",toString:$estr}
};
var kbe_Tool = function(p,editor) {
	this.page = p;
	this.editor = editor;
};
$hxClasses["kbe.Tool"] = kbe_Tool;
kbe_Tool.__name__ = "kbe.Tool";
kbe_Tool.prototype = {
	page: null
	,editor: null
	,activate: function() {
	}
	,deactivate: function() {
	}
	,__class__: kbe_Tool
};
var kbe_MoveTool = function(p,editor) {
	this.buttonToToggle = null;
	this.firstMove = true;
	this.offsets = [];
	this.movableButtons = null;
	kbe_Tool.call(this,p,editor);
};
$hxClasses["kbe.MoveTool"] = kbe_MoveTool;
kbe_MoveTool.__name__ = "kbe.MoveTool";
kbe_MoveTool.__super__ = kbe_Tool;
kbe_MoveTool.prototype = $extend(kbe_Tool.prototype,{
	movableButtons: null
	,offsets: null
	,firstMove: null
	,buttonToToggle: null
	,onMouseDown: function(e) {
		this.buttonToToggle = null;
		if(e.mouseEvent == null) {
			return;
		}
		var container = this.page.cMechanical;
		var button = e.get_button();
		this.buttonToToggle = button;
		if(e.mouseEvent.shiftKey) {
			container.selectButton(button,kbe_components_SelectionCommand.Toggle);
		} else if(container.activeButtons().indexOf(button) >= 0) {
			container.selectButton(button,kbe_components_SelectionCommand.Add);
		} else {
			container.selectButton(button,kbe_components_SelectionCommand.Set);
		}
		this.movableButtons = this.page.cMechanical.activeButtons().slice();
		var p = this.page.cMechanical.screenToField(e.mouseEvent.screenX,e.mouseEvent.screenY);
		var _this = this.movableButtons;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var movableButton = _this[i];
			var p2 = new haxe_ui_geom_Point(movableButton.key.x,movableButton.key.y);
			result[i] = { x : movableButton.key.x - p.x, y : movableButton.key.y - p.y};
		}
		this.offsets = result;
		this.firstMove = true;
	}
	,onMouseUp: function(e) {
		this.movableButtons = null;
	}
	,onButtonClicked: function(e) {
		if(this.buttonToToggle != null && this.page.cMechanical.activeButtons().indexOf(this.buttonToToggle) < 0) {
			this.buttonToToggle.set_selected(false);
			this.buttonToToggle = null;
		}
	}
	,onMouseMove: function(e) {
		if(this.movableButtons == null || !e.buttonDown) {
			return;
		}
		var p = this.page.cMechanical.screenToField(e.screenX,e.screenY);
		var index = 0;
		var ids = [];
		var positions = [];
		var _g = 0;
		var _g1 = this.movableButtons;
		while(_g < _g1.length) {
			var movableButton = _g1[_g];
			++_g;
			ids.push(movableButton.key.id);
			positions.push({ x : p.x + this.offsets[index].x, y : p.y + this.offsets[index].y});
			++index;
		}
		this.editor.moveKeys(ids,positions,!this.firstMove);
		this.firstMove = false;
		var _g2 = 0;
		var _g3 = this.movableButtons;
		while(_g2 < _g3.length) {
			var button = _g3[_g2];
			++_g2;
			this.page.onKeyMove(button);
		}
		this.page.cMechanical.updateLayout();
	}
	,activate: function() {
		this.page.cMechanical.set_selectionMode(kbe_components_SelectionMode.None);
		this.page.cMechanical.registerEvent(kbe_components_KeyboardContainer.BUTTON_DOWN,$bind(this,this.onMouseDown));
		this.page.cMechanical.registerEvent(kbe_components_KeyboardContainer.BUTTON_CLICKED,$bind(this,this.onButtonClicked));
		this.page.cMechanical.registerEvent("mouseup",$bind(this,this.onMouseUp));
		this.page.cMechanical.registerEvent("mousemove",$bind(this,this.onMouseMove));
		this.page.cMechanical.rectangleSelection = true;
	}
	,deactivate: function() {
		this.page.cMechanical.unregisterEvent(kbe_components_KeyboardContainer.BUTTON_DOWN,$bind(this,this.onMouseDown));
		this.page.cMechanical.unregisterEvent(kbe_components_KeyboardContainer.BUTTON_CLICKED,$bind(this,this.onButtonClicked));
		this.page.cMechanical.unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		this.page.cMechanical.unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		this.page.cMechanical.rectangleSelection = false;
	}
	,__class__: kbe_MoveTool
});
var kbe_AddTool = function(p,editor) {
	kbe_MoveTool.call(this,p,editor);
};
$hxClasses["kbe.AddTool"] = kbe_AddTool;
kbe_AddTool.__name__ = "kbe.AddTool";
kbe_AddTool.__super__ = kbe_MoveTool;
kbe_AddTool.prototype = $extend(kbe_MoveTool.prototype,{
	doAdd: function(e) {
		var btn = this.page.addNewButton(true);
		var key = btn.key;
		var field = this.page.cMechanical;
		var p = field.screenToField(e.screenX,e.screenY);
		this.editor.moveKey(key,p.x,p.y,true);
		this.page.onKeyMove(btn);
		return btn;
	}
	,onAdd: function(e) {
		var button = this.doAdd(e);
		this.movableButtons = [button];
		this.offsets = [{ x : 0, y : 0}];
		this.firstMove = false;
	}
	,activate: function() {
		this.page.cMechanical.set_selectionMode(kbe_components_SelectionMode.SingleSet);
		this.page.cMechanical.registerEvent("mousedown",$bind(this,this.onAdd));
		this.page.cMechanical.registerEvent("mouseup",$bind(this,this.onMouseUp));
		this.page.cMechanical.registerEvent("mousemove",$bind(this,this.onMouseMove));
	}
	,deactivate: function() {
		this.page.cMechanical.unregisterEvent("mousedown",$bind(this,this.onAdd));
		this.page.cMechanical.unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		this.page.cMechanical.unregisterEvent("mouseup",$bind(this,this.onMouseMove));
	}
	,__class__: kbe_AddTool
});
var kbe_RemoveTool = function(p,editor) {
	kbe_Tool.call(this,p,editor);
};
$hxClasses["kbe.RemoveTool"] = kbe_RemoveTool;
kbe_RemoveTool.__name__ = "kbe.RemoveTool";
kbe_RemoveTool.__super__ = kbe_Tool;
kbe_RemoveTool.prototype = $extend(kbe_Tool.prototype,{
	buttonClicked: function(e) {
		this.page.eraseButton(e.get_button());
	}
	,activate: function() {
		this.page.cMechanical.set_selectionMode(kbe_components_SelectionMode.SingleSet);
		this.page.cMechanical.registerEvent(kbe_components_KeyboardContainer.BUTTON_CLICKED,$bind(this,this.buttonClicked));
	}
	,deactivate: function() {
		this.page.cMechanical.unregisterEvent(kbe_components_KeyboardContainer.BUTTON_CLICKED,$bind(this,this.buttonClicked));
	}
	,__class__: kbe_RemoveTool
});
var kbe_SelectTool = function(p,editor) {
	kbe_Tool.call(this,p,editor);
};
$hxClasses["kbe.SelectTool"] = kbe_SelectTool;
kbe_SelectTool.__name__ = "kbe.SelectTool";
kbe_SelectTool.__super__ = kbe_Tool;
kbe_SelectTool.prototype = $extend(kbe_Tool.prototype,{
	activate: function() {
		this.page.cMechanical.set_selectionMode(kbe_components_SelectionMode.MultiSelect);
		this.page.cMechanical.rectangleSelection = true;
	}
	,deactivate: function() {
		this.page.cMechanical.rectangleSelection = false;
	}
	,__class__: kbe_SelectTool
});
var kbe_MechanicalPage = function(editor) {
	this.currentToolBtn = null;
	this.currentTool = null;
	this.toolButtons = new haxe_ds_EnumValueMap();
	this.tools = new haxe_ds_EnumValueMap();
	this.tool = kbe_ToolType.Select;
	var _gthis = this;
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("pageMechanical");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_text("Mechanical");
	var c1 = new haxe_ui_containers_VBox();
	var c2 = new kbe_components_OneWayButton();
	c2.set_id("bAdd");
	c2.set_text("Add");
	c1.addComponent(c2);
	var c3 = new kbe_components_OneWayButton();
	c3.set_id("bRemove");
	c3.set_text("Remove");
	c1.addComponent(c3);
	var c4 = new kbe_components_OneWayButton();
	c4.set_id("bMove");
	c4.set_text("Move");
	c1.addComponent(c4);
	var c5 = new kbe_components_OneWayButton();
	c5.set_id("bSelect");
	c5.set_text("Select");
	c1.addComponent(c5);
	var c6 = new haxe_ui_components_Spacer();
	c1.addComponent(c6);
	var c7 = new haxe_ui_components_CheckBox();
	c7.set_id("bAlign");
	c7.set_text("Alignment");
	c7.set_selected(true);
	c1.addComponent(c7);
	var c8 = new kbe_components_FloatEditor();
	c8.set_id("alignStep");
	c8.set_percentWidth(100.);
	c8.set_value(0.25);
	c8.step = 0.05;
	c8.minimum = 0.05;
	c8.maximum = 10;
	c8.floatRound = true;
	c1.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("bAddRight");
	c9.set_text("AddRight");
	c1.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("bAddDown");
	c10.set_text("AddDown");
	c1.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("bAlignX");
	c11.set_text("Align X");
	c1.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("bAlignY");
	c12.set_text("Align Y");
	c1.addComponent(c12);
	c0.addComponent(c1);
	var c21 = new kbe_components_KeyboardContainer();
	c21.set_id("cMechanical");
	c0.addComponent(c21);
	var c31 = new kbe_components_properties_PropertyEditor();
	c31.set_id("propEditor");
	c31.set_width(200.);
	c31.set_percentHeight(100.);
	var c41 = new haxe_ui_containers_VBox();
	c41.set_text("General");
	var c51 = new kbe_components_properties_PropertyItem();
	c51.set_id("p_id");
	c51.set_text("Id");
	var c61 = new kbe_components_IntegerEditor();
	c61.minimum = 0;
	c61.maximum = 1000;
	c51.addComponent(c61);
	c41.addComponent(c51);
	var c62 = new kbe_components_properties_PropertyText();
	c62.set_id("p_name");
	c62.set_text("Name");
	c41.addComponent(c62);
	c31.addComponent(c41);
	var c52 = new haxe_ui_containers_VBox();
	c52.set_text("Position");
	var c63 = new kbe_components_properties_PropertyItem();
	c63.set_id("p_x");
	c63.set_text("X");
	var c71 = new kbe_components_FloatEditor();
	c71.step = 0.001;
	c71.maximum = 1000;
	c71.floatRound = true;
	c63.addComponent(c71);
	c52.addComponent(c63);
	var c72 = new kbe_components_properties_PropertyItem();
	c72.set_id("p_y");
	c72.set_text("Y");
	var c81 = new kbe_components_FloatEditor();
	c81.step = 0.001;
	c81.maximum = 1000;
	c81.floatRound = true;
	c72.addComponent(c81);
	c52.addComponent(c72);
	var c82 = new kbe_components_properties_PropertyItem();
	c82.set_id("p_width");
	c82.set_text("width");
	var c91 = new kbe_components_FloatEditor();
	c91.step = 0.25;
	c91.minimum = 0.5;
	c91.maximum = 1000;
	c91.floatRound = true;
	c82.addComponent(c91);
	c52.addComponent(c82);
	var c92 = new kbe_components_properties_PropertyItem();
	c92.set_id("p_height");
	c92.set_text("height");
	var c101 = new kbe_components_FloatEditor();
	c101.step = 0.25;
	c101.minimum = 0.5;
	c101.maximum = 1000;
	c101.floatRound = true;
	c92.addComponent(c101);
	c52.addComponent(c92);
	c31.addComponent(c52);
	var c64 = new haxe_ui_containers_VBox();
	c64.set_text("Electrical");
	var c73 = new kbe_components_properties_PropertyItem();
	c73.set_id("p_row");
	c73.set_text("row");
	var c83 = new kbe_components_IntegerEditor();
	c83.maximum = 1000;
	c73.addComponent(c83);
	c64.addComponent(c73);
	var c84 = new kbe_components_properties_PropertyItem();
	c84.set_id("p_column");
	c84.set_text("column");
	var c93 = new kbe_components_IntegerEditor();
	c93.maximum = 1000;
	c84.addComponent(c93);
	c64.addComponent(c84);
	c31.addComponent(c64);
	c0.addComponent(c31);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.propEditor = this.findComponent("propEditor",kbe_components_properties_PropertyEditor,true);
	this.pageMechanical = this.findComponent("pageMechanical",haxe_ui_containers_HBox,true);
	this.p_y = this.findComponent("p_y",kbe_components_properties_PropertyItem,true);
	this.p_x = this.findComponent("p_x",kbe_components_properties_PropertyItem,true);
	this.p_width = this.findComponent("p_width",kbe_components_properties_PropertyItem,true);
	this.p_row = this.findComponent("p_row",kbe_components_properties_PropertyItem,true);
	this.p_name = this.findComponent("p_name",kbe_components_properties_PropertyText,true);
	this.p_id = this.findComponent("p_id",kbe_components_properties_PropertyItem,true);
	this.p_height = this.findComponent("p_height",kbe_components_properties_PropertyItem,true);
	this.p_column = this.findComponent("p_column",kbe_components_properties_PropertyItem,true);
	this.cMechanical = this.findComponent("cMechanical",kbe_components_KeyboardContainer,true);
	this.bSelect = this.findComponent("bSelect",kbe_components_OneWayButton,true);
	this.bRemove = this.findComponent("bRemove",kbe_components_OneWayButton,true);
	this.bMove = this.findComponent("bMove",kbe_components_OneWayButton,true);
	this.bAlignY = this.findComponent("bAlignY",haxe_ui_components_Button,true);
	this.bAlignX = this.findComponent("bAlignX",haxe_ui_components_Button,true);
	this.bAlign = this.findComponent("bAlign",haxe_ui_components_CheckBox,true);
	this.bAddRight = this.findComponent("bAddRight",haxe_ui_components_Button,true);
	this.bAddDown = this.findComponent("bAddDown",haxe_ui_components_Button,true);
	this.bAdd = this.findComponent("bAdd",kbe_components_OneWayButton,true);
	this.alignStep = this.findComponent("alignStep",kbe_components_FloatEditor,true);
	this.addClass("custom-component");
	this.addClass("mechanicalpage-component");
	var c = this.findComponent("cMechanical",haxe_ui_core_Component);
	if(c != null) {
		c.registerEvent("keydown",$bind(this,this.onKeyDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "cMechanical" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.MechanicalPage", methodName : "new"});
	}
	var c13 = this.findComponent("bAlignY",haxe_ui_core_Component);
	if(c13 != null) {
		c13.registerEvent("click",$bind(this,this.onAlignYClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "bAlignY" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.MechanicalPage", methodName : "new"});
	}
	var c14 = this.findComponent("bAlignX",haxe_ui_core_Component);
	if(c14 != null) {
		c14.registerEvent("click",$bind(this,this.onAlignXClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "bAlignX" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.MechanicalPage", methodName : "new"});
	}
	if(editor == null) {
		throw new js__$Boot_HaxeError("Bad call");
	}
	this.editor = editor;
	this.cMechanical.registerEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,$bind(this,this.onButtonChange));
	this.propEditor.set_onChange($bind(this,this.onPropertyChange));
	this.bAddRight.set_onClick($bind(this,this.addRight));
	this.bAddDown.set_onClick($bind(this,this.addDown));
	this.bAlign.set_onClick(function(_) {
		editor.alignButtons = _gthis.bAlign.get_selected();
	});
	this.alignStep.set_onChange(function(_1) {
		editor.alignment = _gthis.alignStep.get_value();
	});
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.set_text("Mechanical");
};
$hxClasses["kbe.MechanicalPage"] = kbe_MechanicalPage;
kbe_MechanicalPage.__name__ = "kbe.MechanicalPage";
kbe_MechanicalPage.__interfaces__ = [kbe_EditorPage];
kbe_MechanicalPage.__super__ = haxe_ui_containers_HBox;
kbe_MechanicalPage.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	editor: null
	,tool: null
	,tools: null
	,toolButtons: null
	,currentTool: null
	,currentToolBtn: null
	,init: function(editor) {
		this.editor = editor;
		this.tools = this.createTools();
		this.bindToolButtons();
		this.reload();
	}
	,createTools: function() {
		var _g = new haxe_ds_EnumValueMap();
		_g.set(kbe_ToolType.Add,new kbe_AddTool(this,this.editor));
		_g.set(kbe_ToolType.Remove,new kbe_RemoveTool(this,this.editor));
		_g.set(kbe_ToolType.Move,new kbe_MoveTool(this,this.editor));
		_g.set(kbe_ToolType.Select,new kbe_SelectTool(this,this.editor));
		var result = _g;
		return result;
	}
	,selectTool: function(type) {
		var tool = this.tools.get(type);
		var btn = this.toolButtons.get(type);
		if(tool == null || btn == null) {
			throw new js__$Boot_HaxeError("should not happen");
		}
		if(tool == this.currentTool) {
			return;
		}
		if(this.currentTool != null && this.currentToolBtn != null) {
			this.currentTool.deactivate();
			this.currentToolBtn.set_selected(false);
		}
		this.currentTool = tool;
		this.currentToolBtn = btn;
		this.currentTool.activate();
		btn.set_selected(true);
	}
	,bindToolButtons: function() {
		var _gthis = this;
		var _g = new haxe_ds_EnumValueMap();
		_g.set(kbe_ToolType.Add,js_Boot.__cast(this.bAdd , haxe_ui_components_Button));
		_g.set(kbe_ToolType.Remove,js_Boot.__cast(this.bRemove , haxe_ui_components_Button));
		_g.set(kbe_ToolType.Move,js_Boot.__cast(this.bMove , haxe_ui_components_Button));
		_g.set(kbe_ToolType.Select,this.bSelect);
		this.toolButtons = _g;
		var toolType = this.toolButtons.keys();
		while(toolType.hasNext()) {
			var toolType1 = toolType.next();
			var toolType2 = [toolType1];
			var button = this.toolButtons.get(toolType2[0]);
			if(button == null) {
				throw new js__$Boot_HaxeError("Unexpected tool, should not happen");
			}
			button.set_onClick((function(toolType3) {
				return function(_) {
					_gthis.selectTool(toolType3[0]);
				};
			})(toolType2));
		}
	}
	,onPropertyChange: function(_) {
		if(this.cMechanical.get_activeButton() != null) {
			this.cMechanical.refreshButtonFormatting(this.cMechanical.get_activeButton());
		}
		this.cMechanical.updateLayout();
	}
	,onButtonChange: function(e) {
		this.propEditor.set_source(e.get_button() != null ? e.get_button().key : null);
	}
	,refreshProperties: function() {
		this.propEditor.set_source(this.cMechanical.get_activeButton() == null ? null : this.cMechanical.get_activeButton().key);
	}
	,addNewButton: function(activate) {
		if(activate == null) {
			activate = true;
		}
		var key = this.editor.addNewKey();
		var button = this.addKey(key,activate);
		this.onKeyMove(button);
		return button;
	}
	,addKey: function(key,activate) {
		if(activate == null) {
			activate = true;
		}
		var button = this.cMechanical.addKey(key);
		if(activate) {
			this.cMechanical.set_activeButton(button);
			this.refreshProperties();
		}
		return button;
	}
	,eraseButton: function(btn) {
		if(btn == null) {
			return;
		}
		this.editor.removeKey(btn.key);
		this.cMechanical.removeKey(btn);
	}
	,addRight: function(_) {
		if(this.cMechanical.get_activeButton() == null) {
			return;
		}
		var key = this.editor.addRight(this.cMechanical.get_activeButton().key);
		this.addKey(key);
	}
	,addDown: function(_) {
		if(this.cMechanical.get_activeButton() == null) {
			return;
		}
		var key = this.editor.addDown(this.cMechanical.get_activeButton().key);
		var button = this.addKey(key);
	}
	,onKeyMove: function(key) {
		this.cMechanical.refreshButtonFormatting(key);
		this.refreshProperties();
	}
	,reload: function() {
		this.cMechanical.loadFromList(this.editor.getKeyboard().keys);
	}
	,onAlignXClicked: function(_) {
		var _this = this.cMechanical.activeButtons();
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].key;
		}
		var selection = result;
		if(selection.length > 1) {
			this.editor.alignKeys(this.cMechanical.get_activeButton().key,selection,false);
			this.reload();
		}
	}
	,onAlignYClicked: function(_) {
		var _this = this.cMechanical.activeButtons();
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].key;
		}
		var selection = result;
		if(selection.length > 1) {
			this.editor.alignKeys(this.cMechanical.get_activeButton().key,selection,true);
			this.reload();
		}
	}
	,onKeyDown: function(e) {
		if(e.keyCode == kbe_KC.DELETE) {
			var tmp = this.editor;
			var _this = this.cMechanical.activeButtons();
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i].key;
			}
			tmp.removeKeys(result);
			this.reload();
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_MechanicalPage();
	}
	,propEditor: null
	,pageMechanical: null
	,p_y: null
	,p_x: null
	,p_width: null
	,p_row: null
	,p_name: null
	,p_id: null
	,p_height: null
	,p_column: null
	,cMechanical: null
	,bSelect: null
	,bRemove: null
	,bMove: null
	,bAlignY: null
	,bAlignX: null
	,bAlign: null
	,bAddRight: null
	,bAddDown: null
	,bAdd: null
	,alignStep: null
	,__class__: kbe_MechanicalPage
});
var kbe_OrderedMap = function(compareFunc) {
	haxe_ds_BalancedTree.call(this);
	this.compareFunc = compareFunc;
};
$hxClasses["kbe.OrderedMap"] = kbe_OrderedMap;
kbe_OrderedMap.__name__ = "kbe.OrderedMap";
kbe_OrderedMap.__super__ = haxe_ds_BalancedTree;
kbe_OrderedMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compareFunc: null
	,compare: function(k1,k2) {
		return this.compareFunc(k1,k2);
	}
	,__class__: kbe_OrderedMap
});
var kbe_QMKInfoJsonImporter = function() {
	this.value = "QMK info.json importer";
};
$hxClasses["kbe.QMKInfoJsonImporter"] = kbe_QMKInfoJsonImporter;
kbe_QMKInfoJsonImporter.__name__ = "kbe.QMKInfoJsonImporter";
kbe_QMKInfoJsonImporter.__interfaces__ = [kbe_Importer];
kbe_QMKInfoJsonImporter.prototype = {
	value: null
	,chooseMainLayout: function(layouts) {
		if(layouts.length > 0) {
			return layouts[0];
		}
		return null;
	}
	,parseKeys: function(data) {
		var result = [];
		var id = 1;
		var _g = 0;
		while(_g < data.length) {
			var keyDescription = data[_g];
			++_g;
			var properties = keyDescription;
			var key = new kbe_Key(id);
			++id;
			var access = properties;
			var _g_access = access;
			var _g_keys = Reflect.fields(access);
			var _g_index = 0;
			while(_g_index < _g_keys.length) {
				var key1 = _g_keys[_g_index++];
				var _g1 = { value : _g_access[key1], key : key1};
				var name = _g1.key;
				var value = _g1.value;
				switch(name) {
				case "h":
					key.height = value;
					break;
				case "label":
					key.name = value;
					break;
				case "w":
					key.width = value;
					break;
				case "x":
					key.x = value;
					break;
				case "y":
					key.y = value;
					break;
				}
			}
			result.push(key);
		}
		return result;
	}
	,convert: function(bytes,name) {
		var keyboard = new kbe_KeyBoard();
		var json = JSON.parse(bytes.toString());
		var layoutResults = [];
		var access = json;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key = _g_keys[_g_index++];
			var _g1 = { value : _g_access[key], key : key};
			var key1 = _g1.key;
			var value = _g1.value;
			if(key1 == "layouts") {
				var layouts = value;
				var access1 = layouts;
				var _g2_access = access1;
				var _g2_keys = Reflect.fields(access1);
				var _g2_index = 0;
				while(_g2_index < _g2_keys.length) {
					var key2 = _g2_keys[_g2_index++];
					var _g3 = { value : _g2_access[key2], key : key2};
					var name1 = _g3.key;
					var lprop = _g3.value;
					var layout = new kbe_KeyboardLayout();
					layout.name = name1;
					var layoutProperties = lprop;
					var access2 = layoutProperties;
					var _g4_access = access2;
					var _g4_keys = Reflect.fields(access2);
					var _g4_index = 0;
					while(_g4_index < _g4_keys.length) {
						var key3 = _g4_keys[_g4_index++];
						var _g5 = { value : _g4_access[key3], key : key3};
						var propertyName = _g5.key;
						var propertyValue = _g5.value;
						if(propertyName == "layout") {
							layout.keys = this.parseKeys(propertyValue);
						} else {
							haxe_Log.trace("layout property " + propertyName + " ignored",{ fileName : "src/kbe/QMKInfoJson.hx", lineNumber : 73, className : "kbe.QMKInfoJsonImporter", methodName : "convert"});
						}
					}
					layoutResults.push(layout);
				}
			} else {
				var _this = keyboard.description;
				var value1 = value == null ? "" : value;
				if(__map_reserved[key1] != null) {
					_this.setReserved(key1,value1);
				} else {
					_this.h[key1] = value1;
				}
			}
		}
		var mainLayout = this.chooseMainLayout(layoutResults);
		if(mainLayout != null) {
			var _g = 0;
			var _g11 = mainLayout.keys;
			while(_g < _g11.length) {
				var key4 = _g11[_g];
				++_g;
				keyboard.addKey(key4.clone());
			}
			mainLayout.synchronised = true;
			mainLayout.clearMapping();
			mainLayout.keys = [];
		}
		var _g2 = 0;
		while(_g2 < layoutResults.length) {
			var layout1 = layoutResults[_g2];
			++_g2;
			if(layout1 != mainLayout) {
				layout1.autoConnectInMode(keyboard,kbe_KeyboarLayoutAutoConnectMode.NamePos,false,3.0);
			}
			keyboard.addLayout(layout1);
		}
		return keyboard;
	}
	,__class__: kbe_QMKInfoJsonImporter
};
var kbe_TKBEImporter = function() {
	this.value = "this KBE JSON importer [WIP]";
};
$hxClasses["kbe.TKBEImporter"] = kbe_TKBEImporter;
kbe_TKBEImporter.__name__ = "kbe.TKBEImporter";
kbe_TKBEImporter.__interfaces__ = [kbe_Importer];
kbe_TKBEImporter.prototype = {
	value: null
	,convertKey: function(input) {
		var id = input["id"];
		if(id == null) {
			throw new js__$Boot_HaxeError("Key id not specified");
		}
		var key = new kbe_Key(id);
		var access = input;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key1 = _g_keys[_g_index++];
			var _g1 = { value : _g_access[key1], key : key1};
			var prop = _g1.key;
			var value = _g1.value;
			switch(prop) {
			case "col":
				key.column = value;
				break;
			case "h":
				key.height = value;
				break;
			case "id":
				break;
			case "name":
				key.name = value;
				break;
			case "row":
				key.row = value;
				break;
			case "w":
				key.width = value;
				break;
			case "x":
				key.x = value;
				break;
			case "y":
				key.y = value;
				break;
			default:
				haxe_Log.trace("Warning unrecognized property " + prop,{ fileName : "src/kbe/TKBEditorFormat.hx", lineNumber : 40, className : "kbe.TKBEImporter", methodName : "convertKey"});
			}
		}
		return key;
	}
	,convertKeys: function(input) {
		var f = $bind(this,this.convertKey);
		var result = new Array(input.length);
		var _g = 0;
		var _g1 = input.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(input[i]);
		}
		return result;
	}
	,convertLayout: function(input) {
		var layout = new kbe_KeyboardLayout();
		var access = input;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key = _g_keys[_g_index++];
			var _g1 = { value : _g_access[key], key : key};
			var key1 = _g1.key;
			var value = _g1.value;
			switch(key1) {
			case "keys":
				layout.keys = this.convertKeys(value);
				break;
			case "mapping":
				var data = value;
				var _g2 = 0;
				while(_g2 < data.length) {
					var pair = data[_g2];
					++_g2;
					var keyboardId = pair[0];
					var layoutId = pair[1];
					layout.addMapping(keyboardId,layoutId);
				}
				break;
			case "name":
				layout.name = value;
				break;
			case "synchronised":
				layout.synchronised = value;
				break;
			default:
				haxe_Log.trace("Unrecognized keyboard layout field " + key1,{ fileName : "src/kbe/TKBEditorFormat.hx", lineNumber : 69, className : "kbe.TKBEImporter", methodName : "convertLayout"});
			}
		}
		return layout;
	}
	,convertWireMapping: function(input) {
		var result = new kbe_WireMapping();
		var columnData = null;
		var access = input;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key = _g_keys[_g_index++];
			var _g1 = { value : _g_access[key], key : key};
			var key1 = _g1.key;
			var value = _g1.value;
			switch(key1) {
			case "hasMatrixRows":
				result.set_hasWireColumn(value);
				break;
			case "matrixRow":
				var values = value;
				var _g2 = 0;
				var _g3 = values.length;
				while(_g2 < _g3) {
					var i = _g2++;
					result.setMatrixRow(i,values[i]);
				}
				break;
			case "properties":
				columnData = value;
				break;
			case "size":
				result.resize(value);
				break;
			default:
				throw new js__$Boot_HaxeError("Unsupported wire mapping property (" + key1 + ")");
			}
		}
		if(columnData != null) {
			var names = result.columnNames.slice();
			var _g = 0;
			while(_g < names.length) {
				var name = names[_g];
				++_g;
				result.removeColumn(name);
			}
			var column = 0;
			var access1 = columnData;
			var _g1_access = access1;
			var _g1_keys = Reflect.fields(access1);
			var _g1_index = 0;
			while(_g1_index < _g1_keys.length) {
				var key2 = _g1_keys[_g1_index++];
				var _g21 = { value : _g1_access[key2], key : key2};
				var name1 = _g21.key;
				var values1 = _g21.value;
				result.addColumn(name1);
				var index = 0;
				var _g31 = 0;
				var _g4 = js_Boot.__cast(values1 , Array);
				while(_g31 < _g4.length) {
					var value1 = _g4[_g31];
					++_g31;
					result.setColumnValue(index,column,value1);
					++index;
				}
				++column;
			}
		}
		return result;
	}
	,convert: function(bytes,name) {
		var keyboard = new kbe_KeyBoard();
		var json = JSON.parse(bytes.toString());
		var access = json;
		var _g_access = access;
		var _g_keys = Reflect.fields(access);
		var _g_index = 0;
		while(_g_index < _g_keys.length) {
			var key = _g_keys[_g_index++];
			var _g1 = { value : _g_access[key], key : key};
			var key1 = _g1.key;
			var value = _g1.value;
			switch(key1) {
			case "columnMapping":
				keyboard.columnMapping = this.convertWireMapping(value);
				break;
			case "description":
				var description = value;
				var access1 = description;
				var _g2_access = access1;
				var _g2_keys = Reflect.fields(access1);
				var _g2_index = 0;
				while(_g2_index < _g2_keys.length) {
					var key2 = _g2_keys[_g2_index++];
					var _g3 = { value : _g2_access[key2], key : key2};
					var key3 = _g3.key;
					var value1 = _g3.value;
					var _this = keyboard.description;
					var value2 = value1 == null ? "" : value1;
					if(__map_reserved[key3] != null) {
						_this.setReserved(key3,value2);
					} else {
						_this.h[key3] = value2;
					}
				}
				break;
			case "keys":
				var _g2 = 0;
				var _g31 = this.convertKeys(value);
				while(_g2 < _g31.length) {
					var key4 = _g31[_g2];
					++_g2;
					keyboard.addKey(key4);
				}
				break;
			case "layouts":
				var layouts = value;
				var _g21 = 0;
				while(_g21 < layouts.length) {
					var layout = layouts[_g21];
					++_g21;
					keyboard.addLayout(this.convertLayout(layout));
				}
				break;
			case "rowMapping":
				keyboard.rowMapping = this.convertWireMapping(value);
				break;
			default:
				throw new js__$Boot_HaxeError("Unexpected property " + key1);
			}
		}
		return keyboard;
	}
	,__class__: kbe_TKBEImporter
};
var kbe_TKBEExporter = function(defaultPrettyPrint) {
	if(defaultPrettyPrint == null) {
		defaultPrettyPrint = true;
	}
	this.prettyPrint = true;
	this.value = "this KBE exporter [WIP]";
};
$hxClasses["kbe.TKBEExporter"] = kbe_TKBEExporter;
kbe_TKBEExporter.__name__ = "kbe.TKBEExporter";
kbe_TKBEExporter.__interfaces__ = [kbe_Exporter];
kbe_TKBEExporter.prototype = {
	value: null
	,prettyPrint: null
	,addArray: function(output,name,input) {
		if(input.length > 0) {
			output[name] = input;
		}
	}
	,exportKey: function(key) {
		var result = { "id" : key.id, "x" : key.x, "y" : key.y, "row" : key.row, "col" : key.column};
		if(key.name != "") {
			result["name"] = key.name;
		}
		if(key.width != 1.0) {
			result["w"] = key.width;
		}
		if(key.height != 1.0) {
			result["h"] = key.height;
		}
		if(key.angle != 0.0) {
			result["angle"] = key.angle;
		}
		return result;
	}
	,exportLayoutKey: function(key) {
		var result = { "id" : key.id, "x" : key.x, "y" : key.y};
		if(key.name != "") {
			result["name"] = key.name;
		}
		if(key.width != 1.0) {
			result["w"] = key.width;
		}
		if(key.height != 1.0) {
			result["h"] = key.height;
		}
		return key;
	}
	,exportLayout: function(layout) {
		var result = { "name" : layout.name};
		if(layout.synchronised) {
			result["synchronised"] = true;
		} else {
			var _this = layout.keys;
			var f = $bind(this,this.exportKey);
			var result1 = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result1[i] = f(_this[i]);
			}
			this.addArray(result,"keys",result1);
			var mapping = [];
			var _g2 = new haxe_iterators_MapKeyValueIterator(layout.getMapping());
			while(_g2.hasNext()) {
				var _g11 = _g2.next();
				var keyboardId = _g11.key;
				var layoutId = _g11.value;
				mapping.push([keyboardId,layoutId]);
			}
			mapping.sort(function(a,b) {
				if(a[0] != b[0]) {
					return a[0] - b[0];
				}
				return a[1] - b[1];
			});
			this.addArray(result,"mapping",mapping);
		}
		return result;
	}
	,convertWireMapping: function(mapping) {
		var size = mapping.get_rows();
		var data = { "hasMatrixRows" : mapping.hasWireColumn, "size" : size};
		if(mapping.hasWireColumn) {
			var _g = [];
			var _g1 = 0;
			var _g2 = size;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(mapping.getMatrixRow(i));
			}
			data["matrixRow"] = _g;
		}
		var columnIndex = 0;
		var columnList = { };
		var _g3 = 0;
		var _g11 = mapping.columnNames;
		while(_g3 < _g11.length) {
			var column = _g11[_g3];
			++_g3;
			var _g4 = [];
			var _g12 = 0;
			var _g21 = size;
			while(_g12 < _g21) {
				var i1 = _g12++;
				_g4.push(mapping.getColumnValue(i1,columnIndex));
			}
			var columnData = _g4;
			var tailSize = 0;
			while(columnData.length > 0) {
				var last = columnData.pop();
				if(last != null && last != "") {
					columnData.push(last);
					break;
				}
			}
			columnList[column] = columnData;
			++columnIndex;
		}
		if(mapping.columnNames.length > 0) {
			data["properties"] = columnList;
		}
		return data;
	}
	,convertWithConfig: function(keyboard,prettyPrint) {
		var data = { };
		var _this = keyboard.keys;
		var f = $bind(this,this.exportKey);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(_this[i]);
		}
		this.addArray(data,"keys",result);
		var this1 = keyboard.get_layouts();
		var f1 = $bind(this,this.exportLayout);
		var length = this1.length;
		var this2 = new Array(length);
		var r = this2;
		var len = length;
		var _g2 = 0;
		var _g11 = len;
		while(_g2 < _g11) {
			var i1 = _g2++;
			var v = f1(this1[i1]);
			r[i1] = v;
		}
		this.addArray(data,"layouts",r.slice(0));
		var _this1 = keyboard.description;
		if(new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys()).hasNext()) {
			data["description"] = keyboard.description;
		}
		data["rowMapping"] = this.convertWireMapping(keyboard.rowMapping);
		data["columnMapping"] = this.convertWireMapping(keyboard.columnMapping);
		return haxe_io_Bytes.ofString(JSON.stringify(data,null,prettyPrint ? " " : null));
	}
	,convert: function(keyboard) {
		return this.convertWithConfig(keyboard,this.prettyPrint);
	}
	,fileName: function() {
		return "keyboard.json";
	}
	,mimeType: function() {
		return "text/json";
	}
	,__class__: kbe_TKBEExporter
};
var kbe_TestExporter = function() {
	this.value = "Dummy exporter";
};
$hxClasses["kbe.TestExporter"] = kbe_TestExporter;
kbe_TestExporter.__name__ = "kbe.TestExporter";
kbe_TestExporter.__interfaces__ = [kbe_Exporter];
kbe_TestExporter.prototype = {
	value: null
	,convert: function(keyboard) {
		var result = new haxe_io_BytesBuffer();
		result.addString("1234");
		return result.getBytes();
	}
	,fileName: function() {
		return "testKeyboard.txt";
	}
	,mimeType: function() {
		return "text/plain";
	}
	,__class__: kbe_TestExporter
};
var kbe_UndoBuffer = function(executor) {
	this.redoActions = [];
	this.actionList = [];
	this.stateList = [];
	this.executor = executor;
};
$hxClasses["kbe.UndoBuffer"] = kbe_UndoBuffer;
kbe_UndoBuffer.__name__ = "kbe.UndoBuffer";
kbe_UndoBuffer.prototype = {
	executor: null
	,stateList: null
	,actionList: null
	,redoActions: null
	,undoCount: null
	,get_undoCount: function() {
		return this.actionList.length;
	}
	,redoCount: null
	,get_redoCount: function() {
		return this.redoActions.length;
	}
	,lastAction: function() {
		if(this.actionList.length > 0) {
			return this.actionList[this.actionList.length - 1];
		}
		return null;
	}
	,pushStateInternal: function(a,redo,merge) {
		if(merge == null) {
			merge = false;
		}
		if(redo == null) {
			redo = false;
		}
		if(!redo) {
			this.redoActions = [];
		}
		if(merge && this.actionList.length > 0) {
			var merged = this.executor.mergeActions(this.actionList[this.actionList.length - 1],a);
			if(merged != null) {
				this.actionList[this.actionList.length - 1] = merged;
				return;
			}
		}
		this.stateList.push(this.executor.get_state().clone());
		this.actionList.push(a);
	}
	,runActionInternal: function(a,redo,merge) {
		if(merge == null) {
			merge = false;
		}
		if(redo == null) {
			redo = false;
		}
		this.pushStateInternal(a,redo,merge);
		return this.executor.applyAction(a);
	}
	,pushState: function(a,tryMerge) {
		if(tryMerge == null) {
			tryMerge = false;
		}
		this.pushStateInternal(a,false,tryMerge);
	}
	,runAction: function(a,tryMerge) {
		if(tryMerge == null) {
			tryMerge = false;
		}
		return this.runActionInternal(a,false,tryMerge);
	}
	,undo: function() {
		if(this.get_undoCount() <= 0) {
			return false;
		}
		this.redoActions.push(this.actionList.pop());
		this.executor.set_state(this.stateList.pop());
		return true;
	}
	,redo: function() {
		var action = this.redoActions.pop();
		if(action != null) {
			this.runActionInternal(action,true);
			return true;
		}
		return false;
	}
	,clear: function() {
		this.redoActions = [];
		this.actionList = [];
		this.stateList = [];
	}
	,__class__: kbe_UndoBuffer
	,__properties__: {get_redoCount:"get_redoCount",get_undoCount:"get_undoCount"}
};
var kbe__$WiringPage_ColorMode = $hxEnums["kbe._WiringPage.ColorMode"] = { __ename__ : "kbe._WiringPage.ColorMode", __constructs__ : ["None","Conflicts","RainbowRows","RainbowColumns"]
	,None: {_hx_index:0,__enum__:"kbe._WiringPage.ColorMode",toString:$estr}
	,Conflicts: {_hx_index:1,__enum__:"kbe._WiringPage.ColorMode",toString:$estr}
	,RainbowRows: {_hx_index:2,__enum__:"kbe._WiringPage.ColorMode",toString:$estr}
	,RainbowColumns: {_hx_index:3,__enum__:"kbe._WiringPage.ColorMode",toString:$estr}
};
var kbe__$WiringPage_NewPropertyDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("Name:");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_TextField();
	c2.set_id("inputField");
	c0.addComponent(c2);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.inputField = this.findComponent("inputField",haxe_ui_components_TextField,true);
	this.addClass("custom-component");
	this.addClass("newpropertydialog-component");
	this.set_title("New property");
	var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("OK").split("|");
	var rarr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("Cancel").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
};
$hxClasses["kbe._WiringPage.NewPropertyDialog"] = kbe__$WiringPage_NewPropertyDialog;
kbe__$WiringPage_NewPropertyDialog.__name__ = "kbe._WiringPage.NewPropertyDialog";
kbe__$WiringPage_NewPropertyDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
kbe__$WiringPage_NewPropertyDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	result: function() {
		return this.inputField.get_text();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe__$WiringPage_NewPropertyDialog();
	}
	,inputField: null
	,__class__: kbe__$WiringPage_NewPropertyDialog
});
var kbe__$WiringPage_DeletePropertyDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("Name:");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_DropDown();
	c2.set_id("propertySelector");
	c2.set_width(200.);
	c0.addComponent(c2);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.propertySelector = this.findComponent("propertySelector",haxe_ui_components_DropDown,true);
	this.addClass("custom-component");
	this.addClass("deletepropertydialog-component");
	this.set_title("Remove property");
	var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("OK").split("|");
	var rarr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("Cancel").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
};
$hxClasses["kbe._WiringPage.DeletePropertyDialog"] = kbe__$WiringPage_DeletePropertyDialog;
kbe__$WiringPage_DeletePropertyDialog.__name__ = "kbe._WiringPage.DeletePropertyDialog";
kbe__$WiringPage_DeletePropertyDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
kbe__$WiringPage_DeletePropertyDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	setProperties: function(properties) {
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		while(_g < properties.length) {
			var property = properties[_g];
			++_g;
			ds.add({ value : property});
		}
		this.propertySelector.set_dataSource(ds);
	}
	,result: function() {
		return this.propertySelector.get_text();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe__$WiringPage_DeletePropertyDialog();
	}
	,propertySelector: null
	,__class__: kbe__$WiringPage_DeletePropertyDialog
});
var kbe_WiringPage = function(editor) {
	this.columns = 0;
	this.rows = 0;
	this.colorMode = kbe__$WiringPage_ColorMode.Conflicts;
	this.selectedBottomButtons = [];
	this.conflictingKeys = new haxe_ds_IntMap();
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_id("pageWiring");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_text("Wiring");
	var c1 = new haxe_ui_containers_VBox();
	var c2 = new haxe_ui_components_Label();
	c2.set_text("Quick set");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_DropDown();
	c3.set_id("quickSetMode");
	var ds3 = new haxe_ui_data_ListDataSource();
	ds3.add({ id : "none", value : "none"});
	ds3.add({ id : "row", value : "row"});
	ds3.add({ id : "column", value : "column"});
	c3.set_dataSource(ds3);
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c21 = new haxe_ui_containers_VBox();
	c21.set_percentHeight(100.);
	var c31 = new haxe_ui_components_CheckBox();
	c31.set_id("checkHasMatrixRows");
	c31.set_width(250.);
	c31.set_text("Separete electric row numbers");
	c21.addComponent(c31);
	var c4 = new haxe_ui_containers_HBox();
	var c5 = new haxe_ui_components_Button();
	c5.set_id("addProperty");
	c5.set_text("Add property");
	c4.addComponent(c5);
	var c6 = new haxe_ui_components_Button();
	c6.set_id("removeProperty");
	c6.set_text("Delete property");
	c4.addComponent(c6);
	c21.addComponent(c4);
	var c51 = new haxe_ui_containers_HBox();
	var c61 = new haxe_ui_components_Button();
	c61.set_id("resizeToKeyboard");
	c61.set_text("Resize to keyboard");
	c51.addComponent(c61);
	c21.addComponent(c51);
	var c62 = new haxe_ui_containers_HBox();
	var c7 = new haxe_ui_components_Label();
	c7.set_text("Rows");
	c7.set_verticalAlign("center");
	c62.addComponent(c7);
	var c8 = new kbe_components_IntegerEditor();
	c8.set_id("rowCountEditor");
	c8.set_width(75.);
	c8.minimum = 0;
	c8.maximum = 1024;
	c62.addComponent(c8);
	c21.addComponent(c62);
	var c71 = new kbe_components_WireMappingTable();
	c71.set_id("rowTable");
	c71.set_percentWidth(100.);
	c71.set_percentHeight(50.);
	c21.addComponent(c71);
	var c81 = new haxe_ui_containers_HBox();
	var c9 = new haxe_ui_components_Label();
	c9.set_text("Columns");
	c9.set_verticalAlign("center");
	c81.addComponent(c9);
	var c10 = new kbe_components_IntegerEditor();
	c10.set_id("columnCountEditor");
	c10.set_width(75.);
	c10.minimum = 0;
	c10.maximum = 1024;
	c81.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("btnSwapWiringRowsColumns");
	c11.set_text("Swap ⇅");
	c81.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("btnSwapKeyRowsProperties");
	c12.set_text("Swap properties");
	c81.addComponent(c12);
	c21.addComponent(c81);
	var c91 = new kbe_components_WireMappingTable();
	c91.set_id("colTable");
	c91.set_percentWidth(100.);
	c91.set_percentHeight(50.);
	c91.set_isRow(false);
	c21.addComponent(c91);
	c0.addComponent(c21);
	var c32 = new haxe_ui_containers_VBox();
	c32.set_percentWidth(100.);
	c32.set_percentHeight(100.);
	var c41 = new haxe_ui_containers_HBox();
	var c52 = new haxe_ui_components_Label();
	c52.set_text("View:");
	c52.set_verticalAlign("center");
	c41.addComponent(c52);
	var c63 = new haxe_ui_components_DropDown();
	c63.set_id("colorSelect");
	c63.set_width(100.);
	c63.set_text("Color");
	c41.addComponent(c63);
	var c72 = new haxe_ui_components_Label();
	c72.set_text("layout label");
	c72.set_verticalAlign("center");
	c41.addComponent(c72);
	var c82 = new haxe_ui_components_DropDown();
	c82.set_id("layoutLabelSelection");
	c82.set_width(150.);
	c41.addComponent(c82);
	var c92 = new haxe_ui_components_CheckBox();
	c92.set_id("flipH");
	c92.set_text("flip horizontally");
	c41.addComponent(c92);
	var c101 = new haxe_ui_components_CheckBox();
	c101.set_id("flipV");
	c101.set_text("flip vertically");
	c41.addComponent(c101);
	c32.addComponent(c41);
	var c53 = new kbe_components_KeyboardContainer();
	c53.set_id("keyView");
	c53.set_percentHeight(50.);
	c32.addComponent(c53);
	var c64 = new haxe_ui_containers_HBox();
	var c73 = new haxe_ui_components_DropDown();
	c73.set_id("gridModeSelection");
	c73.set_width(100.);
	var ds7 = new haxe_ui_data_ListDataSource();
	ds7.add({ id : "item", data : "wiring", value : "Wiring matrix"});
	ds7.add({ id : "item", data : "scan", value : "Scan matrix"});
	c73.set_dataSource(ds7);
	c64.addComponent(c73);
	var c83 = new haxe_ui_components_Label();
	c83.set_text("rows: ");
	c64.addComponent(c83);
	var c93 = new haxe_ui_components_Label();
	c93.set_id("labelRows");
	c93.set_text("");
	c64.addComponent(c93);
	var c102 = new haxe_ui_components_Label();
	c102.set_text("columns: ");
	c64.addComponent(c102);
	var c111 = new haxe_ui_components_Label();
	c111.set_id("labelColumns");
	c111.set_text("");
	c64.addComponent(c111);
	var c121 = new haxe_ui_components_Label();
	c121.set_text("conflicts: ");
	c64.addComponent(c121);
	var c13 = new haxe_ui_components_Label();
	c13.set_id("labelConflicts");
	c13.set_text("N");
	c64.addComponent(c13);
	var c14 = new haxe_ui_components_Label();
	c14.set_id("labelUnassigned");
	c14.set_text("N");
	c64.addComponent(c14);
	c32.addComponent(c64);
	var c74 = new haxe_ui_containers_Grid();
	c74.set_id("matrixGrid");
	c74.set_percentWidth(100.);
	c74.set_percentHeight(50.);
	c32.addComponent(c74);
	c0.addComponent(c32);
	var c42 = new kbe_components_properties_PropertyEditor();
	c42.set_id("propEditor");
	c42.set_width(200.);
	c42.set_percentHeight(100.);
	var c54 = new haxe_ui_containers_VBox();
	c54.set_text("Electrical");
	var c65 = new kbe_components_properties_PropertyItem();
	c65.set_id("p_row");
	c65.set_text("row");
	var c75 = new kbe_components_IntegerEditor();
	c75.set_id("pRowEditor");
	c75.maximum = 1000;
	c65.addComponent(c75);
	c54.addComponent(c65);
	var c76 = new kbe_components_properties_PropertyItem();
	c76.set_id("p_column");
	c76.set_text("column");
	var c84 = new kbe_components_IntegerEditor();
	c84.set_id("pColumnEditor");
	c84.maximum = 1000;
	c76.addComponent(c84);
	c54.addComponent(c76);
	c42.addComponent(c54);
	c0.addComponent(c42);
	c0.bindingRoot = true;
	this.addComponent(c0);
	this.rowTable = this.findComponent("rowTable",kbe_components_WireMappingTable,true);
	this.rowCountEditor = this.findComponent("rowCountEditor",kbe_components_IntegerEditor,true);
	this.resizeToKeyboard = this.findComponent("resizeToKeyboard",haxe_ui_components_Button,true);
	this.removeProperty = this.findComponent("removeProperty",haxe_ui_components_Button,true);
	this.quickSetMode = this.findComponent("quickSetMode",haxe_ui_components_DropDown,true);
	this.propEditor = this.findComponent("propEditor",kbe_components_properties_PropertyEditor,true);
	this.pageWiring = this.findComponent("pageWiring",haxe_ui_containers_HBox,true);
	this.p_row = this.findComponent("p_row",kbe_components_properties_PropertyItem,true);
	this.p_column = this.findComponent("p_column",kbe_components_properties_PropertyItem,true);
	this.pRowEditor = this.findComponent("pRowEditor",kbe_components_IntegerEditor,true);
	this.pColumnEditor = this.findComponent("pColumnEditor",kbe_components_IntegerEditor,true);
	this.matrixGrid = this.findComponent("matrixGrid",haxe_ui_containers_Grid,true);
	this.layoutLabelSelection = this.findComponent("layoutLabelSelection",haxe_ui_components_DropDown,true);
	this.labelUnassigned = this.findComponent("labelUnassigned",haxe_ui_components_Label,true);
	this.labelRows = this.findComponent("labelRows",haxe_ui_components_Label,true);
	this.labelConflicts = this.findComponent("labelConflicts",haxe_ui_components_Label,true);
	this.labelColumns = this.findComponent("labelColumns",haxe_ui_components_Label,true);
	this.keyView = this.findComponent("keyView",kbe_components_KeyboardContainer,true);
	this.gridModeSelection = this.findComponent("gridModeSelection",haxe_ui_components_DropDown,true);
	this.flipV = this.findComponent("flipV",haxe_ui_components_CheckBox,true);
	this.flipH = this.findComponent("flipH",haxe_ui_components_CheckBox,true);
	this.columnCountEditor = this.findComponent("columnCountEditor",kbe_components_IntegerEditor,true);
	this.colorSelect = this.findComponent("colorSelect",haxe_ui_components_DropDown,true);
	this.colTable = this.findComponent("colTable",kbe_components_WireMappingTable,true);
	this.checkHasMatrixRows = this.findComponent("checkHasMatrixRows",haxe_ui_components_CheckBox,true);
	this.btnSwapWiringRowsColumns = this.findComponent("btnSwapWiringRowsColumns",haxe_ui_components_Button,true);
	this.btnSwapKeyRowsProperties = this.findComponent("btnSwapKeyRowsProperties",haxe_ui_components_Button,true);
	this.addProperty = this.findComponent("addProperty",haxe_ui_components_Button,true);
	this.addClass("custom-component");
	this.addClass("wiringpage-component");
	var c = this.findComponent("btnSwapKeyRowsProperties",haxe_ui_core_Component);
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onBtnSwapKeyRowsProperties));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnSwapKeyRowsProperties" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c15 = this.findComponent("btnSwapWiringRowsColumns",haxe_ui_core_Component);
	if(c15 != null) {
		c15.registerEvent("click",$bind(this,this.onBtnSwapWiringRowsColumns));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "btnSwapWiringRowsColumns" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c16 = this.findComponent("colTable",haxe_ui_core_Component);
	if(c16 != null) {
		c16.registerEvent("change",$bind(this,this.onColumnSelectionChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "colTable" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c17 = this.findComponent("rowTable",haxe_ui_core_Component);
	if(c17 != null) {
		c17.registerEvent("change",$bind(this,this.onRowSelectionChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "rowTable" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c18 = this.findComponent("resizeToKeyboard",haxe_ui_core_Component);
	if(c18 != null) {
		c18.registerEvent("click",$bind(this,this.onResizeToKeyboard));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "resizeToKeyboard" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c19 = this.findComponent("flipV",haxe_ui_core_Component);
	if(c19 != null) {
		c19.registerEvent("change",$bind(this,this.flipVChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "flipV" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c20 = this.findComponent("flipH",haxe_ui_core_Component);
	if(c20 != null) {
		c20.registerEvent("change",$bind(this,this.flipHChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "flipH" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c22 = this.findComponent("removeProperty",haxe_ui_core_Component);
	if(c22 != null) {
		c22.registerEvent("click",$bind(this,this.onDeletePropertyClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "removeProperty" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c23 = this.findComponent("addProperty",haxe_ui_core_Component);
	if(c23 != null) {
		c23.registerEvent("click",$bind(this,this.onAddPropertyClicked));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addProperty" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c24 = this.findComponent("colTable",haxe_ui_core_Component);
	if(c24 != null) {
		c24.registerEvent("itemComponentEvent",$bind(this,this.onColItemEvent));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "colTable" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c25 = this.findComponent("rowTable",haxe_ui_core_Component);
	if(c25 != null) {
		c25.registerEvent("itemComponentEvent",$bind(this,this.onRowItemEvent));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "rowTable" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c26 = this.findComponent("columnCountEditor",haxe_ui_core_Component);
	if(c26 != null) {
		c26.registerEvent("change",$bind(this,this.onChangeColumnCount));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "columnCountEditor" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c27 = this.findComponent("rowCountEditor",haxe_ui_core_Component);
	if(c27 != null) {
		c27.registerEvent("change",$bind(this,this.onChangeRowCount));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "rowCountEditor" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c28 = this.findComponent("checkHasMatrixRows",haxe_ui_core_Component);
	if(c28 != null) {
		c28.registerEvent("change",$bind(this,this.hasMatrixRowsChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "checkHasMatrixRows" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c29 = this.findComponent("keyView",haxe_ui_core_Component);
	if(c29 != null) {
		c29.registerEvent("keyup",$bind(this,this.onTopKeyDownU));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "keyView" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	var c30 = this.findComponent("colorSelect",haxe_ui_core_Component);
	if(c30 != null) {
		c30.registerEvent("change",$bind(this,this.onLayoutChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "colorSelect" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 243, className : "kbe.WiringPage", methodName : "new"});
	}
	if(editor == null) {
		throw new js__$Boot_HaxeError("can't call without editor");
	}
	this.editor = editor;
	this.keyboard = editor.getKeyboard();
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.set_text("Wiring");
	this.keyView.registerEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,$bind(this,this.onButtonChange));
	this.propEditor.set_onChange($bind(this,this.onPropertyChange));
	this.keyView.formatButton = $bind(this,this.formatButton);
	this.keyView.set_selectionMode(kbe_components_SelectionMode.MultiSelect);
	this.keyView.rectangleSelection = true;
	var ds = this.colorSelect.set_dataSource(new haxe_ui_data_ListDataSource());
	ds.add({ value : "conflicts", mode : kbe__$WiringPage_ColorMode.Conflicts});
	ds.add({ value : "none", mode : kbe__$WiringPage_ColorMode.None});
	ds.add({ value : "rows", mode : kbe__$WiringPage_ColorMode.RainbowRows});
	ds.add({ value : "columns", mode : kbe__$WiringPage_ColorMode.RainbowColumns});
};
$hxClasses["kbe.WiringPage"] = kbe_WiringPage;
kbe_WiringPage.__name__ = "kbe.WiringPage";
kbe_WiringPage.__interfaces__ = [kbe_EditorPage];
kbe_WiringPage.__super__ = haxe_ui_containers_HBox;
kbe_WiringPage.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	keyboard: null
	,editor: null
	,conflictingKeys: null
	,selectedBottomButtons: null
	,colorMode: null
	,rows: null
	,columns: null
	,init: function(editor) {
		this.editor = editor;
		this.reload();
	}
	,onLayoutChanged: function(_) {
		var modeData = this.colorSelect.get_selectedItem();
		if(modeData != null) {
			this.colorMode = modeData.mode;
		} else {
			this.colorMode = kbe__$WiringPage_ColorMode.Conflicts;
		}
		this.refreshFormatting();
	}
	,formatButton: function(button) {
		var key = button.key;
		button.set_text("" + StringTools.hex(key.row) + " " + StringTools.hex(key.column));
		button.set_backgroundColor(null);
		if(this.colorMode == kbe__$WiringPage_ColorMode.Conflicts) {
			var currentButton = this.keyView.get_activeButton();
			if(currentButton != button) {
				var row = currentButton != null ? currentButton.key.row : -1;
				var column = currentButton != null ? currentButton.key.column : -1;
				var color = null;
				if(!button.get_selected()) {
					if(key.row == row) {
						color = 14745056;
					} else if(column == key.column) {
						color = 14737661;
					}
				}
				if(this.conflictingKeys.h.hasOwnProperty(key.id)) {
					color = 16763904;
				}
				if(key.row == row && column == key.column && button != this.keyView.get_activeButton()) {
					color = 16737894;
				}
				if(color != null) {
					if(button.get_selected()) {
						color = thx_color__$Rgb_Rgb_$Impl_$.darker(color,0.2);
					}
					button.set_backgroundColor(thx_color__$Rgb_Rgb_$Impl_$.toInt(color));
				}
			}
		} else if(this.colorMode == kbe__$WiringPage_ColorMode.RainbowRows) {
			button.set_backgroundColor(kbe_KeyVisualizer.getIndexedColor(button.key.row,button.get_selected()));
		} else if(this.colorMode == kbe__$WiringPage_ColorMode.RainbowColumns) {
			button.set_backgroundColor(kbe_KeyVisualizer.getIndexedColor(button.key.column,button.get_selected()));
		}
	}
	,getMatrixButton: function(x,y) {
		var component = this.matrixGrid.getComponentAt(x + y * this.columns);
		return component;
	}
	,refreshFormatting: function() {
		this.conflictingKeys.h = { };
		var badKeys = this.editor.getConflictingWiring();
		this.labelConflicts.set_text("" + badKeys.length);
		var _g = 0;
		while(_g < badKeys.length) {
			var key = badKeys[_g];
			++_g;
			this.conflictingKeys.h[key.id] = 0;
		}
		this.keyView.refreshFormatting();
		var uniqueUsed = 0;
		var _g1 = 0;
		var _g2 = this.rows;
		while(_g1 < _g2) {
			var y = _g1++;
			var _g11 = 0;
			var _g21 = this.columns;
			while(_g11 < _g21) {
				var x = _g11++;
				var component = this.matrixGrid.getComponentAt(x + y * this.columns);
				var button = component;
				if(button != null) {
					button.set_backgroundColor(16777215);
				}
			}
		}
		if(badKeys.length > 0) {
			this.labelUnassigned.set_text("");
		} else {
			this.labelUnassigned.set_text("unassigned: " + (this.rows * this.columns - this.keyboard.keys.length));
		}
		var _g3 = 0;
		var _g4 = this.keyboard.keys;
		while(_g3 < _g4.length) {
			var key1 = _g4[_g3];
			++_g3;
			var component1 = this.matrixGrid.getComponentAt(key1.column + key1.row * this.columns);
			var button1 = component1;
			if(button1 != null) {
				button1.set_backgroundColor(null);
			}
		}
		var _g5 = 0;
		while(_g5 < badKeys.length) {
			var key2 = badKeys[_g5];
			++_g5;
			var component2 = this.matrixGrid.getComponentAt(key2.column + key2.row * this.columns);
			var button2 = component2;
			if(button2 != null) {
				button2.set_backgroundColor(16737894);
				if(button2.get_selected()) {
					button2.set_backgroundColor(13653590);
				}
			}
		}
	}
	,onPropertyChange: function(_) {
		var data = this.propEditor.source;
		var ids = [];
		var properties = [];
		var activeButtons = this.keyView.activeButtons();
		if(activeButtons.length == 0 || data.row == null && data.column == null) {
			return;
		}
		var _g = 0;
		while(_g < activeButtons.length) {
			var button = activeButtons[_g];
			++_g;
			ids.push(button.key.id);
			var buttonProp = new haxe_ds_StringMap();
			if(data.row != null) {
				var value = data.row;
				if(__map_reserved["row"] != null) {
					buttonProp.setReserved("row",value);
				} else {
					buttonProp.h["row"] = value;
				}
			}
			if(data.column != null) {
				var value1 = data.column;
				if(__map_reserved["column"] != null) {
					buttonProp.setReserved("column",value1);
				} else {
					buttonProp.h["column"] = value1;
				}
			}
			properties.push(buttonProp);
		}
		this.editor.modifyKeys(ids,properties);
		this.resizeMatrix();
		this.syncBottomSelection();
		this.refreshFormatting();
	}
	,syncBottomSelection: function() {
		var _g = 0;
		var _g1 = this.selectedBottomButtons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.set_selected(false);
		}
		this.selectedBottomButtons = [];
		var _g2 = 0;
		var _g3 = this.keyView.activeButtons();
		while(_g2 < _g3.length) {
			var button1 = _g3[_g2];
			++_g2;
			var component = this.matrixGrid.getComponentAt(button1.key.column + button1.key.row * this.columns);
			var bottomButton = component;
			if(bottomButton != null) {
				this.selectedBottomButtons.push(bottomButton);
				bottomButton.set_selected(true);
			}
		}
	}
	,getTopSelectionRowColumn: function() {
		var value = { row : null, column : null};
		var activeButtons = this.keyView.activeButtons();
		if(activeButtons.length == 0) {
			return value;
		}
		value.row = activeButtons[0].key.row;
		value.column = activeButtons[0].key.column;
		var _g = 0;
		while(_g < activeButtons.length) {
			var button = activeButtons[_g];
			++_g;
			var key = button.key;
			if(key.row != value.row) {
				value.row = null;
			}
			if(key.column != value.column) {
				value.column = null;
			}
		}
		return value;
	}
	,onButtonChange: function(e) {
		this.propEditor.set_source(this.getTopSelectionRowColumn());
		this.syncBottomSelection();
		this.refreshFormatting();
	}
	,refreshProperties: function() {
		this.propEditor.set_source(this.keyView.get_activeButton() == null ? null : this.keyView.get_activeButton().key);
	}
	,selectTopButton: function(x,y) {
		var _g = 0;
		var _g1 = this.keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			if(key.row == y && key.column == x) {
				this.keyView.set_activeButton(this.keyView.getButton(key));
				return;
			}
		}
		this.keyView.set_activeButton(null);
	}
	,selectBottomButton: function(button) {
		var _g = 0;
		var _g1 = this.selectedBottomButtons;
		while(_g < _g1.length) {
			var button1 = _g1[_g];
			++_g;
			button1.set_selected(false);
		}
		this.selectedBottomButtons = [button];
		button.set_selected(true);
	}
	,resizeMatrix: function() {
		var _gthis = this;
		var columnsNeed = 1;
		var rowsNeed = 0;
		var _g = 0;
		var _g1 = this.keyboard.keys;
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			if(key.column + 1 > columnsNeed) {
				columnsNeed = key.column + 1;
			}
			if(key.row + 1 > rowsNeed) {
				rowsNeed = key.row + 1;
			}
		}
		if(columnsNeed == this.columns && rowsNeed == this.rows) {
			return;
		}
		this.rows = rowsNeed;
		this.columns = columnsNeed;
		this.labelRows.set_text("" + this.rows);
		this.labelColumns.set_text("" + this.columns);
		this.matrixGrid.set_columns(columnsNeed);
		this.matrixGrid.removeAllComponents();
		var _g2 = 0;
		var _g3 = rowsNeed;
		while(_g2 < _g3) {
			var y = [_g2++];
			var _g21 = 0;
			var _g31 = columnsNeed;
			while(_g21 < _g31) {
				var x = [_g21++];
				var button = [new kbe_components_OneWayButton()];
				button[0].set_width(32);
				button[0].set_height(32);
				var tmp = (function(button1,x1,y1) {
					return function(_) {
						_gthis.selectBottomButton(button1[0]);
						_gthis.selectTopButton(x1[0],y1[0]);
						_gthis.refreshFormatting();
					};
				})(button,x,y);
				button[0].registerEvent("click",tmp);
				this.matrixGrid.addComponent(button[0]);
			}
		}
	}
	,refreshRowMapping: function() {
		var keyboard = this.editor.getKeyboard();
		this.rowTable.set_mappingSource(keyboard.rowMapping);
		this.colTable.set_mappingSource(keyboard.columnMapping);
	}
	,reload: function() {
		this.keyboard = this.editor.getKeyboard();
		this.keyView.loadFromList(this.keyboard.keys);
		this.keyView.updateLayout();
		this.resizeMatrix();
		this.refreshFormatting();
		this.checkHasMatrixRows.set_selected(this.keyboard.rowMapping.hasWireColumn);
		this.rowCountEditor.set_number(this.keyboard.rowMapping.get_rows());
		this.columnCountEditor.set_number(this.keyboard.columnMapping.get_rows());
		this.refreshRowMapping();
	}
	,onTopKeyDownU: function(e) {
		if(e.keyCode == kbe_KC.R) {
			this.quickSetMode.set_selectedIndex(1);
		} else if(e.keyCode == kbe_KC.C) {
			this.quickSetMode.set_selectedIndex(2);
		}
		var number = null;
		if(e.keyCode >= kbe_KC.N0 && e.keyCode <= kbe_KC.N9) {
			number = e.keyCode - kbe_KC.N0;
		} else if(e.keyCode >= kbe_KC.NP_0 && e.keyCode <= kbe_KC.NP_9) {
			number = e.keyCode - kbe_KC.NP_0;
		}
		var quickMode = this.quickSetMode.get_selectedItem().id;
		if(number != null && (quickMode == "row" || quickMode == "column")) {
			if(quickMode == "row") {
				this.pRowEditor.set_number(number);
				this.pRowEditor.set_focus(true);
				e.cancel();
				this.pRowEditor.dispatch(new haxe_ui_events_UIEvent("change"));
			}
			if(quickMode == "column") {
				this.pColumnEditor.set_number(number);
				this.pColumnEditor.set_focus(true);
				e.cancel();
				this.pColumnEditor.dispatch(new haxe_ui_events_UIEvent("change"));
			}
		}
	}
	,updateWireMappingFromDescr: function(mapping,changes) {
		var row = changes.tRow;
		mapping.setMatrixRow(row,changes.tMatrixRow);
		var _g = 0;
		var _g1 = Reflect.fields(changes);
		while(_g < _g1.length) {
			var field = _g1[_g];
			++_g;
			var column = mapping.columnNames.indexOf(field);
			if(column > -1) {
				mapping.setColumnValue(row,column,Reflect.getProperty(changes,field));
			}
		}
	}
	,hasMatrixRowsChanged: function(e) {
		var keyboard = this.editor.getKeyboard();
		var rows = keyboard.rowMapping.clone();
		var col = keyboard.columnMapping.clone();
		if(rows.hasWireColumn == this.checkHasMatrixRows.get_selected() && col.hasWireColumn == this.checkHasMatrixRows.get_selected()) {
			return;
		}
		rows.set_hasWireColumn(this.checkHasMatrixRows.get_selected());
		col.set_hasWireColumn(this.checkHasMatrixRows.get_selected());
		this.editor.updateRowMapping(rows,col);
		this.refreshRowMapping();
	}
	,onChangeRowCount: function(e) {
		var keyboard = this.editor.getKeyboard();
		var rows = keyboard.rowMapping.clone();
		rows.resize(this.rowCountEditor.get_number());
		this.editor.updateRowMapping(rows,null);
		this.refreshRowMapping();
	}
	,onChangeColumnCount: function(e) {
		var keyboard = this.editor.getKeyboard();
		var columns = keyboard.columnMapping.clone();
		columns.resize(this.columnCountEditor.get_number());
		this.editor.updateRowMapping(null,columns);
		this.refreshRowMapping();
	}
	,handleWiringTableChange: function(e,row) {
		if(e.sourceEvent.type == "change" && e.data != null) {
			var value = e.data;
			var keyboard = this.editor.getKeyboard();
			var rows = (row ? keyboard.rowMapping : keyboard.columnMapping).clone();
			this.updateWireMappingFromDescr(rows,value);
			if(row) {
				this.editor.updateRowMapping(rows);
			} else {
				this.editor.updateRowMapping(null,rows);
			}
			this.refreshRowMapping();
		}
	}
	,onRowItemEvent: function(e) {
		this.handleWiringTableChange(e,true);
	}
	,onColItemEvent: function(e) {
		this.handleWiringTableChange(e,false);
	}
	,onAddPropertyClicked: function(e) {
		var dialog = new kbe__$WiringPage_NewPropertyDialog();
		dialog.set_width(300);
		dialog.set_height(150);
		dialog.set_onDialogClosed($bind(this,this.onAddPropertyClosed));
		dialog.show();
	}
	,onAddPropertyClosed: function(e) {
		var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(e.button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("OK")) != -1) {
			var dialog = js_Boot.__cast(e.target , kbe__$WiringPage_NewPropertyDialog);
			var keyboard = this.editor.getKeyboard();
			var rows = keyboard.rowMapping.clone();
			var cols = keyboard.columnMapping.clone();
			var newColumn = dialog.result();
			rows.addColumn(newColumn);
			cols.addColumn(newColumn);
			this.editor.updateRowMapping(rows,cols);
			this.refreshRowMapping();
		}
	}
	,onDeletePropertyClicked: function(e) {
		var dialog = new kbe__$WiringPage_DeletePropertyDialog();
		dialog.set_width(300);
		dialog.set_height(100);
		dialog.set_onDialogClosed($bind(this,this.onDeletePropertyClosed));
		dialog.setProperties(this.editor.getKeyboard().rowMapping.columnNames);
		dialog.show();
	}
	,onDeletePropertyClosed: function(e) {
		var larr = haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString(e.button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.toString("OK")) != -1) {
			var dialog = js_Boot.__cast(e.target , kbe__$WiringPage_DeletePropertyDialog);
			var keyboard = this.editor.getKeyboard();
			var rows = keyboard.rowMapping.clone();
			var cols = keyboard.columnMapping.clone();
			var newColumn = dialog.result();
			rows.removeColumn(newColumn);
			cols.removeColumn(newColumn);
			this.editor.updateRowMapping(rows,cols);
			this.refreshRowMapping();
		}
	}
	,flipHChange: function(_) {
		this.keyView.set_flipHorizontally(this.flipH.get_selected());
	}
	,flipVChange: function(_) {
		this.keyView.set_flipVertically(this.flipV.get_selected());
	}
	,onResizeToKeyboard: function(_) {
		this.editor.resizeWiringToKeyboard();
		this.refreshRowMapping();
	}
	,onRowSelectionChange: function(e) {
		var _this = this.rowTable.get_selectedItems();
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].tRow;
		}
		var selectedRows = result;
		var selection = this.keyView.buttons.filter(function(button) {
			return selectedRows.indexOf(button.key.row) > -1;
		});
		var tmp = this.keyView;
		var _g2 = [];
		var _g1_head = selection.h;
		while(_g1_head != null) {
			var val = _g1_head.item;
			_g1_head = _g1_head.next;
			var button1 = val;
			_g2.push(button1);
		}
		tmp.selectButtons(_g2);
	}
	,onColumnSelectionChange: function(e) {
		var _this = this.colTable.get_selectedItems();
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].tRow;
		}
		var selectedColumns = result;
		var selection = this.keyView.buttons.filter(function(button) {
			return selectedColumns.indexOf(button.key.column) > -1;
		});
		var tmp = this.keyView;
		var _g2 = [];
		var _g1_head = selection.h;
		while(_g1_head != null) {
			var val = _g1_head.item;
			_g1_head = _g1_head.next;
			var button1 = val;
			_g2.push(button1);
		}
		tmp.selectButtons(_g2);
	}
	,onBtnSwapWiringRowsColumns: function(e) {
		this.editor.swapWiringRowColumnAssignment();
		this.reload();
	}
	,onBtnSwapKeyRowsProperties: function(e) {
		this.editor.swapWiringRowColumnProperties();
		this.reload();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_WiringPage();
	}
	,rowTable: null
	,rowCountEditor: null
	,resizeToKeyboard: null
	,removeProperty: null
	,quickSetMode: null
	,propEditor: null
	,pageWiring: null
	,p_row: null
	,p_column: null
	,pRowEditor: null
	,pColumnEditor: null
	,matrixGrid: null
	,layoutLabelSelection: null
	,labelUnassigned: null
	,labelRows: null
	,labelConflicts: null
	,labelColumns: null
	,keyView: null
	,gridModeSelection: null
	,flipV: null
	,flipH: null
	,columnCountEditor: null
	,colorSelect: null
	,colTable: null
	,checkHasMatrixRows: null
	,btnSwapWiringRowsColumns: null
	,btnSwapKeyRowsProperties: null
	,addProperty: null
	,__class__: kbe_WiringPage
});
var kbe_components_NumberEditor = function() {
	this.input = new haxe_ui_components_TextField();
	this.plus = new haxe_ui_components_Button();
	this.minus = new haxe_ui_components_Button();
	haxe_ui_core_Component.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
	this.showVal();
};
$hxClasses["kbe.components.NumberEditor"] = kbe_components_NumberEditor;
kbe_components_NumberEditor.__name__ = "kbe.components.NumberEditor";
kbe_components_NumberEditor.__interfaces__ = [haxe_ui_focus_IFocusable];
kbe_components_NumberEditor.__super__ = haxe_ui_core_Component;
kbe_components_NumberEditor.prototype = $extend(haxe_ui_core_Component.prototype,{
	input: null
	,plus: null
	,minus: null
	,createChildren: function() {
		var _gthis = this;
		this.addComponent(this.input);
		this.input.set_restrictChars("-0-9.");
		this.input.set_onChange(function(_) {
			_gthis.fromText();
			_gthis.dispatch(new haxe_ui_events_UIEvent("change"));
		});
		this.addComponent(this.plus);
		this.plus.set_text("+");
		this.plus.set_onClick($bind(this,this.onPlus));
		this.plus.set_repeater(true);
		this.plus.set_repeatInterval(150);
		this.addComponent(this.minus);
		this.minus.set_text("-");
		this.minus.set_onClick($bind(this,this.onMinus));
		this.minus.set_repeater(true);
		this.minus.set_repeatInterval(150);
		this.input.set_percentWidth(100);
	}
	,fromText: function() {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,showVal: function() {
		this.input.set_text(Std.string(this.get_value()));
	}
	,onPlus: function(_) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,onMinus: function(_) {
		throw new js__$Boot_HaxeError("Not implemented!");
	}
	,get_focus: function() {
		return this.input.get_focus();
	}
	,set_focus: function(value) {
		return this.input.set_focus(value);
	}
	,get_allowFocus: function() {
		return this.input.get_focus();
	}
	,set_allowFocus: function(value) {
		return this.input.set_focus(value);
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_NumberEditor();
	}
	,__class__: kbe_components_NumberEditor
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var kbe_components_FloatEditor = function() {
	this.floatRound = false;
	this.step = 1;
	this.maximum = 100;
	this.minimum = 0;
	this._value = 0;
	kbe_components_NumberEditor.call(this);
};
$hxClasses["kbe.components.FloatEditor"] = kbe_components_FloatEditor;
kbe_components_FloatEditor.__name__ = "kbe.components.FloatEditor";
kbe_components_FloatEditor.__super__ = kbe_components_NumberEditor;
kbe_components_FloatEditor.prototype = $extend(kbe_components_NumberEditor.prototype,{
	_value: null
	,minimum: null
	,maximum: null
	,step: null
	,floatRound: null
	,fromText: function() {
		var num = parseFloat(this.input.get_value());
		if(isFinite(num) && num >= this.minimum && num <= this.maximum) {
			this.set_number(num);
		}
	}
	,clamp: function(v) {
		if(!isFinite(v)) {
			return this.minimum;
		} else if(v < this.minimum) {
			return this.minimum;
		} else if(v > this.maximum) {
			return this.maximum;
		}
		return v;
	}
	,onPlus: function(_) {
		var _g = this;
		_g.set_number(_g.get_number() + this.step);
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMinus: function(_) {
		var _g = this;
		_g.set_number(_g.get_number() - this.step);
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,set_number: function(v) {
		this._value = this.clamp(v);
		if(this.floatRound) {
			this._value = Math.round(this._value / this.step) * this.step;
		}
		this.showVal();
		return this._value;
	}
	,get_number: function() {
		return this._value;
	}
	,set_value: function(value) {
		return this.set_number(value);
	}
	,get_value: function() {
		return this.get_number();
	}
	,registerBehaviours: function() {
		kbe_components_NumberEditor.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = kbe_components_NumberEditor.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_FloatEditor();
	}
	,__class__: kbe_components_FloatEditor
	,__properties__: $extend(kbe_components_NumberEditor.prototype.__properties__,{set_number:"set_number",get_number:"get_number"})
});
var kbe_components_IntegerEditor = function() {
	this.step = 1;
	this.maximum = 100;
	this.minimum = 0;
	this._value = 0;
	kbe_components_NumberEditor.call(this);
};
$hxClasses["kbe.components.IntegerEditor"] = kbe_components_IntegerEditor;
kbe_components_IntegerEditor.__name__ = "kbe.components.IntegerEditor";
kbe_components_IntegerEditor.__super__ = kbe_components_NumberEditor;
kbe_components_IntegerEditor.prototype = $extend(kbe_components_NumberEditor.prototype,{
	_value: null
	,minimum: null
	,maximum: null
	,step: null
	,fromText: function() {
		var num = Std.parseInt(this.input.get_value());
		if(num != null && num >= this.minimum && num <= this.maximum) {
			this.set_number(num);
		}
	}
	,clamp: function(v) {
		if(v < this.minimum) {
			return this.minimum;
		} else if(v > this.maximum) {
			return this.maximum;
		}
		return v;
	}
	,onPlus: function(_) {
		var _g = this;
		_g.set_number(_g.get_number() + this.step);
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMinus: function(_) {
		var _g = this;
		_g.set_number(_g.get_number() - this.step);
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,set_number: function(v) {
		this._value = this.clamp(v);
		this.showVal();
		return this._value;
	}
	,get_number: function() {
		return this._value;
	}
	,set_value: function(value) {
		return this.set_number(value);
	}
	,get_value: function() {
		return this.get_number();
	}
	,registerBehaviours: function() {
		kbe_components_NumberEditor.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = kbe_components_NumberEditor.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_IntegerEditor();
	}
	,__class__: kbe_components_IntegerEditor
	,__properties__: $extend(kbe_components_NumberEditor.prototype.__properties__,{set_number:"set_number",get_number:"get_number"})
});
var kbe_components_SelectionCommand = $hxEnums["kbe.components.SelectionCommand"] = { __ename__ : "kbe.components.SelectionCommand", __constructs__ : ["Set","Add","Toggle","Remove"]
	,Set: {_hx_index:0,__enum__:"kbe.components.SelectionCommand",toString:$estr}
	,Add: {_hx_index:1,__enum__:"kbe.components.SelectionCommand",toString:$estr}
	,Toggle: {_hx_index:2,__enum__:"kbe.components.SelectionCommand",toString:$estr}
	,Remove: {_hx_index:3,__enum__:"kbe.components.SelectionCommand",toString:$estr}
};
var kbe_components_SelectionMode = $hxEnums["kbe.components.SelectionMode"] = { __ename__ : "kbe.components.SelectionMode", __constructs__ : ["SingleSet","SingleToggle","MultiSelect","MultiSelectMove","None"]
	,SingleSet: {_hx_index:0,__enum__:"kbe.components.SelectionMode",toString:$estr}
	,SingleToggle: {_hx_index:1,__enum__:"kbe.components.SelectionMode",toString:$estr}
	,MultiSelect: {_hx_index:2,__enum__:"kbe.components.SelectionMode",toString:$estr}
	,MultiSelectMove: {_hx_index:3,__enum__:"kbe.components.SelectionMode",toString:$estr}
	,None: {_hx_index:4,__enum__:"kbe.components.SelectionMode",toString:$estr}
};
var kbe_components_KeyboardContainer = function() {
	this.flipVertically = false;
	this.flipHorizontally = false;
	this.rectangleSelection = false;
	this.selectionMode = kbe_components_SelectionMode.SingleSet;
	this.scale = 32.0;
	this.buttons = new haxe_ds_List();
	this.selectionRect = null;
	this.selectionStart = null;
	this.clickingOnButton = false;
	this.selectedButtons = [];
	this.canvas = new haxe_ui_containers_Absolute();
	this.scrollView = new haxe_ui_containers_ScrollView();
	haxe_ui_containers_Box.call(this);
	this.registerEvent("resize",$bind(this,this.onResize));
	this.scrollView.addComponent(this.canvas);
	var dummy = new haxe_ui_core_Component();
	this.canvas.addComponent(dummy);
	this.scrollView.set_backgroundColor(13421772);
	haxe_ui_containers_Box.prototype.addComponent.call(this,this.scrollView);
	this.scrollView.set_percentWidth(100);
	this.scrollView.set_percentHeight(100);
	this.scrollView.set_scrollMode("normal");
	this.formatButton = $bind(this,this.defaultFormat);
	this.set_percentWidth(100);
	this.set_percentHeight(100);
	this.canvas.registerEvent("mousedown",$bind(this,this.onMouseDownArea));
	this.canvas.registerEvent("mouseup",$bind(this,this.onMouseUpArea));
	this.canvas.registerEvent("mousemove",$bind(this,this.onMouseMoveCanvas));
	this.registerEvent("mousemove",$bind(this,this.onMouseMoveSelf));
	this.element.tabIndex = 1;
};
$hxClasses["kbe.components.KeyboardContainer"] = kbe_components_KeyboardContainer;
kbe_components_KeyboardContainer.__name__ = "kbe.components.KeyboardContainer";
kbe_components_KeyboardContainer.__super__ = haxe_ui_containers_Box;
kbe_components_KeyboardContainer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	scrollView: null
	,canvas: null
	,selectedButtons: null
	,clickingOnButton: null
	,selectionStart: null
	,selectionRect: null
	,buttons: null
	,scale: null
	,formatButton: null
	,selectionMode: null
	,rectangleSelection: null
	,flipHorizontally: null
	,flipVertically: null
	,refreshFormatting: function() {
		var _g_head = this.buttons.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var button = val;
			this.refreshButtonFormatting(button);
		}
	}
	,refreshButtonFormatting: function(button) {
		if(button != null) {
			var key = button.key;
			var pos = this.fieldToScreen(key);
			button.set_top(pos.y);
			button.set_left(pos.x);
			button.set_width(key.width * this.scale);
			button.set_height(key.height * this.scale);
			this.formatButton(button);
		}
	}
	,clearSelection: function() {
		this.unselectButtons();
	}
	,activeButtons: function() {
		return this.selectedButtons;
	}
	,loadFromList: function(keys) {
		var _this = this.selectedButtons;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].key.id;
		}
		var activeId = result;
		this.clear();
		this.clearSelection();
		var _g2 = 0;
		while(_g2 < keys.length) {
			var key = keys[_g2];
			++_g2;
			var button = this.addKey(key);
		}
		var _g11 = 0;
		while(_g11 < activeId.length) {
			var id = activeId[_g11];
			++_g11;
			var _g1_head = this.buttons.h;
			while(_g1_head != null) {
				var val = _g1_head.item;
				_g1_head = _g1_head.next;
				var button1 = val;
				if(button1.key.id == id) {
					this.selectButton(button1,kbe_components_SelectionCommand.Add);
				}
			}
		}
		this.refreshFormatting();
	}
	,defaultFormat: function(key) {
		key.set_text(key.key.name);
	}
	,fieldToScreen: function(key) {
		var y = 0.0;
		var x = 0.0;
		if(this.flipHorizontally) {
			x = 0.8 * this.get_width() + kbe_components_KeyboardContainer.LEFT_OFFSET - (key.x + key.width) * this.scale;
		} else {
			x = kbe_components_KeyboardContainer.LEFT_OFFSET + key.x * this.scale;
		}
		if(this.flipVertically) {
			y = 0.8 * this.get_height() + kbe_components_KeyboardContainer.TOP_OFFSET - (key.y + key.height) * this.scale;
		} else {
			y = kbe_components_KeyboardContainer.TOP_OFFSET + key.y * this.scale;
		}
		return { x : x, y : y};
	}
	,screenToField: function(x,y) {
		var result = { x : 0, y : 0};
		result.x = (x - this.canvas.get_screenLeft() - kbe_components_KeyboardContainer.LEFT_OFFSET) / this.scale;
		result.y = (y - this.canvas.get_screenTop() - kbe_components_KeyboardContainer.TOP_OFFSET) / this.scale;
		return result;
	}
	,addComponent: function(child) {
		var res = this.canvas.addComponent(child);
		return res;
	}
	,updateLayout: function() {
		this.canvas.set_height(null);
		this.canvas.set_width(null);
		this.canvas.autoSize();
		var w = Math.max(this.canvas.get_width(),this.get_width() - 16);
		if(w > 0) {
			this.canvas.set_width(w);
		}
		var h = Math.max(this.canvas.get_height(),this.get_height() - 16);
		if(h > 0) {
			this.canvas.set_height(h);
		}
	}
	,onResize: function(_) {
		this.updateLayout();
	}
	,addKey: function(key) {
		var button = new kbe_KeyButton(key);
		button.set_onClick($bind(this,this.onKeyClick));
		button.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.addComponent(button);
		this.buttons.add(button);
		this.refreshButtonFormatting(button);
		return button;
	}
	,removeKey: function(key) {
		this.buttons.remove(key);
		this.removeComponent(key);
	}
	,clear: function() {
		this.clearSelection();
		var _g_head = this.buttons.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var button = val;
			this.removeKey(button);
		}
	}
	,set_scale: function(v) {
		this.scale = v;
		this.refreshFormatting();
		return v;
	}
	,get_activeButton: function() {
		if(this.selectedButtons.length > 0) {
			return this.selectedButtons[this.selectedButtons.length - 1];
		} else {
			return null;
		}
	}
	,set_activeButton: function(button) {
		this.selectButton(button,kbe_components_SelectionCommand.Set);
		return button;
	}
	,unselectButtons: function() {
		var _g = 0;
		var _g1 = this.selectedButtons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.set_selected(false);
		}
		this.selectedButtons = [];
	}
	,selectButton: function(button,mode) {
		if(mode == null) {
			mode = kbe_components_SelectionCommand.Set;
		}
		this.selectButtonInternal(button,mode,true);
	}
	,selectButtons: function(selection) {
		this.unselectButtons();
		var singleButton = null;
		var _g = 0;
		while(_g < selection.length) {
			var button = selection[_g];
			++_g;
			button.set_selected(true);
			singleButton = button;
		}
		this.selectedButtons = selection.slice();
		this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,singleButton,true));
	}
	,selectButtonInternal: function(button,mode,software) {
		if(software == null) {
			software = false;
		}
		if(mode == null) {
			mode = kbe_components_SelectionCommand.Set;
		}
		if(mode == kbe_components_SelectionCommand.Set) {
			this.unselectButtons();
			if(button != null) {
				this.selectedButtons.push(button);
				button.set_selected(true);
			}
			this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,button,software));
			return;
		}
		if(button == null) {
			return;
		}
		if(mode == kbe_components_SelectionCommand.Add) {
			var index = this.selectedButtons.indexOf(button);
			if(index >= 0) {
				this.selectedButtons[index] = this.selectedButtons[this.selectedButtons.length - 1];
				this.selectedButtons[this.selectedButtons.length - 1] = button;
				return;
			}
			this.selectedButtons.push(button);
			button.set_selected(true);
			this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,button,software));
		} else if(mode == kbe_components_SelectionCommand.Toggle) {
			if(HxOverrides.remove(this.selectedButtons,button)) {
				button.set_selected(false);
			} else {
				button.set_selected(true);
				this.selectedButtons.push(button);
			}
		} else if(mode == kbe_components_SelectionCommand.Remove) {
			if(HxOverrides.remove(this.selectedButtons,button)) {
				button.set_selected(false);
			}
		}
		this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,this.get_activeButton(),software));
	}
	,getButton: function(key) {
		var _g_head = this.buttons.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var button = val;
			if(button.key == key) {
				return button;
			}
		}
		return null;
	}
	,set_selectionMode: function(mode) {
		this.selectionMode = mode;
		return mode;
	}
	,onKeyClick: function(e) {
		this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CLICKED,e.target));
		var button = e.target;
		switch(this.selectionMode._hx_index) {
		case 0:
			this.selectButtonInternal(button,kbe_components_SelectionCommand.Set);
			break;
		case 1:
			if(this.get_activeButton() == button) {
				this.selectButtonInternal(button,kbe_components_SelectionCommand.Toggle);
			} else {
				this.selectButtonInternal(button,kbe_components_SelectionCommand.Set);
			}
			break;
		case 2:
			this.selectButtonInternal(button,e.shiftKey ? kbe_components_SelectionCommand.Toggle : kbe_components_SelectionCommand.Set);
			break;
		case 3:
			if(e.shiftKey) {
				this.selectButtonInternal(button,kbe_components_SelectionCommand.Toggle);
			} else if(this.selectedButtons.indexOf(button) >= 0) {
				this.selectButtonInternal(button,kbe_components_SelectionCommand.Add);
			} else {
				this.selectButtonInternal(button,kbe_components_SelectionCommand.Set);
			}
			break;
		case 4:
			break;
		}
	}
	,onMouseDown: function(e) {
		this.clickingOnButton = true;
		var target = e.target;
		var result = new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_DOWN,target);
		result.mouseEvent = e;
		this.dispatch(result);
	}
	,onMouseDownArea: function(e) {
		if(this.rectangleSelection && !this.clickingOnButton) {
			this.selectionStart = new haxe_ui_geom_Point(e.get_localX(),e.get_localY());
			if(this.selectionRect != null) {
				this.canvas.removeComponent(this.selectionRect);
			}
			this.selectionRect = new haxe_ui_containers_Box();
			this.canvas.addComponent(this.selectionRect);
			this.selectionRect.set_top(this.selectionStart.y);
			this.selectionRect.set_left(this.selectionStart.x);
			this.selectionRect.set_borderColor(65280);
			this.selectionRect.set_borderSize(5);
			this.selectionRect.set_borderRadius(5);
			this.selectionRect.set_backgroundColor(16711680);
			this.selectionRect.set_opacity(0.5);
		}
	}
	,onMouseMoveCanvas: function(e) {
		if(this.selectionRect != null) {
			this.selectionRect.set_left(Math.min(e.get_localX(),this.selectionStart.x));
			this.selectionRect.set_top(Math.min(e.get_localY(),this.selectionStart.y));
			this.selectionRect.set_width(Math.abs(e.get_localX() - this.selectionStart.x));
			this.selectionRect.set_height(Math.abs(e.get_localY() - this.selectionStart.y));
			this.canvas.set_width(Math.max(this.canvas.get_width(),e.get_localX() + 32));
			this.canvas.set_height(Math.max(this.canvas.get_height(),e.get_localY() + 32));
		}
	}
	,onMouseMoveSelf: function(e) {
		if(this.selectionRect != null) {
			this.canvas.set_width(Math.max(this.canvas.get_width(),e.get_localX() + 32));
			this.canvas.set_height(Math.max(this.canvas.get_height(),e.get_localY() + 32));
		}
	}
	,onMouseUpArea: function(e) {
		this.clickingOnButton = false;
		if(this.selectionStart != null) {
			this.canvas.removeComponent(this.selectionRect);
			this.selectionRect = null;
			var top = Math.min(this.selectionStart.y,e.get_localY());
			var bottom = Math.max(this.selectionStart.y,e.get_localY());
			var left = Math.min(this.selectionStart.x,e.get_localX());
			var right = Math.max(this.selectionStart.x,e.get_localX());
			if(!e.shiftKey) {
				this.unselectButtons();
			}
			var _g_head = this.buttons.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var button = val;
				if(button.get_top() >= top && button.get_left() >= left && button.get_top() + button.get_height() <= bottom && button.get_width() + button.get_left() <= right && !button.get_selected()) {
					this.selectedButtons.push(button);
					button.set_selected(true);
				}
			}
			this.dispatch(new kbe_components_KeyButtonEvent(kbe_components_KeyboardContainer.BUTTON_CHANGED,this.get_activeButton()));
		}
		this.selectionStart = null;
	}
	,set_flipHorizontally: function(v) {
		this.flipHorizontally = v;
		this.refreshFormatting();
		return v;
	}
	,set_flipVertically: function(v) {
		this.flipVertically = v;
		this.refreshFormatting();
		return v;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_KeyboardContainer();
	}
	,__class__: kbe_components_KeyboardContainer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_flipVertically:"set_flipVertically",set_flipHorizontally:"set_flipHorizontally",set_selectionMode:"set_selectionMode",set_scale:"set_scale",set_activeButton:"set_activeButton",get_activeButton:"get_activeButton"})
});
var kbe_components_KeyButtonEvent = function(type,target,software) {
	if(software == null) {
		software = false;
	}
	this.software = false;
	this.mouseEvent = null;
	haxe_ui_events_UIEvent.call(this,type);
	this.data = target;
	this.software = software;
};
$hxClasses["kbe.components.KeyButtonEvent"] = kbe_components_KeyButtonEvent;
kbe_components_KeyButtonEvent.__name__ = "kbe.components.KeyButtonEvent";
kbe_components_KeyButtonEvent.__super__ = haxe_ui_events_UIEvent;
kbe_components_KeyButtonEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	mouseEvent: null
	,software: null
	,get_button: function() {
		return this.data;
	}
	,set_button: function(btn) {
		this.data = btn;
		return btn;
	}
	,clone: function() {
		var c = new kbe_components_KeyButtonEvent(this.type,this.get_button());
		c.target = this.target;
		c.mouseEvent = this.mouseEvent;
		c.software = this.software;
		this.postClone(c);
		return c;
	}
	,__class__: kbe_components_KeyButtonEvent
	,__properties__: {set_button:"set_button",get_button:"get_button"}
});
var kbe_components_WireMappingTable = function() {
	this.initialized = false;
	this.header = new haxe_ui_containers_Header();
	this.matrixRowColumn = new haxe_ui_components_Column();
	this.rowColumn = new haxe_ui_components_Column();
	this.ds = new haxe_ui_data_ArrayDataSource();
	this.mappingSource = null;
	haxe_ui_containers_TableView.call(this);
	this.set_dataSource(this.ds);
	this.rowColumn.set_id("tRow");
	this.matrixRowColumn.set_id("tMatrixRow");
	this.set_isRow(true);
	this.matrixRowColumn.set_width(90);
	this.addComponent(this.header);
	this.set_selectionMode("multiple-click-modifier-key");
};
$hxClasses["kbe.components.WireMappingTable"] = kbe_components_WireMappingTable;
kbe_components_WireMappingTable.__name__ = "kbe.components.WireMappingTable";
kbe_components_WireMappingTable.__super__ = haxe_ui_containers_TableView;
kbe_components_WireMappingTable.prototype = $extend(haxe_ui_containers_TableView.prototype,{
	mappingSource: null
	,isRow: null
	,ds: null
	,rowColumn: null
	,matrixRowColumn: null
	,header: null
	,initialized: null
	,set_isRow: function(v) {
		this.isRow = v;
		if(this.isRow) {
			this.rowColumn.set_text("row");
			this.matrixRowColumn.set_text("matrix row");
		} else {
			this.rowColumn.set_text("col");
			this.matrixRowColumn.set_text("matrix col");
		}
		return v;
	}
	,set_mappingSource: function(value) {
		this.mappingSource = value;
		this.reloadFromSource();
		return value;
	}
	,reloadColumnsFromSource: function() {
		this.ds.clear();
		while(this.header.get_childComponents().length > 0) this.header.removeComponentAt(this.header.get_childComponents().length - 1,false,false);
		this.set_itemRenderer(null);
		var renderers = [];
		this.header.addComponent(this.rowColumn);
		var rowLabel = new haxe_ui_components_Label();
		rowLabel.set_id("tRow");
		var r = new haxe_ui_core_ItemRenderer();
		r.addComponent(rowLabel);
		renderers.push(r);
		if(this.mappingSource != null) {
			if(this.mappingSource.hasWireColumn) {
				this.header.addComponent(this.matrixRowColumn);
				var renderer = new haxe_ui_core_ItemRenderer();
				var input = new kbe_components_IntegerEditor();
				input.maximum = 1024;
				input.set_width(60);
				input.set_id("tMatrixRow");
				renderer.addComponent(input);
				renderers.push(renderer);
			}
			var _g = 0;
			var _g1 = this.mappingSource.columnNames;
			while(_g < _g1.length) {
				var name = _g1[_g];
				++_g;
				var column = new haxe_ui_components_Column();
				column.set_text(name);
				column.set_id(name);
				column.set_width(50);
				this.header.addComponent(column);
				var input1 = new haxe_ui_components_TextField();
				input1.set_id(name);
				input1.set_width(40);
				var renderer1 = new haxe_ui_core_ItemRenderer();
				renderer1.addComponent(input1);
				renderers.push(renderer1);
			}
		}
		this.addComponent(this.header);
		var _g2 = 0;
		while(_g2 < renderers.length) {
			var renderer2 = renderers[_g2];
			++_g2;
			this.addComponent(renderer2);
		}
	}
	,reloadDataFromSource: function() {
		this.ds.set_allowCallbacks(false);
		this.ds.clear();
		if(this.mappingSource != null) {
			var _g = 0;
			var _g1 = this.mappingSource.get_rows();
			while(_g < _g1) {
				var i = _g++;
				var item = { tRow : i, tMatrixRow : this.mappingSource.getMatrixRow(i)};
				var columnIndex = 0;
				var _g2 = 0;
				var _g11 = this.mappingSource.columnNames;
				while(_g2 < _g11.length) {
					var name = _g11[_g2];
					++_g2;
					var v = this.mappingSource.getColumnValue(i,columnIndex);
					if(v == null) {
						v = "";
					}
					item[name] = v;
					++columnIndex;
				}
				this.ds.add(item);
			}
		}
		this.ds.set_allowCallbacks(true);
	}
	,reloadFromSource: function() {
		this.reloadColumnsFromSource();
		this.reloadDataFromSource();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_TableView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_TableView.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_WireMappingTable();
	}
	,__class__: kbe_components_WireMappingTable
	,__properties__: $extend(haxe_ui_containers_TableView.prototype.__properties__,{set_isRow:"set_isRow",set_mappingSource:"set_mappingSource"})
});
var kbe_components_properties_PropertyEditor = function() {
	this.contentElements = [];
	this.mapping = new haxe_ds_StringMap();
	this.autoSync = true;
	haxe_ui_containers_Accordion.call(this);
	this.addClass("accordion");
};
$hxClasses["kbe.components.properties.PropertyEditor"] = kbe_components_properties_PropertyEditor;
kbe_components_properties_PropertyEditor.__name__ = "kbe.components.properties.PropertyEditor";
kbe_components_properties_PropertyEditor.__super__ = haxe_ui_containers_Accordion;
kbe_components_properties_PropertyEditor.prototype = $extend(haxe_ui_containers_Accordion.prototype,{
	source: null
	,autoSync: null
	,mapping: null
	,contentElements: null
	,addComponent: function(child) {
		var result = haxe_ui_containers_Accordion.prototype.addComponent.call(this,child);
		if(!child.hasClass("accordion-button") && !child.hasClass("accordion-page")) {
			this.contentElements.push(child);
		}
		return result;
	}
	,set_source: function(newValue) {
		if(this.source == null) {
			this.doBinding(newValue);
		}
		this.source = null;
		this.toUi(newValue);
		this.source = newValue;
		return this.source;
	}
	,doBinding: function(source) {
		var _g = 0;
		var _g1 = Reflect.fields(source);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var findByid = function(object,id) {
				var tc = object.findComponent(id,kbe_components_properties_PropertyItem,true);
				if(tc == null) {
					tc = object.findComponent("p_" + id,kbe_components_properties_PropertyItem,true);
				}
				return tc;
			};
			var c = findByid(this,f);
			if(c == null) {
				var _g2 = 0;
				var _g11 = this.contentElements;
				while(_g2 < _g11.length) {
					var group = _g11[_g2];
					++_g2;
					c = findByid(group,f);
					if(c != null) {
						break;
					}
				}
			}
			if(c != null) {
				c.propertyId = f;
				var _this = this.mapping;
				if(__map_reserved[f] != null) {
					_this.setReserved(f,c);
				} else {
					_this.h[f] = c;
				}
				c.set_onChange($bind(this,this.onComponentChange));
			}
		}
	}
	,onComponentChange: function(e) {
		if(!this.autoSync || this.source == null) {
			return;
		}
		var value = e.target;
		var c = ((value) instanceof kbe_components_properties_PropertyItem) ? value : null;
		if(c == null) {
			return;
		}
		var field = c.propertyId;
		this.source[field] = c.get_value();
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,toUi: function(source) {
		var _g = new haxe_iterators_MapKeyValueIterator(this.mapping);
		while(_g.hasNext()) {
			var _g1 = _g.next();
			var f = _g1.key;
			var c = _g1.value;
			var fName = f;
			c.set_value(Reflect.field(source,fName));
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Accordion.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Accordion.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_properties_PropertyEditor();
	}
	,__class__: kbe_components_properties_PropertyEditor
	,__properties__: $extend(haxe_ui_containers_Accordion.prototype.__properties__,{set_source:"set_source"})
});
var kbe_components_properties_PropertyItem = function() {
	this.propertyId = "";
	this.editor = null;
	haxe_ui_containers_HBox.call(this);
	var label = new haxe_ui_components_Label();
	this.label = label;
	this.addComponent(label);
	label.set_percentWidth(50);
	this.set_percentWidth(100);
};
$hxClasses["kbe.components.properties.PropertyItem"] = kbe_components_properties_PropertyItem;
kbe_components_properties_PropertyItem.__name__ = "kbe.components.properties.PropertyItem";
kbe_components_properties_PropertyItem.__super__ = haxe_ui_containers_HBox;
kbe_components_properties_PropertyItem.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	label: null
	,editor: null
	,propertyId: null
	,get_text: function() {
		return this.label.get_text();
	}
	,addComponent: function(child) {
		var _gthis = this;
		if(this.label == null) {
			return haxe_ui_containers_HBox.prototype.addComponent.call(this,child);
		}
		haxe_ui_containers_HBox.prototype.addComponent.call(this,child);
		this.editor = child;
		child.set_percentWidth(50);
		child.registerEvent("change",function(_) {
			_gthis.dispatch(new haxe_ui_events_UIEvent("change"));
		});
		return child;
	}
	,set_value: function(v) {
		if(this.editor == null) {
			return [];
		}
		return this.editor.set_value(v);
	}
	,get_value: function() {
		if(this.editor == null) {
			return [];
		}
		return this.editor.get_value();
	}
	,set_text: function(text) {
		return this.label.set_text(text);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_properties_PropertyItem();
	}
	,__class__: kbe_components_properties_PropertyItem
});
var kbe_components_properties_PropertyText = function() {
	kbe_components_properties_PropertyItem.call(this);
	this.addComponent(new haxe_ui_components_TextField());
};
$hxClasses["kbe.components.properties.PropertyText"] = kbe_components_properties_PropertyText;
kbe_components_properties_PropertyText.__name__ = "kbe.components.properties.PropertyText";
kbe_components_properties_PropertyText.__super__ = kbe_components_properties_PropertyItem;
kbe_components_properties_PropertyText.prototype = $extend(kbe_components_properties_PropertyItem.prototype,{
	registerBehaviours: function() {
		kbe_components_properties_PropertyItem.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = kbe_components_properties_PropertyItem.prototype.cloneComponent.call(this);
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new kbe_components_properties_PropertyText();
	}
	,__class__: kbe_components_properties_PropertyText
});
var thx_Arrays = function() { };
$hxClasses["thx.Arrays"] = thx_Arrays;
thx_Arrays.__name__ = "thx.Arrays";
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.appendIf = function(array,cond,element) {
	if(cond) {
		array.push(element);
	}
	return array;
};
thx_Arrays.applyIndexes = function(array,indexes,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = false;
	}
	if(indexes.length != array.length) {
		throw new thx_Error("`Arrays.applyIndexes` can only be applied to two arrays with the same length",null,{ fileName : "thx/Arrays.hx", lineNumber : 55, className : "thx.Arrays", methodName : "applyIndexes"});
	}
	var result = [];
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			var index = indexes[i];
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			result[index] = array[i];
		}
	} else {
		var _g2 = 0;
		var _g11 = array.length;
		while(_g2 < _g11) {
			var i1 = _g2++;
			result[indexes[i1]] = array[i1];
		}
	}
	return result;
};
thx_Arrays.monoid = function() {
	return { zero : [], append : function(a,b) {
		return a.concat(b);
	}};
};
thx_Arrays.after = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) + 1);
};
thx_Arrays.atIndex = function(array,i) {
	if(i >= 0 && i < array.length) {
		return haxe_ds_Option.Some(array[i]);
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i]);
	}
};
thx_Arrays.eachi = function(arr,effect) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		effect(arr[i],i);
	}
};
thx_Arrays.all = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(!predicate(arr[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.any = function(arr,predicate) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.at = function(arr,indexes) {
	var result = new Array(indexes.length);
	var _g = 0;
	var _g1 = indexes.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = arr[indexes[i]];
	}
	return result;
};
thx_Arrays.before = function(array,element) {
	return array.slice(0,thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.commonsFromStart = function(self,other,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var count = 0;
	var _g = 0;
	var _g1 = thx_Arrays.zip(self,other);
	while(_g < _g1.length) {
		var pair = _g1[_g];
		++_g;
		if(equality(pair._0,pair._1)) {
			++count;
		} else {
			break;
		}
	}
	return self.slice(0,count);
};
thx_Arrays.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v) {
			_g.push(v);
		}
	}
	return _g;
};
thx_Arrays.compare = function(a,b) {
	var v = thx_Ints.compare(a.length,b.length);
	if(v != 0) {
		return v;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		v = thx_Dynamics.compare(a[i],b[i]);
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g = 0;
		var _g1 = array.length;
		while(_g < _g1) {
			var i = _g++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.containsAll = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(!thx_Arrays.contains(array,el1,eq)) {
			return false;
		}
	}
	return true;
};
thx_Arrays.containsAny = function(array,elements,eq) {
	var el = $getIterator(elements);
	while(el.hasNext()) {
		var el1 = el.next();
		if(thx_Arrays.contains(array,el1,eq)) {
			return true;
		}
	}
	return false;
};
thx_Arrays.create = function(length,fillWith) {
	var arr = length > 0 ? new Array(length) : [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		arr[i] = fillWith;
	}
	return arr;
};
thx_Arrays.fromItem = function(t) {
	return [t];
};
thx_Arrays.cross = function(a,b) {
	var r = [];
	var va = HxOverrides.iter(a);
	while(va.hasNext()) {
		var va1 = va.next();
		var vb = HxOverrides.iter(b);
		while(vb.hasNext()) {
			var vb1 = vb.next();
			r.push([va1,vb1]);
		}
	}
	return r;
};
thx_Arrays.crossMulti = function(array) {
	var acopy = array.slice();
	var _this = acopy.shift();
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = [_this[i]];
	}
	var result1 = result;
	while(acopy.length > 0) {
		var array1 = acopy.shift();
		var tresult = result1;
		result1 = [];
		var v = HxOverrides.iter(array1);
		while(v.hasNext()) {
			var v1 = v.next();
			var _g11 = 0;
			while(_g11 < tresult.length) {
				var ar = tresult[_g11];
				++_g11;
				var t = ar.slice();
				t.push(v1);
				result1.push(t);
			}
		}
	}
	return result1;
};
thx_Arrays.distinct = function(array,predicate) {
	var result = [];
	if(array.length <= 1) {
		return array.slice();
	}
	if(null == predicate) {
		predicate = thx_Functions.equality;
	}
	var v = HxOverrides.iter(array);
	while(v.hasNext()) {
		var v1 = v.next();
		var v2 = [v1];
		var keep = !thx_Arrays.any(result,(function(v3) {
			return function(r) {
				return predicate(r,v3[0]);
			};
		})(v2));
		if(keep) {
			result.push(v2[0]);
		}
	}
	return result;
};
thx_Arrays.eachPair = function(array,callback) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = i;
		var _g11 = array.length;
		while(_g2 < _g11) {
			var j = _g2++;
			if(!callback(array[i],array[j])) {
				return;
			}
		}
	}
};
thx_Arrays.equals = function(a,b,equality) {
	if(a == null || b == null || a.length != b.length) {
		return false;
	}
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(!equality(a[i],b[i])) {
			return false;
		}
	}
	return true;
};
thx_Arrays.extract = function(a,predicate) {
	var _g = 0;
	var _g1 = a.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(a[i])) {
			return a.splice(i,1)[0];
		}
	}
	return null;
};
thx_Arrays.filterNull = function(a) {
	var arr = [];
	var v = HxOverrides.iter(a);
	while(v.hasNext()) {
		var v1 = v.next();
		if(null != v1) {
			arr.push(v1);
		}
	}
	return arr;
};
thx_Arrays.filterOption = function(a) {
	return thx_Arrays.reduce(a,function(acc,maybeV) {
		switch(maybeV._hx_index) {
		case 0:
			var v = maybeV.v;
			acc.push(v);
			break;
		case 1:
			break;
		}
		return acc;
	},[]);
};
thx_Arrays.flattenOptions = function(a) {
	var acc = [];
	var e = HxOverrides.iter(a);
	while(e.hasNext()) {
		var e1 = e.next();
		switch(e1._hx_index) {
		case 0:
			var v = e1.v;
			acc.push(v);
			break;
		case 1:
			return haxe_ds_Option.None;
		}
	}
	return haxe_ds_Option.Some(acc);
};
thx_Arrays.find = function(array,predicate) {
	var element = HxOverrides.iter(array);
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Arrays.findi = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return array[i];
		}
	}
	return null;
};
thx_Arrays.findiOption = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i],i)) {
			return haxe_ds_Option.Some(array[i]);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findOption = function(array,predicate) {
	var element = HxOverrides.iter(array);
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return haxe_ds_Option.Some(element1);
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findMap = function(values,f) {
	var value = HxOverrides.iter(values);
	while(value.hasNext()) {
		var value1 = value.next();
		var opt = f(value1);
		if(!thx_Options.isNone(opt)) {
			return opt;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.filterMap = function(values,f) {
	var acc = [];
	var value = HxOverrides.iter(values);
	while(value.hasNext()) {
		var value1 = value.next();
		var _g1 = f(value1);
		switch(_g1._hx_index) {
		case 0:
			var v = _g1.v;
			acc.push(v);
			break;
		case 1:
			break;
		}
	}
	return acc;
};
thx_Arrays.findSome = function(options) {
	var option = HxOverrides.iter(options);
	while(option.hasNext()) {
		var option1 = option.next();
		if(!thx_Options.isNone(option1)) {
			return option1;
		}
	}
	return haxe_ds_Option.None;
};
thx_Arrays.findIndex = function(array,predicate) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		if(predicate(array[i])) {
			return i;
		}
	}
	return -1;
};
thx_Arrays.findLast = function(array,predicate) {
	var len = array.length;
	var j;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		j = len - i - 1;
		if(predicate(array[j])) {
			return array[j];
		}
	}
	return null;
};
thx_Arrays.first = function(array) {
	return array[0];
};
thx_Arrays.firstOption = function(array) {
	var value = array[0];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.flatMap = function(array,callback) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(array[i]);
	}
	return Array.prototype.concat.apply([],result);
};
thx_Arrays.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx_Arrays.from = function(array,element) {
	return array.slice(thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element));
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.spanByIndex = function(arr,spanKey) {
	var acc = [];
	var cur = null;
	var j = -1;
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var k = spanKey(i);
		if(k == null) {
			throw new thx_Error("spanKey function returned null for index " + i,null,{ fileName : "thx/Arrays.hx", lineNumber : 633, className : "thx.Arrays", methodName : "spanByIndex"});
		}
		if(cur == k) {
			acc[j].push(arr[i]);
		} else {
			cur = k;
			++j;
			acc.push([arr[i]]);
		}
	}
	return acc;
};
thx_Arrays.hasElements = function(array) {
	if(null != array) {
		return array.length > 0;
	} else {
		return false;
	}
};
thx_Arrays.head = function(array) {
	return array[0];
};
thx_Arrays.ifEmpty = function(array,alt) {
	if(null != array && 0 != array.length) {
		return array;
	} else {
		return alt;
	}
};
thx_Arrays.initial = function(array) {
	return array.slice(0,array.length - 1);
};
thx_Arrays.intersperse = function(array,value) {
	return thx_Arrays.reducei(array,function(acc,v,i) {
		acc[i * 2] = v;
		return acc;
	},thx_Arrays.create(array.length * 2 - 1,value));
};
thx_Arrays.interspersef = function(array,f) {
	if(array.length == 0) {
		return [];
	}
	var acc = [array[0]];
	var _g = 1;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		acc.push(f());
		acc.push(array[i]);
	}
	return acc;
};
thx_Arrays.isEmpty = function(array) {
	if(null != array) {
		return array.length == 0;
	} else {
		return true;
	}
};
thx_Arrays.last = function(array) {
	return array[array.length - 1];
};
thx_Arrays.lastOption = function(array) {
	var value = array[array.length - 1];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.map = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i]));
	}
	return r;
};
thx_Arrays.mapi = function(array,callback) {
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		r.push(callback(array[i],i));
	}
	return r;
};
thx_Arrays.mapRight = function(array,callback) {
	var i = array.length;
	var result = [];
	while(--i >= 0) result.push(callback(array[i]));
	return result;
};
thx_Arrays.order = function(array,sort) {
	var n = array.slice();
	n.sort(sort);
	return n;
};
thx_Arrays.pull = function(array,toRemove,equality) {
	var element = HxOverrides.iter(toRemove);
	while(element.hasNext()) {
		var element1 = element.next();
		thx_Arrays.removeAll(array,element1,equality);
	}
};
thx_Arrays.pushIf = function(array,condition,value) {
	if(condition) {
		array.push(value);
	}
	return array;
};
thx_Arrays.rank = function(array,compare,incrementDuplicates) {
	if(incrementDuplicates == null) {
		incrementDuplicates = true;
	}
	var r = [];
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array[i], _1 : i};
		r.push(this1);
	}
	var arr = r;
	arr.sort(function(a,b) {
		return compare(a._0,b._0);
	});
	if(incrementDuplicates) {
		var usedIndexes = thx__$Set_Set_$Impl_$.createInt();
		return thx_Arrays.reducei(arr,function(acc,x,i1) {
			var index = i1 > 0 && compare(arr[i1 - 1]._0,x._0) == 0 ? acc[arr[i1 - 1]._1] : i1;
			while(usedIndexes.h.hasOwnProperty(index)) ++index;
			thx__$Set_Set_$Impl_$.add(usedIndexes,index);
			acc[x._1] = index;
			return acc;
		},[]);
	} else {
		return thx_Arrays.reducei(arr,function(acc1,x1,i2) {
			acc1[x1._1] = i2 > 0 && compare(arr[i2 - 1]._0,x1._0) == 0 ? acc1[arr[i2 - 1]._1] : i2;
			return acc1;
		},[]);
	}
};
thx_Arrays.reduce = function(array,f,initial) {
	var v = HxOverrides.iter(array);
	while(v.hasNext()) {
		var v1 = v.next();
		initial = f(initial,v1);
	}
	return initial;
};
thx_Arrays.foldLeft = function(array,init,f) {
	return thx_Arrays.reduce(array,f,init);
};
thx_Arrays.foldLeft1 = function(array,f) {
	var tail = thx_Arrays.dropLeft(array,1);
	var head = array[0];
	if(head == null) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(thx_Arrays.reduce(tail,f,head));
	}
};
thx_Arrays.foldLeftEither = function(array,init,f) {
	var acc = thx_Either.Right(init);
	var a = HxOverrides.iter(array);
	while(a.hasNext()) {
		var a1 = a.next();
		switch(acc._hx_index) {
		case 0:
			var error = acc.value;
			return acc;
		case 1:
			var b = acc.value;
			acc = f(b,a1);
			break;
		}
	}
	return acc;
};
thx_Arrays.foldMap = function(array,f,m) {
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(array[i]);
	}
	var _e = m;
	return thx_Arrays.reduce(result,function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	},thx__$Monoid_Monoid_$Impl_$.get_zero(m));
};
thx_Arrays.fold = function(array,m) {
	return thx_Arrays.foldMap(array,thx_Functions.identity,m);
};
thx_Arrays.nel = function(array) {
	return thx__$Nel_Nel_$Impl_$.fromArray(array);
};
thx_Arrays.foldS = function(array,s) {
	return thx_Options.map(thx_Arrays.nel(array),function(x) {
		return thx__$Nel_Nel_$Impl_$.fold(x,s);
	});
};
thx_Arrays.resize = function(array,length,fill) {
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_Arrays.resized = function(array,length,fill) {
	array = array.slice();
	return thx_Arrays.resize(array,length,fill);
};
thx_Arrays.reducei = function(array,f,initial) {
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,array[i],i);
	}
	return initial;
};
thx_Arrays.reduceRight = function(array,f,initial) {
	var i = array.length;
	while(--i >= 0) initial = f(initial,array[i]);
	return initial;
};
thx_Arrays.removeAll = function(array,element,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var i = array.length;
	while(--i >= 0) if(equality(array[i],element)) {
		array.splice(i,1);
	}
};
thx_Arrays.rest = function(array) {
	return array.slice(1);
};
thx_Arrays.reversed = function(array) {
	var result = array.slice();
	result.reverse();
	return result;
};
thx_Arrays.sample = function(array,n) {
	var b = array.length;
	n = n < b ? n : b;
	var copy = array.slice();
	var result = [];
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		result.push(copy.splice(Std.random(copy.length),1)[0]);
	}
	return result;
};
thx_Arrays.sampleOne = function(array) {
	return array[Std.random(array.length)];
};
thx_Arrays.string = function(arr) {
	var f = thx_Dynamics.string;
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(arr[i]);
	}
	var strings = result;
	return "[" + strings.join(", ") + "]";
};
thx_Arrays.shuffle = function(a) {
	var t = thx_Ints.range(a.length);
	var array = [];
	while(t.length > 0) {
		var pos = Std.random(t.length);
		var index = t[pos];
		t.splice(pos,1);
		array.push(a[index]);
	}
	return array;
};
thx_Arrays.split = function(array,parts) {
	var len = Math.ceil(array.length / parts);
	return thx_Arrays.splitBy(array,len);
};
thx_Arrays.splitBy = function(array,len) {
	var res = [];
	var b = array.length;
	len = len < b ? len : b;
	var _g = 0;
	var _g1 = Math.ceil(array.length / len);
	while(_g < _g1) {
		var p = _g++;
		res.push(array.slice(p * len,(p + 1) * len));
	}
	return res;
};
thx_Arrays.splitByPad = function(arr,len,pad) {
	var res = thx_Arrays.splitBy(arr,len);
	while(res[res.length - 1].length < len) res[res.length - 1].push(pad);
	return res;
};
thx_Arrays.tail = function(array) {
	return array.slice(1);
};
thx_Arrays.take = function(arr,n) {
	return arr.slice(0,n);
};
thx_Arrays.takeLast = function(arr,n) {
	return arr.slice(arr.length - n);
};
thx_Arrays.traverseOption = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Options.ap(f(t),thx_Options.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},haxe_ds_Option.Some([]));
};
thx_Arrays.traverseEither = function(arr,f) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx_Eithers.ap(f(t),thx_Eithers.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}));
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidation = function(arr,f,s) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.traverseValidationIndexed = function(arr,f,s) {
	return thx_Arrays.reducei(arr,function(acc,t,i) {
		return thx__$Validation_Validation_$Impl_$.ap(f(t,i),thx__$Validation_Validation_$Impl_$.map(acc,function(ux) {
			return function(u) {
				ux.push(u);
				return ux;
			};
		}),s);
	},thx_Either.Right([]));
};
thx_Arrays.rotate = function(arr) {
	var result = [];
	var _g = 0;
	var _g1 = arr[0].length;
	while(_g < _g1) {
		var i = _g++;
		var row = [];
		result.push(row);
		var _g2 = 0;
		var _g11 = arr.length;
		while(_g2 < _g11) {
			var j = _g2++;
			row.push(arr[j][i]);
		}
	}
	return result;
};
thx_Arrays.sliding2 = function(arr,f) {
	if(arr.length < 2) {
		return [];
	} else {
		var result = [];
		var _g = 0;
		var _g1 = arr.length - 1;
		while(_g < _g1) {
			var i = _g++;
			result.push(f(arr[i],arr[i + 1]));
		}
		return result;
	}
};
thx_Arrays.unzip = function(array) {
	var a1 = [];
	var a2 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Arrays.unzip3 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Arrays.unzip4 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Arrays.unzip5 = function(array) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	var result = new Array(array.length);
	var _g = 0;
	var _g1 = array.length;
	while(_g < _g1) {
		var i = _g++;
		var t = array[i];
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
		result[i] = null;
	}
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Arrays.zip = function(array1,array2) {
	var a = array1.length;
	var b = array2.length;
	var length = a < b ? a : b;
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip3 = function(array1,array2,array3) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip4 = function(array1,array2,array3,array4) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zip5 = function(array1,array2,array3,array4,array5) {
	var length = thx_ArrayInts.min([array1.length,array2.length,array3.length,array4.length,array5.length]);
	var array = [];
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { _0 : array1[i], _1 : array2[i], _2 : array3[i], _3 : array4[i], _4 : array5[i]};
		array.push(this1);
	}
	return array;
};
thx_Arrays.zipAp = function(ax,fx) {
	var result = [];
	var _g = 0;
	var a = ax.length;
	var b = fx.length;
	var _g1 = a < b ? a : b;
	while(_g < _g1) {
		var i = _g++;
		result.push(fx[i](ax[i]));
	}
	return result;
};
thx_Arrays.zip2Ap = function(f,ax,bx) {
	var f1 = thx_Functions2.curry(f);
	var result = new Array(ax.length);
	var _g = 0;
	var _g1 = ax.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f1(ax[i]);
	}
	return thx_Arrays.zipAp(bx,result);
};
thx_Arrays.zip3Ap = function(f,ax,bx,cx) {
	var f1 = f;
	return thx_Arrays.zipAp(cx,thx_Arrays.zip2Ap(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	},ax,bx));
};
thx_Arrays.zip4Ap = function(f,ax,bx,cx,dx) {
	var f1 = f;
	return thx_Arrays.zipAp(dx,thx_Arrays.zip3Ap(function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	},ax,bx,cx));
};
thx_Arrays.zip5Ap = function(f,ax,bx,cx,dx,ex) {
	var f1 = f;
	return thx_Arrays.zipAp(ex,thx_Arrays.zip4Ap(function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	},ax,bx,cx,dx));
};
thx_Arrays.withPrepend = function(arr,el) {
	return [el].concat(arr);
};
thx_Arrays.with = function(arr,el) {
	return arr.concat([el]);
};
thx_Arrays.withSlice = function(arr,other,start,length) {
	if(length == null) {
		length = 0;
	}
	return arr.slice(0,start).concat(other).concat(arr.slice(start + length));
};
thx_Arrays.withInsert = function(arr,el,pos) {
	return arr.slice(0,pos).concat([el]).concat(arr.slice(pos));
};
thx_Arrays.maxBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.max(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.minBy = function(arr,ord) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var _e = ord;
		return haxe_ds_Option.Some(thx_Arrays.reduce(arr,function(a0,a1) {
			return thx__$Ord_Ord_$Impl_$.min(_e,a0,a1);
		},arr[0]));
	}
};
thx_Arrays.toMap = function(arr,keyOrder) {
	var m = thx_fp_MapImpl.Tip;
	var collisions = [];
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var tuple = arr[i];
		if(thx_Options.isNone(thx_fp__$Map_Map_$Impl_$.lookup(m,tuple._0,keyOrder))) {
			m = thx_fp__$Map_Map_$Impl_$.insert(m,tuple._0,tuple._1,keyOrder);
		} else {
			collisions.push(tuple._0);
		}
	}
	return thx_Options.toFailure(thx__$Nel_Nel_$Impl_$.fromArray(collisions),m);
};
thx_Arrays.toStringMap = function(arr) {
	return thx_Arrays.reduce(arr,function(acc,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Arrays.partition = function(arr,f) {
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(f(b)) {
			a._0.push(b);
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.partitionWhile = function(arr,f) {
	var partitioning = true;
	var this1 = { _0 : [], _1 : []};
	return thx_Arrays.reduce(arr,function(a,b) {
		if(partitioning) {
			if(f(b)) {
				a._0.push(b);
			} else {
				partitioning = false;
				a._1.push(b);
			}
		} else {
			a._1.push(b);
		}
		return a;
	},this1);
};
thx_Arrays.dropLeft = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(n);
	}
};
thx_Arrays.dropRight = function(a,n) {
	if(n >= a.length) {
		return [];
	} else {
		return a.slice(0,a.length - n);
	}
};
thx_Arrays.dropWhile = function(a,p) {
	var r = [].concat(a);
	var e = HxOverrides.iter(a);
	while(e.hasNext()) {
		var e1 = e.next();
		if(p(e1)) {
			r.shift();
		} else {
			break;
		}
	}
	return r;
};
thx_Arrays.pad = function(arr,len,def) {
	var len0 = len - arr.length;
	var arr0 = [];
	var _g = 0;
	var _g1 = len0;
	while(_g < _g1) {
		var i = _g++;
		arr0.push(def);
	}
	return arr.concat(arr0);
};
thx_Arrays.fill = function(arr,def) {
	var result = new Array(arr.length);
	var _g = 0;
	var _g1 = arr.length;
	while(_g < _g1) {
		var i = _g++;
		var x = arr[i];
		result[i] = x == null ? def : x;
	}
	return result;
};
var thx_ArrayFloats = function() { };
$hxClasses["thx.ArrayFloats"] = thx_ArrayFloats;
thx_ArrayFloats.__name__ = "thx.ArrayFloats";
thx_ArrayFloats.average = function(arr) {
	return thx_ArrayFloats.sum(arr) / arr.length;
};
thx_ArrayFloats.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(null != v && isFinite(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayFloats.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Floats.order));
};
thx_ArrayFloats.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Floats.order));
};
thx_ArrayFloats.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayFloats.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0.0;
	}
	array = array.slice();
	return thx_ArrayFloats.resize(array,length,fill);
};
thx_ArrayFloats.standardDeviation = function(array) {
	if(array.length < 2) {
		return 0.0;
	}
	var mean = thx_ArrayFloats.average(array);
	var variance = thx_Arrays.reduce(array,function(acc,val) {
		return acc + Math.pow(val - mean,2);
	},0) / (array.length - 1);
	return Math.sqrt(variance);
};
thx_ArrayFloats.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0.0);
};
var thx_ArrayInts = function() { };
$hxClasses["thx.ArrayInts"] = thx_ArrayInts;
thx_ArrayInts.__name__ = "thx.ArrayInts";
thx_ArrayInts.average = function(arr) {
	return thx_ArrayInts.sum(arr) / arr.length;
};
thx_ArrayInts.max = function(arr) {
	return thx_Options.get(thx_Arrays.maxBy(arr,thx_Ints.order));
};
thx_ArrayInts.min = function(arr) {
	return thx_Options.get(thx_Arrays.minBy(arr,thx_Ints.order));
};
thx_ArrayInts.resize = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	while(array.length < length) array.push(fill);
	array.splice(length,array.length - length);
	return array;
};
thx_ArrayInts.resized = function(array,length,fill) {
	if(fill == null) {
		fill = 0;
	}
	array = array.slice();
	return thx_ArrayInts.resize(array,length,fill);
};
thx_ArrayInts.sum = function(arr) {
	return thx_Arrays.reduce(arr,function(tot,v) {
		return tot + v;
	},0);
};
var thx_ArrayStrings = function() { };
$hxClasses["thx.ArrayStrings"] = thx_ArrayStrings;
thx_ArrayStrings.__name__ = "thx.ArrayStrings";
thx_ArrayStrings.compact = function(arr) {
	var _g = [];
	var _g1 = 0;
	var _g2 = arr;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(!thx_Strings.isEmpty(v)) {
			_g.push(v);
		}
	}
	return _g;
};
thx_ArrayStrings.max = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.maxBy(arr,thx_Strings.order),null);
};
thx_ArrayStrings.min = function(arr) {
	return thx_Options.getOrElse(thx_Arrays.minBy(arr,thx_Strings.order),null);
};
var thx_Bools = function() { };
$hxClasses["thx.Bools"] = thx_Bools;
thx_Bools.__name__ = "thx.Bools";
thx_Bools.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a) {
		return -1;
	} else {
		return 1;
	}
};
thx_Bools.toInt = function(v) {
	if(v) {
		return 1;
	} else {
		return 0;
	}
};
thx_Bools.canParse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return true;
	} else {
		switch(_g) {
		case "0":case "1":case "false":case "off":case "on":case "true":
			return true;
		default:
			return false;
		}
	}
};
thx_Bools.parse = function(v) {
	var _g = v.toLowerCase();
	if(_g == null) {
		return false;
	} else {
		switch(_g) {
		case "1":case "on":case "true":
			return true;
		case "0":case "false":case "off":
			return false;
		default:
			var v1 = _g;
			throw new js__$Boot_HaxeError("unable to parse \"" + v1 + "\"");
		}
	}
};
thx_Bools.xor = function(a,b) {
	return a != b;
};
thx_Bools.option = function(cond,a) {
	if(cond) {
		return haxe_ds_Option.Some(a);
	} else {
		return haxe_ds_Option.None;
	}
};
var thx__$Ord_Ord_$Impl_$ = {};
$hxClasses["thx._Ord.Ord_Impl_"] = thx__$Ord_Ord_$Impl_$;
thx__$Ord_Ord_$Impl_$.__name__ = "thx._Ord.Ord_Impl_";
thx__$Ord_Ord_$Impl_$.order = function(this1,a0,a1) {
	return this1(a0,a1);
};
thx__$Ord_Ord_$Impl_$.max = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a0;
	case 0:case 2:
		return a1;
	}
};
thx__$Ord_Ord_$Impl_$.min = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 1:
		return a1;
	case 0:case 2:
		return a0;
	}
};
thx__$Ord_Ord_$Impl_$.equal = function(this1,a0,a1) {
	return this1(a0,a1) == thx_OrderingImpl.EQ;
};
thx__$Ord_Ord_$Impl_$.contramap = function(this1,f) {
	return function(b0,b1) {
		var tmp = f(b0);
		var tmp1 = f(b1);
		return this1(tmp,tmp1);
	};
};
thx__$Ord_Ord_$Impl_$.inverse = function(this1) {
	return function(a0,a1) {
		return this1(a1,a0);
	};
};
thx__$Ord_Ord_$Impl_$.intComparison = function(this1,a0,a1) {
	switch(this1(a0,a1)._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
thx__$Ord_Ord_$Impl_$.fromIntComparison = function(f) {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(f(a,b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparable = function() {
	return function(a,b) {
		return thx__$Ord_Ordering_$Impl_$.fromInt(a.compareTo(b));
	};
};
thx__$Ord_Ord_$Impl_$.forComparableOrd = function() {
	return function(a,b) {
		return a.compareTo(b);
	};
};
var thx__$Ord_Ordering_$Impl_$ = {};
$hxClasses["thx._Ord.Ordering_Impl_"] = thx__$Ord_Ordering_$Impl_$;
thx__$Ord_Ordering_$Impl_$.__name__ = "thx._Ord.Ordering_Impl_";
thx__$Ord_Ordering_$Impl_$.fromInt = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.fromFloat = function(value) {
	if(value < 0) {
		return thx_OrderingImpl.LT;
	} else if(value > 0) {
		return thx_OrderingImpl.GT;
	} else {
		return thx_OrderingImpl.EQ;
	}
};
thx__$Ord_Ordering_$Impl_$.toInt = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return -1;
	case 1:
		return 1;
	case 2:
		return 0;
	}
};
var thx_OrderingImpl = $hxEnums["thx.OrderingImpl"] = { __ename__ : "thx.OrderingImpl", __constructs__ : ["LT","GT","EQ"]
	,LT: {_hx_index:0,__enum__:"thx.OrderingImpl",toString:$estr}
	,GT: {_hx_index:1,__enum__:"thx.OrderingImpl",toString:$estr}
	,EQ: {_hx_index:2,__enum__:"thx.OrderingImpl",toString:$estr}
};
var thx_Dates = function() { };
$hxClasses["thx.Dates"] = thx_Dates;
thx_Dates.__name__ = "thx.Dates";
thx_Dates.compare = function(a,b) {
	var a1 = a.getTime();
	var b1 = b.getTime();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Dates.create = function(year,month,day,hour,minute,second) {
	if(second == null) {
		second = 0;
	}
	if(minute == null) {
		minute = 0;
	}
	if(hour == null) {
		hour = 0;
	}
	if(day == null) {
		day = 1;
	}
	if(month == null) {
		month = 0;
	}
	minute += Math.floor(second / 60);
	second %= 60;
	if(second < 0) {
		second += 60;
	}
	hour += Math.floor(minute / 60);
	minute %= 60;
	if(minute < 0) {
		minute += 60;
	}
	day += Math.floor(hour / 24);
	hour %= 24;
	if(hour < 0) {
		hour += 24;
	}
	if(day == 0) {
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = thx_Dates.daysInMonth(year,month);
	}
	year += Math.floor(month / 12);
	month %= 12;
	if(month < 0) {
		month += 12;
	}
	var days = thx_Dates.daysInMonth(year,month);
	while(day > days) {
		if(day > days) {
			day -= days;
			++month;
		}
		if(month > 11) {
			month -= 12;
			++year;
		}
		days = thx_Dates.daysInMonth(year,month);
	}
	return new Date(year,month,day,hour,minute,second);
};
thx_Dates.daysRange = function(start,end) {
	if(thx_Dates.compare(end,start) < 0) {
		return [];
	}
	var days = [];
	while(!thx_Dates.sameDay(start,end)) {
		days.push(start);
		start = thx_Dates.jump(start,thx_TimePeriod.Day,1);
	}
	days.push(end);
	return days;
};
thx_Dates.equals = function(self,other) {
	return self.getTime() == other.getTime();
};
thx_Dates.nearEquals = function(self,other,units,period) {
	if(units == null) {
		units = 1;
	}
	if(null == period) {
		period = thx_TimePeriod.Second;
	}
	if(units < 0) {
		units = -units;
	}
	var min = thx_Dates.jump(self,period,-units);
	var max = thx_Dates.jump(self,period,units);
	if(thx_Dates.compare(min,other) <= 0) {
		return thx_Dates.compare(max,other) >= 0;
	} else {
		return false;
	}
};
thx_Dates.greater = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.more = function(self,other) {
	return thx_Dates.compare(self,other) > 0;
};
thx_Dates.less = function(self,other) {
	return thx_Dates.compare(self,other) < 0;
};
thx_Dates.greaterEquals = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.moreEqual = function(self,other) {
	return thx_Dates.compare(self,other) >= 0;
};
thx_Dates.lessEquals = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.lessEqual = function(self,other) {
	return thx_Dates.compare(self,other) <= 0;
};
thx_Dates.isLeapYear = function(year) {
	if(year % 4 != 0) {
		return false;
	}
	if(year % 100 == 0) {
		return year % 400 == 0;
	}
	return true;
};
thx_Dates.isInLeapYear = function(d) {
	return thx_Dates.isLeapYear(d.getFullYear());
};
thx_Dates.daysInMonth = function(year,month) {
	switch(month) {
	case 1:
		if(thx_Dates.isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
		break;
	case 0:case 2:case 4:case 6:case 7:case 9:case 11:
		return 31;
	case 3:case 5:case 8:case 10:
		return 30;
	default:
		throw new js__$Boot_HaxeError("Invalid month \"" + month + "\".  Month should be a number, Jan=0, Dec=11");
	}
};
thx_Dates.numDaysInMonth = function(month,year) {
	return thx_Dates.daysInMonth(year,month);
};
thx_Dates.daysInThisMonth = function(d) {
	return thx_Dates.daysInMonth(d.getFullYear(),d.getMonth());
};
thx_Dates.numDaysInThisMonth = function(d) {
	return thx_Dates.daysInThisMonth(d);
};
thx_Dates.sameYear = function(self,other) {
	return self.getFullYear() == other.getFullYear();
};
thx_Dates.sameMonth = function(self,other) {
	if(thx_Dates.sameYear(self,other)) {
		return self.getMonth() == other.getMonth();
	} else {
		return false;
	}
};
thx_Dates.sameDay = function(self,other) {
	if(thx_Dates.sameMonth(self,other)) {
		return self.getDate() == other.getDate();
	} else {
		return false;
	}
};
thx_Dates.sameHour = function(self,other) {
	if(thx_Dates.sameDay(self,other)) {
		return self.getHours() == other.getHours();
	} else {
		return false;
	}
};
thx_Dates.sameMinute = function(self,other) {
	if(thx_Dates.sameHour(self,other)) {
		return self.getMinutes() == other.getMinutes();
	} else {
		return false;
	}
};
thx_Dates.snapNext = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapNext(date.getTime(),period));
};
thx_Dates.snapPrev = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapPrev(date.getTime(),period));
};
thx_Dates.snapTo = function(date,period) {
	return new Date(thx__$Timestamp_Timestamp_$Impl_$.snapTo(date.getTime(),period));
};
thx_Dates.jump = function(date,period,amount) {
	var sec = date.getSeconds();
	var min = date.getMinutes();
	var hour = date.getHours();
	var day = date.getDate();
	var month = date.getMonth();
	var year = date.getFullYear();
	switch(period._hx_index) {
	case 0:
		sec += amount;
		break;
	case 1:
		min += amount;
		break;
	case 2:
		hour += amount;
		break;
	case 3:
		day += amount;
		break;
	case 4:
		day += amount * 7;
		break;
	case 5:
		month += amount;
		break;
	case 6:
		year += amount;
		break;
	}
	return thx_Dates.create(year,month,day,hour,min,sec);
};
thx_Dates.max = function(self,other) {
	if(self.getTime() > other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.min = function(self,other) {
	if(self.getTime() < other.getTime()) {
		return self;
	} else {
		return other;
	}
};
thx_Dates.snapToWeekDay = function(date,day,firstDayOfWk) {
	if(firstDayOfWk == null) {
		firstDayOfWk = 0;
	}
	var d = date.getDay();
	var s = day;
	if(s < firstDayOfWk) {
		s += 7;
	}
	if(d < firstDayOfWk) {
		d += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapNextWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s < d) {
		s += 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.snapPrevWeekDay = function(date,day) {
	var d = date.getDay();
	var s = day;
	if(s > d) {
		s -= 7;
	}
	return thx_Dates.jump(date,thx_TimePeriod.Day,s - d);
};
thx_Dates.prevYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,-1);
};
thx_Dates.nextYear = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Year,1);
};
thx_Dates.prevMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,-1);
};
thx_Dates.nextMonth = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Month,1);
};
thx_Dates.prevWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,-1);
};
thx_Dates.nextWeek = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Week,1);
};
thx_Dates.prevDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,-1);
};
thx_Dates.nextDay = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Day,1);
};
thx_Dates.prevHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,-1);
};
thx_Dates.nextHour = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Hour,1);
};
thx_Dates.prevMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,-1);
};
thx_Dates.nextMinute = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Minute,1);
};
thx_Dates.prevSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,-1);
};
thx_Dates.nextSecond = function(d) {
	return thx_Dates.jump(d,thx_TimePeriod.Second,1);
};
thx_Dates.withYear = function(date,year) {
	return thx_Dates.create(year,date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withMonth = function(date,month) {
	return thx_Dates.create(date.getFullYear(),month,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withDay = function(date,day) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),day,date.getHours(),date.getMinutes(),date.getSeconds());
};
thx_Dates.withHour = function(date,hour) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),hour,date.getMinutes(),date.getSeconds());
};
thx_Dates.withMinute = function(date,minute) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),minute,date.getSeconds());
};
thx_Dates.withSecond = function(date,second) {
	return thx_Dates.create(date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),second);
};
thx_Dates.parseDate = function(s) {
	try {
		return thx_Either.Right(HxOverrides.strDate(s));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return thx_Either.Left("" + s + " could not be parsed to a valid Date value.");
	}
};
var thx_Dynamics = function() { };
$hxClasses["thx.Dynamics"] = thx_Dynamics;
thx_Dynamics.__name__ = "thx.Dynamics";
thx_Dynamics.equals = function(a,b) {
	if(!thx_Types.sameType(a,b)) {
		return false;
	}
	if(a == b) {
		return true;
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 0:case 1:case 2:case 3:
		return false;
	case 4:
		var fa = Reflect.fields(a);
		var fb = Reflect.fields(b);
		var _g1 = 0;
		while(_g1 < fa.length) {
			var field = fa[_g1];
			++_g1;
			HxOverrides.remove(fb,field);
			if(!Object.prototype.hasOwnProperty.call(b,field)) {
				return false;
			}
			var va = Reflect.field(a,field);
			if(Reflect.isFunction(va)) {
				continue;
			}
			var vb = Reflect.field(b,field);
			if(!thx_Dynamics.equals(va,vb)) {
				return false;
			}
		}
		if(fb.length > 0) {
			return false;
		}
		var t = false;
		t = thx_Iterators.isIterator(a);
		if(t || thx_Iterables.isIterable(a)) {
			if(t && !thx_Iterators.isIterator(b)) {
				return false;
			}
			if(!t && !thx_Iterables.isIterable(b)) {
				return false;
			}
			var aa = t ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var ab = t ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(aa.length != ab.length) {
				return false;
			}
			var _g11 = 0;
			var _g2 = aa.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(!thx_Dynamics.equals(aa[i],ab[i])) {
					return false;
				}
			}
			return true;
		}
		return true;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var c = _g.c;
		var ca = c.__name__;
		var c1 = js_Boot.getClass(b);
		var cb = c1.__name__;
		if(ca != cb) {
			return false;
		}
		if(typeof(a) == "string") {
			return false;
		}
		if(((a) instanceof Array)) {
			var aa1 = a;
			var ab1 = b;
			if(aa1.length != ab1.length) {
				return false;
			}
			var _g3 = 0;
			var _g12 = aa1.length;
			while(_g3 < _g12) {
				var i1 = _g3++;
				if(!thx_Dynamics.equals(aa1[i1],ab1[i1])) {
					return false;
				}
			}
			return true;
		}
		if(((a) instanceof Date)) {
			return a.getTime() == b.getTime();
		}
		if(js_Boot.__implements(a,haxe_IMap)) {
			var ha = a;
			var hb = b;
			var ka = thx_Iterators.toArray(ha.keys());
			var kb = thx_Iterators.toArray(hb.keys());
			if(ka.length != kb.length) {
				return false;
			}
			var _g4 = 0;
			while(_g4 < ka.length) {
				var key = ka[_g4];
				++_g4;
				if(!hb.exists(key) || !thx_Dynamics.equals(ha.get(key),hb.get(key))) {
					return false;
				}
			}
			return true;
		}
		var t1 = false;
		t1 = thx_Iterators.isIterator(a);
		if(t1 || thx_Iterables.isIterable(a)) {
			var va1 = t1 ? thx_Iterators.toArray(a) : thx_Iterators.toArray($getIterator(a));
			var vb1 = t1 ? thx_Iterators.toArray(b) : thx_Iterators.toArray($getIterator(b));
			if(va1.length != vb1.length) {
				return false;
			}
			var _g5 = 0;
			var _g13 = va1.length;
			while(_g5 < _g13) {
				var i2 = _g5++;
				if(!thx_Dynamics.equals(va1[i2],vb1[i2])) {
					return false;
				}
			}
			return true;
		}
		var f = null;
		var tmp;
		if(Object.prototype.hasOwnProperty.call(a,"equals")) {
			f = Reflect.field(a,"equals");
			tmp = Reflect.isFunction(f);
		} else {
			tmp = false;
		}
		if(tmp) {
			return f.apply(a,[b]);
		}
		var fields = Type.getInstanceFields(js_Boot.getClass(a));
		var _g6 = 0;
		while(_g6 < fields.length) {
			var field1 = fields[_g6];
			++_g6;
			var va2 = Reflect.field(a,field1);
			if(Reflect.isFunction(va2)) {
				continue;
			}
			var vb2 = Reflect.field(b,field1);
			if(!thx_Dynamics.equals(va2,vb2)) {
				return false;
			}
		}
		return true;
	case 7:
		var e = _g.e;
		var ea = e.__ename__;
		var teb = Type.getEnum(b);
		var eb = teb.__ename__;
		if(ea != eb) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var pa = Type.enumParameters(a);
		var pb = Type.enumParameters(b);
		var _g7 = 0;
		var _g14 = pa.length;
		while(_g7 < _g14) {
			var i3 = _g7++;
			if(!thx_Dynamics.equals(pa[i3],pb[i3])) {
				return false;
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
	}
};
thx_Dynamics.clone = function(v,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return null;
	case 1:case 2:case 3:case 5:case 8:
		return v;
	case 4:
		return thx_Objects.copyTo(v,{ });
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			var _this = v;
			var result = new Array(_this.length);
			var _g1 = 0;
			var _g11 = _this.length;
			while(_g1 < _g11) {
				var i = _g1++;
				result[i] = thx_Dynamics.clone(_this[i],cloneInstances);
			}
			return result;
		case "Date":case "String":
			return v;
		default:
			if(cloneInstances) {
				var o = Object.create(c.prototype);
				var _g2 = 0;
				var _g12 = Type.getInstanceFields(c);
				while(_g2 < _g12.length) {
					var field = _g12[_g2];
					++_g2;
					o[field] = thx_Dynamics.clone(Reflect.field(v,field),cloneInstances);
				}
				return o;
			} else {
				return v;
			}
		}
		break;
	case 7:
		var _g13 = _g.e;
		return v;
	}
};
thx_Dynamics.compare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	}
	if(null == b) {
		return 1;
	}
	if(!thx_Types.sameType(a,b)) {
		var a1 = thx_Types.toString(Type.typeof(a));
		var b1 = thx_Types.toString(Type.typeof(b));
		if(a1 < b1) {
			return -1;
		} else if(a1 > b1) {
			return 1;
		} else {
			return 0;
		}
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 1:
		return thx_Ints.compare(a,b);
	case 2:
		var a2 = a;
		var b2 = b;
		if(a2 < b2) {
			return -1;
		} else if(a2 > b2) {
			return 1;
		} else {
			return 0;
		}
		break;
	case 3:
		return thx_Bools.compare(a,b);
	case 4:
		return thx_Objects.compare(a,b);
	case 6:
		var c = _g.c;
		var name = c.__name__;
		switch(name) {
		case "Array":
			return thx_Arrays.compare(a,b);
		case "Date":
			return thx_Dates.compare(a,b);
		case "String":
			var a3 = a;
			var b3 = b;
			if(a3 < b3) {
				return -1;
			} else if(a3 > b3) {
				return 1;
			} else {
				return 0;
			}
			break;
		default:
			if(Object.prototype.hasOwnProperty.call(a,"compare")) {
				return Reflect.field(a,"compare").apply(a,[b]);
			} else {
				var a4 = Std.string(a);
				var b4 = Std.string(b);
				if(a4 < b4) {
					return -1;
				} else if(a4 > b4) {
					return 1;
				} else {
					return 0;
				}
			}
		}
		break;
	case 7:
		var e = _g.e;
		return thx_Enums.compare(a,b);
	default:
		return 0;
	}
};
thx_Dynamics.string = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "null";
	case 1:case 2:case 3:
		return "" + Std.string(v);
	case 4:
		return thx_Objects.string(v);
	case 5:
		return "<function>";
	case 6:
		var c = _g.c;
		switch(c.__name__) {
		case "Array":
			return thx_Arrays.string(v);
		case "Date":
			return HxOverrides.dateStr(v);
		case "String":
			return v;
		default:
			if(js_Boot.__implements(v,haxe_IMap)) {
				return thx_Maps.string(v);
			} else {
				return Std.string(v);
			}
		}
		break;
	case 7:
		var e = _g.e;
		return thx_Enums.string(v);
	case 8:
		return "<unknown>";
	}
};
var thx_DynamicsT = function() { };
$hxClasses["thx.DynamicsT"] = thx_DynamicsT;
thx_DynamicsT.__name__ = "thx.DynamicsT";
thx_DynamicsT.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_DynamicsT.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_DynamicsT.fields = function(o) {
	return Reflect.fields(o);
};
thx_DynamicsT.merge = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_DynamicsT.size = function(o) {
	return Reflect.fields(o).length;
};
thx_DynamicsT.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_DynamicsT.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
var thx_Either = $hxEnums["thx.Either"] = { __ename__ : "thx.Either", __constructs__ : ["Left","Right"]
	,Left: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
	,Right: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"thx.Either",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var thx_Eithers = function() { };
$hxClasses["thx.Eithers"] = thx_Eithers;
thx_Eithers.__name__ = "thx.Eithers";
thx_Eithers.isLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return true;
	case 1:
		var _g1 = either.value;
		return false;
	}
};
thx_Eithers.isRight = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return false;
	case 1:
		var _g1 = either.value;
		return true;
	}
};
thx_Eithers.toLeft = function(either) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return haxe_ds_Option.Some(v);
	case 1:
		var _g1 = either.value;
		return haxe_ds_Option.None;
	}
};
thx_Eithers.toRight = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return haxe_ds_Option.None;
	case 1:
		var v = either.value;
		return haxe_ds_Option.Some(v);
	}
};
thx_Eithers.toLeftUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return v;
	case 1:
		var _g1 = either.value;
		return null;
	}
};
thx_Eithers.toRightUnsafe = function(either) {
	switch(either._hx_index) {
	case 0:
		var _g = either.value;
		return null;
	case 1:
		var v = either.value;
		return v;
	}
};
thx_Eithers.map = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(v);
	case 1:
		var v1 = either.value;
		return thx_Either.Right(f(v1));
	}
};
thx_Eithers.ap = function(either,fa) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		return thx_Either.Left(l);
	case 1:
		var v = either.value;
		return thx_Eithers.map(fa,function(f) {
			return f(v);
		});
	}
};
thx_Eithers.flatMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(v);
	case 1:
		var v1 = either.value;
		return f(v1);
	}
};
thx_Eithers.leftMap = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		return thx_Either.Left(f(v));
	case 1:
		var v1 = either.value;
		return thx_Either.Right(v1);
	}
};
thx_Eithers.orThrow = function(either,message) {
	switch(either._hx_index) {
	case 0:
		var v = either.value;
		throw new thx_Error("" + message + ": " + Std.string(v),null,{ fileName : "thx/Eithers.hx", lineNumber : 104, className : "thx.Eithers", methodName : "orThrow"});
	case 1:
		var v1 = either.value;
		return v1;
	}
};
thx_Eithers.toValidation = function(either) {
	return either;
};
thx_Eithers.toVNel = function(either) {
	return thx_Eithers.leftMap(either,thx__$Nel_Nel_$Impl_$.pure);
};
thx_Eithers.cata = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return l(l0);
	case 1:
		var r0 = either.value;
		return r(r0);
	}
};
thx_Eithers.bimap = function(either,l,r) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return thx_Either.Left(l(l0));
	case 1:
		var r0 = either.value;
		return thx_Either.Right(r(r0));
	}
};
thx_Eithers.foldLeft = function(either,a,f) {
	switch(either._hx_index) {
	case 0:
		var l0 = either.value;
		return a;
	case 1:
		var r0 = either.value;
		return f(a,r0);
	}
};
thx_Eithers.foldMap = function(either,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Eithers.foldLeft(thx_Eithers.map(either,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Eithers.getOrElse = function(e0,v) {
	switch(e0._hx_index) {
	case 0:
		var _g = e0.value;
		return v;
	case 1:
		var v1 = e0.value;
		return v1;
	}
};
thx_Eithers.getOrElseF = function(e0,f) {
	switch(e0._hx_index) {
	case 0:
		var _g = e0.value;
		return f();
	case 1:
		var v = e0.value;
		return v;
	}
};
thx_Eithers.orElse = function(e0,e1) {
	if(e0._hx_index == 0) {
		var e = e0.value;
		return e1;
	} else {
		var r = e0;
		return r;
	}
};
thx_Eithers.orElseF = function(e0,f) {
	if(e0._hx_index == 0) {
		var e = e0.value;
		return f();
	} else {
		var r = e0;
		return r;
	}
};
thx_Eithers.each = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		break;
	case 1:
		var r = either.value;
		f(r);
		break;
	}
	return;
};
thx_Eithers.eachLeft = function(either,f) {
	switch(either._hx_index) {
	case 0:
		var l = either.value;
		f(l);
		break;
	case 1:
		var r = either.value;
		break;
	}
	return;
};
thx_Eithers.ensure = function(either,p,error) {
	if(either._hx_index == 1) {
		var a = either.value;
		if(p(a)) {
			return either;
		} else {
			return thx_Either.Left(error);
		}
	} else {
		return either;
	}
};
thx_Eithers.exists = function(either,p) {
	if(either._hx_index == 1) {
		var a = either.value;
		return p(a);
	} else {
		return false;
	}
};
thx_Eithers.forall = function(either,p) {
	if(either._hx_index == 1) {
		var a = either.value;
		return p(a);
	} else {
		return true;
	}
};
var thx__$Eithers_EitherK_$Impl_$ = {};
$hxClasses["thx._Eithers.EitherK_Impl_"] = thx__$Eithers_EitherK_$Impl_$;
thx__$Eithers_EitherK_$Impl_$.__name__ = "thx._Eithers.EitherK_Impl_";
thx__$Eithers_EitherK_$Impl_$.apply = function(this1,a) {
	return this1(a);
};
thx__$Eithers_EitherK_$Impl_$.compose = function(this1,f) {
	return function(a0) {
		return thx_Eithers.flatMap(thx__$Eithers_EitherK_$Impl_$.apply(f,a0),this1);
	};
};
thx__$Eithers_EitherK_$Impl_$.andThen = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		var _e = f;
		return thx_Eithers.flatMap(tmp,function(a1) {
			return thx__$Eithers_EitherK_$Impl_$.apply(_e,a1);
		});
	};
};
thx__$Eithers_EitherK_$Impl_$.pure = function(r) {
	return function(a) {
		return thx_Either.Right(r);
	};
};
thx__$Eithers_EitherK_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Eithers_EitherK_$Impl_$.flatMap(this1,function(v) {
		return thx__$Eithers_EitherK_$Impl_$.pure(fb(v));
	});
};
thx__$Eithers_EitherK_$Impl_$.ap = function(this1,e) {
	return thx__$Eithers_EitherK_$Impl_$.flatMap(this1,function(r) {
		return thx__$Eithers_EitherK_$Impl_$.map(e,function(f) {
			return f(r);
		});
	});
};
thx__$Eithers_EitherK_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		return thx_Eithers.flatMap(this1(a),function(r) {
			return thx__$Eithers_EitherK_$Impl_$.apply(f(r),a);
		});
	};
};
thx__$Eithers_EitherK_$Impl_$.monoid = function() {
	return { zero : function(r) {
		return thx_Either.Right(r);
	}, append : function(f0,f1) {
		return function(r1) {
			var tmp = thx__$Eithers_EitherK_$Impl_$.apply(f0,r1);
			var _e = f1;
			return thx_Eithers.flatMap(tmp,function(a) {
				return thx__$Eithers_EitherK_$Impl_$.apply(_e,a);
			});
		};
	}};
};
var thx_Enums = function() { };
$hxClasses["thx.Enums"] = thx_Enums;
thx_Enums.__name__ = "thx.Enums";
thx_Enums.string = function(e) {
	var cons = $hxEnums[e.__enum__].__constructs__[e._hx_index];
	var params = [];
	var _g = 0;
	var _g1 = Type.enumParameters(e);
	while(_g < _g1.length) {
		var param = _g1[_g];
		++_g;
		params.push(thx_Dynamics.string(param));
	}
	return cons + (params.length == 0 ? "" : "(" + params.join(", ") + ")");
};
thx_Enums.compare = function(a,b) {
	var v = thx_Ints.compare(a._hx_index,b._hx_index);
	if(v != 0) {
		return v;
	}
	return thx_Arrays.compare(Type.enumParameters(a),Type.enumParameters(b));
};
thx_Enums.sameConstructor = function(a,b) {
	return a._hx_index == b._hx_index;
};
thx_Enums.min = function(a,b) {
	if(thx_Enums.compare(a,b) < 0) {
		return a;
	} else {
		return b;
	}
};
thx_Enums.max = function(a,b) {
	if(thx_Enums.compare(a,b) > 0) {
		return a;
	} else {
		return b;
	}
};
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e2 ) {
				haxe_CallStack.lastException = e2;
				var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
$hxClasses["thx.Error"] = thx_Error;
thx_Error.__name__ = "thx.Error";
thx_Error.fromDynamic = function(err,pos) {
	if(((err) instanceof thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	pos: null
	,stackItems: null
	,toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Floats = function() { };
$hxClasses["thx.Floats"] = thx_Floats;
thx_Floats.__name__ = "thx.Floats";
thx_Floats.angleDifference = function(a,b,turn) {
	if(turn == null) {
		turn = 360.0;
	}
	var r = (b - a) % turn;
	if(r < 0) {
		r += turn;
	}
	if(r > turn / 2) {
		r -= turn;
	}
	return r;
};
thx_Floats.ceilTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.ceil(f * p) / p;
};
thx_Floats.canParse = function(s) {
	if(!(thx_Floats.pattern_parse.match(s) || thx_Floats.pattern_inf.match(s))) {
		return thx_Floats.pattern_neg_inf.match(s);
	} else {
		return true;
	}
};
thx_Floats.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Floats.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Floats.floorTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.floor(f * p) / p;
};
thx_Floats.interpolate = function(f,a,b) {
	return (b - a) * f + a;
};
thx_Floats.interpolateAngle = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,a + thx_Floats.angleDifference(a,b,turn)),turn);
};
thx_Floats.interpolateAngleWidest = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolateAngle(f,a,b,turn) - turn / 2,turn);
};
thx_Floats.interpolateAngleCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b < a) {
		b += turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.interpolateAngleCCW = function(f,a,b,turn) {
	if(turn == null) {
		turn = 360;
	}
	a = thx_Floats.wrapCircular(a,turn);
	b = thx_Floats.wrapCircular(b,turn);
	if(b > a) {
		b -= turn;
	}
	return thx_Floats.wrapCircular(thx_Floats.interpolate(f,a,b),turn);
};
thx_Floats.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Floats.nearEquals = function(a,b,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(isFinite(a)) {
		return Math.abs(a - b) <= tollerance;
	}
	if(isNaN(a)) {
		return isNaN(b);
	}
	if(isNaN(b)) {
		return false;
	}
	if(!isFinite(b)) {
		return a > 0 == b > 0;
	}
	return false;
};
thx_Floats.nearEqualAngles = function(a,b,turn,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(turn == null) {
		turn = 360.0;
	}
	return Math.abs(thx_Floats.angleDifference(a,b,turn)) <= tollerance;
};
thx_Floats.nearZero = function(n,tollerance) {
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	return Math.abs(n) <= tollerance;
};
thx_Floats.normalize = function(v) {
	if(v < 0) {
		return 0;
	} else if(v > 1) {
		return 1;
	} else {
		return v;
	}
};
thx_Floats.parse = function(s) {
	if(s.substring(0,1) == "+") {
		s = s.substring(1);
	}
	if(thx_Floats.pattern_inf.match(s)) {
		return Infinity;
	} else if(thx_Floats.pattern_neg_inf.match(s)) {
		return -Infinity;
	} else {
		return parseFloat(s);
	}
};
thx_Floats.root = function(base,index) {
	return Math.pow(base,1 / index);
};
thx_Floats.roundTo = function(f,decimals) {
	var p = Math.pow(10,decimals);
	return Math.round(f * p) / p;
};
thx_Floats.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Floats.toString = function(v) {
	return "" + v;
};
thx_Floats.toFloat = function(s) {
	return thx_Floats.parse(s);
};
thx_Floats.trunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.ftrunc = function(value) {
	if(value < 0.0) {
		return Math.ceil(value);
	} else {
		return Math.floor(value);
	}
};
thx_Floats.wrap = function(v,min,max) {
	var range = max - min + 1;
	if(v < min) {
		v += range * ((min - v) / range + 1);
	}
	return min + (v - min) % range;
};
thx_Floats.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_Functions0 = function() { };
$hxClasses["thx.Functions0"] = thx_Functions0;
thx_Functions0.__name__ = "thx.Functions0";
thx_Functions0.after = function(callback,n) {
	return function() {
		if((n -= 1) == 0) {
			callback();
		}
	};
};
thx_Functions0.join = function(fa,fb) {
	return function() {
		fa();
		fb();
	};
};
thx_Functions0.memoize = function(callback) {
	var result = null;
	return function() {
		if(result == null) {
			result = callback();
		}
		return result;
	};
};
thx_Functions0.once = function(f) {
	return function() {
		var t = f;
		f = thx_Functions.noop;
		t();
	};
};
thx_Functions0.negate = function(callback) {
	return function() {
		return !callback();
	};
};
thx_Functions0.times = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback();
		}
		return result;
	};
};
thx_Functions0.timesi = function(n,callback) {
	return function() {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(_this[i]);
		}
		return result;
	};
};
var thx_Functions1 = function() { };
$hxClasses["thx.Functions1"] = thx_Functions1;
thx_Functions1.__name__ = "thx.Functions1";
thx_Functions1.compose = function(fa,fb) {
	return function(v) {
		var tmp = fb(v);
		return fa(tmp);
	};
};
thx_Functions1.map = function(fab,fbc) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.contramap = function(fbc,fab) {
	return function(a) {
		var tmp = fab(a);
		return fbc(tmp);
	};
};
thx_Functions1.join = function(fa,fb) {
	return function(v) {
		fa(v);
		fb(v);
	};
};
thx_Functions1.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v) {
			return "" + Std.string(v);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v1) {
		var key = resolver(v1);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v1);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions1.negate = function(callback) {
	return function(v) {
		return !callback(v);
	};
};
thx_Functions1.noop = function(_) {
};
thx_Functions1.times = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value);
		}
		return result;
	};
};
thx_Functions1.timesi = function(n,callback) {
	return function(value) {
		var _this = thx_Ints.range(n);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = callback(value,_this[i]);
		}
		return result;
	};
};
thx_Functions1.swapArguments = function(callback) {
	return function(a2,a1) {
		return callback(a1,a2);
	};
};
var thx_Functions2 = function() { };
$hxClasses["thx.Functions2"] = thx_Functions2;
thx_Functions2.__name__ = "thx.Functions2";
thx_Functions2.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2) {
			return "" + Std.string(v1) + ":" + Std.string(v2);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21) {
		var key = resolver(v11,v21);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions2.curry = function(f) {
	return function(a) {
		return function(b) {
			return f(a,b);
		};
	};
};
thx_Functions2.join = function(fa,fb) {
	return function(v1,v2) {
		fa(v1,v2);
		fb(v1,v2);
	};
};
thx_Functions2.negate = function(callback) {
	return function(v1,v2) {
		return !callback(v1,v2);
	};
};
var thx_Functions3 = function() { };
$hxClasses["thx.Functions3"] = thx_Functions3;
thx_Functions3.__name__ = "thx.Functions3";
thx_Functions3.memoize = function(callback,resolver) {
	if(null == resolver) {
		resolver = function(v1,v2,v3) {
			return "" + Std.string(v1) + ":" + Std.string(v2) + ":" + Std.string(v3);
		};
	}
	var map = new haxe_ds_StringMap();
	return function(v11,v21,v31) {
		var key = resolver(v11,v21,v31);
		if(__map_reserved[key] != null ? map.existsReserved(key) : map.h.hasOwnProperty(key)) {
			return __map_reserved[key] != null ? map.getReserved(key) : map.h[key];
		}
		var result = callback(v11,v21,v31);
		if(__map_reserved[key] != null) {
			map.setReserved(key,result);
		} else {
			map.h[key] = result;
		}
		return result;
	};
};
thx_Functions3.negate = function(callback) {
	return function(v1,v2,v3) {
		return !callback(v1,v2,v3);
	};
};
thx_Functions3.curry = function(f) {
	return function(a,b) {
		return function(c) {
			return f(a,b,c);
		};
	};
};
var thx_Functions4 = function() { };
$hxClasses["thx.Functions4"] = thx_Functions4;
thx_Functions4.__name__ = "thx.Functions4";
thx_Functions4.curry = function(f) {
	return function(a,b,c) {
		return function(d) {
			return f(a,b,c,d);
		};
	};
};
var thx_Functions5 = function() { };
$hxClasses["thx.Functions5"] = thx_Functions5;
thx_Functions5.__name__ = "thx.Functions5";
thx_Functions5.curry = function(f) {
	return function(a,b,c,d) {
		return function(e) {
			return f(a,b,c,d,e);
		};
	};
};
var thx_Functions6 = function() { };
$hxClasses["thx.Functions6"] = thx_Functions6;
thx_Functions6.__name__ = "thx.Functions6";
thx_Functions6.curry = function(f) {
	return function(a,b,c,d,e) {
		return function(f0) {
			return f(a,b,c,d,e,f0);
		};
	};
};
var thx_Functions7 = function() { };
$hxClasses["thx.Functions7"] = thx_Functions7;
thx_Functions7.__name__ = "thx.Functions7";
thx_Functions7.curry = function(f) {
	return function(a,b,c,d,e,f0) {
		return function(g) {
			return f(a,b,c,d,e,f0,g);
		};
	};
};
var thx_Functions8 = function() { };
$hxClasses["thx.Functions8"] = thx_Functions8;
thx_Functions8.__name__ = "thx.Functions8";
thx_Functions8.curry = function(f) {
	return function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f(a,b,c,d,e,f0,g,h);
		};
	};
};
var thx_Functions9 = function() { };
$hxClasses["thx.Functions9"] = thx_Functions9;
thx_Functions9.__name__ = "thx.Functions9";
thx_Functions9.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f(a,b,c,d,e,f0,g,h,i);
		};
	};
};
var thx_Functions10 = function() { };
$hxClasses["thx.Functions10"] = thx_Functions10;
thx_Functions10.__name__ = "thx.Functions10";
thx_Functions10.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f(a,b,c,d,e,f0,g,h,i,j);
		};
	};
};
var thx_Functions11 = function() { };
$hxClasses["thx.Functions11"] = thx_Functions11;
thx_Functions11.__name__ = "thx.Functions11";
thx_Functions11.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
};
var thx_Functions12 = function() { };
$hxClasses["thx.Functions12"] = thx_Functions12;
thx_Functions12.__name__ = "thx.Functions12";
thx_Functions12.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
};
var thx_Functions13 = function() { };
$hxClasses["thx.Functions13"] = thx_Functions13;
thx_Functions13.__name__ = "thx.Functions13";
thx_Functions13.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
};
var thx_Functions14 = function() { };
$hxClasses["thx.Functions14"] = thx_Functions14;
thx_Functions14.__name__ = "thx.Functions14";
thx_Functions14.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
};
var thx_Functions15 = function() { };
$hxClasses["thx.Functions15"] = thx_Functions15;
thx_Functions15.__name__ = "thx.Functions15";
thx_Functions15.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
};
var thx_Functions16 = function() { };
$hxClasses["thx.Functions16"] = thx_Functions16;
thx_Functions16.__name__ = "thx.Functions16";
thx_Functions16.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
};
var thx_Functions17 = function() { };
$hxClasses["thx.Functions17"] = thx_Functions17;
thx_Functions17.__name__ = "thx.Functions17";
thx_Functions17.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
};
var thx_Functions18 = function() { };
$hxClasses["thx.Functions18"] = thx_Functions18;
thx_Functions18.__name__ = "thx.Functions18";
thx_Functions18.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
};
var thx_Functions19 = function() { };
$hxClasses["thx.Functions19"] = thx_Functions19;
thx_Functions19.__name__ = "thx.Functions19";
thx_Functions19.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s);
		};
	};
};
var thx_Functions20 = function() { };
$hxClasses["thx.Functions20"] = thx_Functions20;
thx_Functions20.__name__ = "thx.Functions20";
thx_Functions20.curry = function(f) {
	return function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s) {
		return function(t) {
			return f(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
		};
	};
};
var thx__$Functions_Reader_$Impl_$ = {};
$hxClasses["thx._Functions.Reader_Impl_"] = thx__$Functions_Reader_$Impl_$;
thx__$Functions_Reader_$Impl_$.__name__ = "thx._Functions.Reader_Impl_";
thx__$Functions_Reader_$Impl_$.flatMap = function(this1,f) {
	return function(a) {
		var tmp = this1(a);
		return (f(tmp))(a);
	};
};
var thx_Functions = function() { };
$hxClasses["thx.Functions"] = thx_Functions;
thx_Functions.__name__ = "thx.Functions";
thx_Functions.equality = function(a,b) {
	return a == b;
};
thx_Functions.identity = function(value) {
	return value;
};
thx_Functions.noop = function() {
};
thx_Functions.passTo = function(a,f) {
	return f(a);
};
thx_Functions.applyTo = function(f,a) {
	return f(a);
};
var thx_Ints = function() { };
$hxClasses["thx.Ints"] = thx_Ints;
thx_Ints.__name__ = "thx.Ints";
thx_Ints.abs = function(v) {
	if(v < 0) {
		return -v;
	} else {
		return v;
	}
};
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.clamp = function(v,min,max) {
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.clampSym = function(v,max) {
	var min = -max;
	if(v < min) {
		return min;
	} else if(v > max) {
		return max;
	} else {
		return v;
	}
};
thx_Ints.compare = function(a,b) {
	return a - b;
};
thx_Ints.gcd = function(m,n) {
	m = m < 0 ? -m : m;
	n = n < 0 ? -n : n;
	var t;
	while(true) {
		if(n == 0) {
			return m;
		}
		t = m;
		m = n;
		n = t % m;
	}
};
thx_Ints.interpolate = function(f,a,b) {
	return Math.round(a + (b - a) * f);
};
thx_Ints.isEven = function(v) {
	return v % 2 == 0;
};
thx_Ints.isOdd = function(v) {
	return v % 2 != 0;
};
thx_Ints.lpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	var neg = false;
	if(v < 0) {
		neg = true;
		v = -v;
	}
	return (neg ? "-" : "") + StringTools.lpad("" + v,pad,len);
};
thx_Ints.lcm = function(m,n) {
	m = m < 0 ? -m : m;
	n = n < 0 ? -n : n;
	if(n == 0) {
		return m;
	}
	return m * (n / thx_Ints.gcd(m,n) | 0);
};
thx_Ints.rpad = function(v,pad,len) {
	if(pad == null) {
		pad = "0";
	}
	return StringTools.rpad("" + v,pad,len);
};
thx_Ints.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
thx_Ints.random = function(min,max) {
	if(min == null) {
		min = 0;
	}
	return Std.random(max - min + 1) + min;
};
thx_Ints.range = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	if(null == stop) {
		stop = start;
		start = 0;
	}
	if((stop - start) / step == Infinity) {
		throw new js__$Boot_HaxeError("infinite range");
	}
	var range = [];
	var i = -1;
	var j;
	if(step < 0) {
		while(true) {
			j = start + step * ++i;
			if(!(j > stop)) {
				break;
			}
			range.push(j);
		}
	} else {
		while(true) {
			j = start + step * ++i;
			if(!(j < stop)) {
				break;
			}
			range.push(j);
		}
	}
	return range;
};
thx_Ints.rangeIter = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	return new thx_RangeIterator(start,stop,step);
};
thx_Ints.toString = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBase = function(value,base) {
	return value.toString(base);
};
thx_Ints.toBool = function(v) {
	return v != 0;
};
thx_Ints.toInt = function(s,base) {
	return thx_Ints.parse(s,base);
};
thx_Ints.sign = function(value) {
	if(value < 0) {
		return -1;
	} else {
		return 1;
	}
};
thx_Ints.wrapCircular = function(v,max) {
	v %= max;
	if(v < 0) {
		v += max;
	}
	return v;
};
var thx_RangeIterator = function(start,stop,step) {
	if(step == null) {
		step = 1;
	}
	this.current = start;
	this.stop = stop;
	this.step = step;
};
$hxClasses["thx.RangeIterator"] = thx_RangeIterator;
thx_RangeIterator.__name__ = "thx.RangeIterator";
thx_RangeIterator.prototype = {
	current: null
	,stop: null
	,step: null
	,hasNext: function() {
		if(!(this.stop == null || this.step >= 0 && this.current < this.stop)) {
			if(this.step < 0) {
				return this.current > this.stop;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,next: function() {
		var result = this.current;
		this.current += this.step;
		return result;
	}
	,__class__: thx_RangeIterator
};
var thx_Iterables = function() { };
$hxClasses["thx.Iterables"] = thx_Iterables;
thx_Iterables.__name__ = "thx.Iterables";
thx_Iterables.all = function(it,predicate) {
	return thx_Iterators.all($getIterator(it),predicate);
};
thx_Iterables.any = function(it,predicate) {
	return thx_Iterators.any($getIterator(it),predicate);
};
thx_Iterables.eachPair = function(it,handler) {
	thx_Iterators.eachPair($getIterator(it),handler);
	return;
};
thx_Iterables.equals = function(a,b,equality) {
	return thx_Iterators.equals($getIterator(a),$getIterator(b),equality);
};
thx_Iterables.filter = function(it,predicate) {
	return thx_Iterators.filter($getIterator(it),predicate);
};
thx_Iterables.find = function(it,predicate) {
	return thx_Iterators.find($getIterator(it),predicate);
};
thx_Iterables.findOption = function(it,predicate) {
	var value = thx_Iterators.find($getIterator(it),predicate);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.first = function(it) {
	return thx_Iterators.first($getIterator(it));
};
thx_Iterables.get = function(it,index) {
	return thx_Iterators.get($getIterator(it),index);
};
thx_Iterables.getOption = function(it,index) {
	var value = thx_Iterators.get($getIterator(it),index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterables.last = function(it) {
	return thx_Iterators.last($getIterator(it));
};
thx_Iterables.hasElements = function(it) {
	return $getIterator(it).hasNext();
};
thx_Iterables.indexOf = function(it,element) {
	return thx_Iterators.indexOf($getIterator(it),element);
};
thx_Iterables.isEmpty = function(it) {
	return !$getIterator(it).hasNext();
};
thx_Iterables.isIterable = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
thx_Iterables.map = function(it,f) {
	return thx_Iterators.map($getIterator(it),f);
};
thx_Iterables.fmap = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmap($getIterator(it),f);
	}};
};
thx_Iterables.mapi = function(it,f) {
	return thx_Iterators.mapi($getIterator(it),f);
};
thx_Iterables.fmapi = function(it,f) {
	return { iterator : function() {
		return thx_Iterators.fmapi($getIterator(it),f);
	}};
};
thx_Iterables.order = function(it,sort) {
	return thx_Iterators.order($getIterator(it),sort);
};
thx_Iterables.reduce = function(it,callback,initial) {
	return thx_Iterators.reduce($getIterator(it),callback,initial);
};
thx_Iterables.reducei = function(it,callback,initial) {
	return thx_Iterators.reducei($getIterator(it),callback,initial);
};
thx_Iterables.toArray = function(it) {
	return thx_Iterators.toArray($getIterator(it));
};
thx_Iterables.minBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = a.next();
		var a2 = [a1];
		found = thx_Options.any(found,(function(a3) {
			return function(a0) {
				var found1 = f(a0);
				var found2 = f(a3[0]);
				return ord(found1,found2) == thx_OrderingImpl.LT;
			};
		})(a2)) ? found : haxe_ds_Option.Some(a2[0]);
	}
	return found;
};
thx_Iterables.maxBy = function(it,f,ord) {
	return thx_Iterables.minBy(it,f,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.min = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,ord);
};
thx_Iterables.max = function(it,ord) {
	return thx_Iterables.minBy(it,thx_Functions.identity,thx__$Ord_Ord_$Impl_$.inverse(ord));
};
thx_Iterables.extremaBy = function(it,f,ord) {
	var found = haxe_ds_Option.None;
	var a = $getIterator(it);
	while(a.hasNext()) {
		var a1 = a.next();
		switch(found._hx_index) {
		case 0:
			var _g = found.v;
			var t = _g;
			if(ord(f(a1),f(t._0)) == thx_OrderingImpl.LT) {
				var this1 = { _0 : a1, _1 : t._1};
				found = haxe_ds_Option.Some(this1);
			} else {
				var t1 = _g;
				if(ord(f(a1),f(t1._1)) == thx_OrderingImpl.GT) {
					var this2 = { _0 : t1._0, _1 : a1};
					found = haxe_ds_Option.Some(this2);
				} else {
					found = found;
				}
			}
			break;
		case 1:
			var this3 = { _0 : a1, _1 : a1};
			found = haxe_ds_Option.Some(this3);
			break;
		default:
			found = found;
		}
	}
	return found;
};
thx_Iterables.extrema = function(it,ord) {
	return thx_Iterables.extremaBy(it,thx_Functions.identity,ord);
};
thx_Iterables.takeUntil = function(it,fn) {
	return thx_Iterators.takeUntil($getIterator(it),fn);
};
thx_Iterables.dropLeft = function(itr,n) {
	return { iterator : function() {
		var itr1 = $getIterator(itr);
		var count = n;
		while(count > 0) if(itr1.hasNext()) {
			itr1.next();
		}
		return { next : $bind(itr1,itr1.next), hasNext : $bind(itr1,itr1.hasNext)};
	}};
};
thx_Iterables.dropUntil = function(it,fn) {
	return thx_Iterators.dropUntil($getIterator(it),fn);
};
thx_Iterables.unionBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = e.next();
		res.push(e1);
	}
	var e2 = $getIterator(b);
	while(e2.hasNext()) {
		var e3 = e2.next();
		var e4 = [e3];
		if(!thx_Iterables.any(res,(function(e5) {
			return function(x) {
				return eq(x,e5[0]);
			};
		})(e4))) {
			res.push(e4[0]);
		}
	}
	return res;
};
thx_Iterables.differenceBy = function(a,b,eq) {
	var res = [];
	var e = $getIterator(a);
	while(e.hasNext()) {
		var e1 = e.next();
		var e2 = [e1];
		if(!thx_Iterables.any(b,(function(e3) {
			return function(x) {
				return eq(x,e3[0]);
			};
		})(e2))) {
			res.push(e2[0]);
		}
	}
	return res;
};
thx_Iterables.unzip = function(it) {
	return thx_Iterators.unzip($getIterator(it));
};
thx_Iterables.unzip3 = function(it) {
	return thx_Iterators.unzip3($getIterator(it));
};
thx_Iterables.unzip4 = function(it) {
	return thx_Iterators.unzip4($getIterator(it));
};
thx_Iterables.unzip5 = function(it) {
	return thx_Iterators.unzip5($getIterator(it));
};
thx_Iterables.zip = function(it1,it2) {
	return thx_Iterators.zip($getIterator(it1),$getIterator(it2));
};
thx_Iterables.zip3 = function(it1,it2,it3) {
	return thx_Iterators.zip3($getIterator(it1),$getIterator(it2),$getIterator(it3));
};
thx_Iterables.zip4 = function(it1,it2,it3,it4) {
	return thx_Iterators.zip4($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4));
};
thx_Iterables.zip5 = function(it1,it2,it3,it4,it5) {
	return thx_Iterators.zip5($getIterator(it1),$getIterator(it2),$getIterator(it3),$getIterator(it4),$getIterator(it5));
};
var thx_Iterators = function() { };
$hxClasses["thx.Iterators"] = thx_Iterators;
thx_Iterators.__name__ = "thx.Iterators";
thx_Iterators.all = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(!predicate(element1)) {
			return false;
		}
	}
	return true;
};
thx_Iterators.any = function(it,predicate) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(predicate(element1)) {
			return true;
		}
	}
	return false;
};
thx_Iterators.equals = function(a,b,equality) {
	if(null == equality) {
		equality = thx_Functions.equality;
	}
	var ae;
	var be;
	var an;
	var bn;
	while(true) {
		an = a.hasNext();
		bn = b.hasNext();
		if(!an && !bn) {
			return true;
		}
		if(!an || !bn) {
			return false;
		}
		if(!equality(a.next(),b.next())) {
			return false;
		}
	}
};
thx_Iterators.get = function(it,index) {
	var pos = 0;
	var i = it;
	while(i.hasNext()) {
		var i1 = i.next();
		if(pos++ == index) {
			return i1;
		}
	}
	return null;
};
thx_Iterators.getOption = function(it,index) {
	var value = thx_Iterators.get(it,index);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.eachPair = function(it,handler) {
	thx_Arrays.eachPair(thx_Iterators.toArray(it),handler);
};
thx_Iterators.filter = function(it,predicate) {
	return thx_Iterators.reduce(it,function(acc,element) {
		if(predicate(element)) {
			acc.push(element);
		}
		return acc;
	},[]);
};
thx_Iterators.find = function(it,f) {
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		if(f(element1)) {
			return element1;
		}
	}
	return null;
};
thx_Iterators.findOption = function(it,f) {
	var value = thx_Iterators.find(it,f);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Iterators.first = function(it) {
	if(it.hasNext()) {
		return it.next();
	} else {
		return null;
	}
};
thx_Iterators.hasElements = function(it) {
	return it.hasNext();
};
thx_Iterators.indexOf = function(it,element) {
	var pos = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(element == v1) {
			return pos;
		}
		++pos;
	}
	return -1;
};
thx_Iterators.isEmpty = function(it) {
	return !it.hasNext();
};
thx_Iterators.isIterator = function(v) {
	var fields = Reflect.isObject(v) && null == js_Boot.getClass(v) ? Reflect.fields(v) : Type.getInstanceFields(js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
thx_Iterators.last = function(it) {
	var buf = null;
	while(it.hasNext()) buf = it.next();
	return buf;
};
thx_Iterators.forEach = function(it,proc) {
	while(it.hasNext()) proc(it.next());
};
thx_Iterators.map = function(it,f) {
	var acc = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1));
	}
	return acc;
};
thx_Iterators.fmap = function(it,f) {
	return new thx_MapIterator(it,f);
};
thx_Iterators.mapi = function(it,f) {
	var acc = [];
	var i = 0;
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1,i++));
	}
	return acc;
};
thx_Iterators.fmapi = function(it,f) {
	return new thx_MapIIterator(it,f);
};
thx_Iterators.order = function(it,sort) {
	var n = thx_Iterators.toArray(it);
	n.sort(sort);
	return n;
};
thx_Iterators.reduce = function(it,callback,initial) {
	var result = initial;
	while(it.hasNext()) result = callback(result,it.next());
	return result;
};
thx_Iterators.reducei = function(it,callback,initial) {
	thx_Iterators.mapi(it,function(v,i) {
		initial = callback(initial,v,i);
	});
	return initial;
};
thx_Iterators.foldLeft = function(it,zero,f) {
	return thx_Iterators.reduce(it,f,zero);
};
thx_Iterators.foldMap = function(it,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Iterators.foldLeft(thx_Iterators.fmap(it,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Iterators.takeUntil = function(it,f) {
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			out.push(v1);
		} else {
			break;
		}
	}
	return out;
};
thx_Iterators.dropUntil = function(it,f) {
	var done = false;
	var out = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		if(!done) {
			if(!f(v1)) {
				done = true;
				out.push(v1);
			}
		} else {
			out.push(v1);
		}
	}
	return out;
};
thx_Iterators.toArray = function(it) {
	var elements = [];
	var element = it;
	while(element.hasNext()) {
		var element1 = element.next();
		elements.push(element1);
	}
	return elements;
};
thx_Iterators.unzip = function(it) {
	var a1 = [];
	var a2 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
	});
	var this1 = { _0 : a1, _1 : a2};
	return this1;
};
thx_Iterators.unzip3 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3};
	return this1;
};
thx_Iterators.unzip4 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4};
	return this1;
};
thx_Iterators.unzip5 = function(it) {
	var a1 = [];
	var a2 = [];
	var a3 = [];
	var a4 = [];
	var a5 = [];
	thx_Iterators.forEach(it,function(t) {
		a1.push(t._0);
		a2.push(t._1);
		a3.push(t._2);
		a4.push(t._3);
		a5.push(t._4);
	});
	var this1 = { _0 : a1, _1 : a2, _2 : a3, _3 : a4, _4 : a5};
	return this1;
};
thx_Iterators.zip = function(it1,it2) {
	var array = [];
	while(it1.hasNext() && it2.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip3 = function(it1,it2,it3) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip4 = function(it1,it2,it3,it4) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next()};
		array.push(this1);
	}
	return array;
};
thx_Iterators.zip5 = function(it1,it2,it3,it4,it5) {
	var array = [];
	while(it1.hasNext() && it2.hasNext() && it3.hasNext() && it4.hasNext() && it5.hasNext()) {
		var this1 = { _0 : it1.next(), _1 : it2.next(), _2 : it3.next(), _3 : it4.next(), _4 : it5.next()};
		array.push(this1);
	}
	return array;
};
var thx_MapIterator = function(base,f) {
	this.base = base;
	this.f = f;
};
$hxClasses["thx.MapIterator"] = thx_MapIterator;
thx_MapIterator.__name__ = "thx.MapIterator";
thx_MapIterator.prototype = {
	base: null
	,f: null
	,next: function() {
		return this.f(this.base.next());
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIterator
};
var thx_MapIIterator = function(base,f) {
	this.i = 0;
	this.base = base;
	this.f = f;
};
$hxClasses["thx.MapIIterator"] = thx_MapIIterator;
thx_MapIIterator.__name__ = "thx.MapIIterator";
thx_MapIIterator.prototype = {
	base: null
	,f: null
	,i: null
	,next: function() {
		var result = this.f(this.base.next(),this.i);
		this.i++;
		return result;
	}
	,hasNext: function() {
		return this.base.hasNext();
	}
	,__class__: thx_MapIIterator
};
var thx_Maps = function() { };
$hxClasses["thx.Maps"] = thx_Maps;
thx_Maps.__name__ = "thx.Maps";
thx_Maps.copyTo = function(src,dst) {
	var key = src.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		dst.set(key1,src.get(key1));
	}
	return dst;
};
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
thx_Maps.mapValues = function(map,f,acc) {
	return thx_Maps.reduce(map,function(m,t) {
		m.set(t._0,f(t._1));
		return m;
	},acc);
};
thx_Maps.reduce = function(map,f,acc) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),f,acc);
};
thx_Maps.values = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		return map.get(key);
	});
};
thx_Maps.fromArray = function(array,toKey,toVal) {
	return thx_Arrays.reduce(array,function(acc,curr) {
		var key = toKey(curr);
		var value = toVal(curr);
		if(__map_reserved[key] != null) {
			acc.setReserved(key,value);
		} else {
			acc.h[key] = value;
		}
		return acc;
	},new haxe_ds_StringMap());
};
thx_Maps.foldLeftWithKeys = function(map,f,acc) {
	return thx_Iterators.reduce(map.keys(),function(acc1,k) {
		return f(acc1,k,map.get(k));
	},acc);
};
thx_Maps.getOption = function(map,key) {
	var value = map.get(key);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Maps.toObject = function(map) {
	return thx_Arrays.reduce(thx_Maps.tuples(map),function(o,t) {
		o[t._0] = t._1;
		return o;
	},{ });
};
thx_Maps.getAlt = function(map,key,alt) {
	var v = map.get(key);
	if(null == v) {
		return alt;
	} else {
		return v;
	}
};
thx_Maps.getAltSet = function(map,key,alt) {
	var v = map.get(key);
	if(v != null) {
		return v;
	} else {
		map.set(key,alt);
		return alt;
	}
};
thx_Maps.isEmpty = function(map) {
	return !map.iterator().hasNext();
};
thx_Maps.isMap = function(v) {
	return js_Boot.__implements(v,haxe_IMap);
};
thx_Maps.string = function(m) {
	var _this = thx_Maps.tuples(m);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var t = _this[i];
		result[i] = thx_Dynamics.string(t._0) + " => " + thx_Dynamics.string(t._1);
	}
	return "[" + result.join(", ") + "]";
};
thx_Maps.merge = function(dest,sources) {
	return thx_Arrays.reduce(sources,function(result,source) {
		return thx_Iterators.reduce(source.keys(),function(result1,key) {
			result1.set(key,source.get(key));
			return result1;
		},result);
	},dest);
};
var thx__$Monoid_Monoid_$Impl_$ = {};
$hxClasses["thx._Monoid.Monoid_Impl_"] = thx__$Monoid_Monoid_$Impl_$;
thx__$Monoid_Monoid_$Impl_$.__name__ = "thx._Monoid.Monoid_Impl_";
thx__$Monoid_Monoid_$Impl_$.__properties__ = {get_zero:"get_zero",get_semigroup:"get_semigroup"};
thx__$Monoid_Monoid_$Impl_$.get_semigroup = function(this1) {
	return this1.append;
};
thx__$Monoid_Monoid_$Impl_$.get_zero = function(this1) {
	return this1.zero;
};
thx__$Monoid_Monoid_$Impl_$.append = function(this1,a0,a1) {
	return this1.append(a0,a1);
};
var thx__$Nel_Nel_$Impl_$ = {};
$hxClasses["thx._Nel.Nel_Impl_"] = thx__$Nel_Nel_$Impl_$;
thx__$Nel_Nel_$Impl_$.__name__ = "thx._Nel.Nel_Impl_";
thx__$Nel_Nel_$Impl_$.nel = function(hd,tl) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(tl);
	switch(_g._hx_index) {
	case 0:
		var nel = _g.v;
		return thx__$Nel_Nel_$Impl_$.cons(hd,nel);
	case 1:
		return thx__$Nel_Nel_$Impl_$.pure(hd);
	}
};
thx__$Nel_Nel_$Impl_$.pure = function(a) {
	return thx_NonEmptyList.Single(a);
};
thx__$Nel_Nel_$Impl_$.cons = function(a,nl) {
	return thx_NonEmptyList.ConsNel(a,nl);
};
thx__$Nel_Nel_$Impl_$.fromArray = function(arr) {
	if(arr.length == 0) {
		return haxe_ds_Option.None;
	} else {
		var res = thx_NonEmptyList.Single(arr[arr.length - 1]);
		var i = thx_Ints.rangeIter(arr.length - 2,-1,-1);
		while(i.hasNext()) {
			var i1 = i.next();
			res = thx_NonEmptyList.ConsNel(arr[i1],res);
		}
		return haxe_ds_Option.Some(res);
	}
};
thx__$Nel_Nel_$Impl_$.map = function(this1,f) {
	var fb = f;
	return thx__$Nel_Nel_$Impl_$.flatMap(this1,function(v) {
		return thx__$Nel_Nel_$Impl_$.pure(fb(v));
	});
};
thx__$Nel_Nel_$Impl_$.flatMap = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return f(x);
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return thx__$Nel_Nel_$Impl_$.append(f(x1),thx__$Nel_Nel_$Impl_$.flatMap(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.fold = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return f(x1,thx__$Nel_Nel_$Impl_$.fold(xs,f));
	}
};
thx__$Nel_Nel_$Impl_$.append = function(this1,nel) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return thx_NonEmptyList.ConsNel(x,nel);
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return thx_NonEmptyList.ConsNel(x1,thx__$Nel_Nel_$Impl_$.append(xs,nel));
	}
};
thx__$Nel_Nel_$Impl_$.concat = function(this1,xs) {
	var _g = thx__$Nel_Nel_$Impl_$.fromArray(xs);
	switch(_g._hx_index) {
	case 0:
		var other = _g.v;
		return thx__$Nel_Nel_$Impl_$.append(this1,other);
	case 1:
		return this1;
	}
};
thx__$Nel_Nel_$Impl_$.head = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return x1;
	}
};
thx__$Nel_Nel_$Impl_$.tail = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return [];
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return thx__$Nel_Nel_$Impl_$.toArray(xs);
	}
};
thx__$Nel_Nel_$Impl_$.init = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return [];
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return [x1].concat(thx__$Nel_Nel_$Impl_$.init(xs));
	}
};
thx__$Nel_Nel_$Impl_$.last = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return x;
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return thx__$Nel_Nel_$Impl_$.last(xs);
	}
};
thx__$Nel_Nel_$Impl_$.push = function(this1,a) {
	return thx__$Nel_Nel_$Impl_$.append(this1,thx_NonEmptyList.Single(a));
};
thx__$Nel_Nel_$Impl_$.pop = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.last(this1), _1 : thx__$Nel_Nel_$Impl_$.init(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.unshift = function(this1,a) {
	return thx_NonEmptyList.ConsNel(a,this1);
};
thx__$Nel_Nel_$Impl_$.shift = function(this1) {
	var this2 = { _0 : thx__$Nel_Nel_$Impl_$.head(this1), _1 : thx__$Nel_Nel_$Impl_$.tail(this1)};
	return this2;
};
thx__$Nel_Nel_$Impl_$.toArray = function(this1) {
	var go = null;
	go = function(acc,xs) {
		switch(xs._hx_index) {
		case 0:
			var x = xs.x;
			return thx_Arrays.append(acc,x);
		case 1:
			var xs1 = xs.xs;
			var x1 = xs.x;
			var go1 = thx_Arrays.append(acc,x1);
			return go(go1,xs1);
		}
	};
	return go([],this1);
};
thx__$Nel_Nel_$Impl_$.intersperse = function(this1,a) {
	switch(this1._hx_index) {
	case 0:
		var x = this1.x;
		return thx_NonEmptyList.Single(x);
	case 1:
		var xs = this1.xs;
		var x1 = this1.x;
		return thx_NonEmptyList.ConsNel(x1,thx_NonEmptyList.ConsNel(a,thx__$Nel_Nel_$Impl_$.intersperse(xs,a)));
	}
};
thx__$Nel_Nel_$Impl_$.semigroup = function() {
	return function(nl,nr) {
		return thx__$Nel_Nel_$Impl_$.append(nl,nr);
	};
};
var thx_NonEmptyList = $hxEnums["thx.NonEmptyList"] = { __ename__ : "thx.NonEmptyList", __constructs__ : ["Single","ConsNel"]
	,Single: ($_=function(x) { return {_hx_index:0,x:x,__enum__:"thx.NonEmptyList",toString:$estr}; },$_.__params__ = ["x"],$_)
	,ConsNel: ($_=function(x,xs) { return {_hx_index:1,x:x,xs:xs,__enum__:"thx.NonEmptyList",toString:$estr}; },$_.__params__ = ["x","xs"],$_)
};
var thx_Nil = $hxEnums["thx.Nil"] = { __ename__ : "thx.Nil", __constructs__ : ["nil"]
	,nil: {_hx_index:0,__enum__:"thx.Nil",toString:$estr}
};
var thx_Objects = function() { };
$hxClasses["thx.Objects"] = thx_Objects;
thx_Objects.__name__ = "thx.Objects";
thx_Objects.compare = function(a,b) {
	var fields = Reflect.fields(a);
	var v = thx_Arrays.compare(fields,Reflect.fields(b));
	if(v != 0) {
		return v;
	}
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		v = thx_Dynamics.compare(Reflect.field(a,field),Reflect.field(b,field));
		if(v != 0) {
			return v;
		}
	}
	return 0;
};
thx_Objects.isEmpty = function(o) {
	return Reflect.fields(o).length == 0;
};
thx_Objects.exists = function(o,name) {
	return Object.prototype.hasOwnProperty.call(o,name);
};
thx_Objects.fields = function(o) {
	return Reflect.fields(o);
};
thx_Objects.deflate = function(o,flattenArrays) {
	if(flattenArrays == null) {
		flattenArrays = true;
	}
	var f = null;
	f = function(v) {
		if(((v) instanceof Array)) {
			if(flattenArrays) {
				if(v.length == 0) {
					return thx_Either.Left([]);
				} else {
					var a = v;
					return thx_Either.Right(thx_Arrays.reducei(a,function(map,value,i) {
						var _g = f(value);
						switch(_g._hx_index) {
						case 0:
							var v1 = _g.value;
							var key = "" + i;
							if(__map_reserved[key] != null) {
								map.setReserved(key,v1);
							} else {
								map.h[key] = v1;
							}
							break;
						case 1:
							var m = _g.value;
							var k = m.keys();
							while(k.hasNext()) {
								var k1 = k.next();
								var key1 = "" + i + "." + k1;
								var value1 = __map_reserved[k1] != null ? m.getReserved(k1) : m.h[k1];
								if(__map_reserved[key1] != null) {
									map.setReserved(key1,value1);
								} else {
									map.h[key1] = value1;
								}
							}
							break;
						}
						return map;
					},new haxe_ds_StringMap()));
				}
			} else {
				return thx_Either.Left(v);
			}
		} else if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			return thx_Either.Right(thx_Arrays.reduce(Reflect.fields(v),function(map1,key2) {
				var _g1 = f(Reflect.field(v,key2));
				switch(_g1._hx_index) {
				case 0:
					var v2 = _g1.value;
					var key3 = "" + key2;
					if(__map_reserved[key3] != null) {
						map1.setReserved(key3,v2);
					} else {
						map1.h[key3] = v2;
					}
					break;
				case 1:
					var m1 = _g1.value;
					if(!new haxe_ds__$StringMap_StringMapIterator(m1,m1.arrayKeys()).hasNext()) {
						var key4 = "" + key2;
						var value2 = { };
						if(__map_reserved[key4] != null) {
							map1.setReserved(key4,value2);
						} else {
							map1.h[key4] = value2;
						}
					} else {
						var k2 = m1.keys();
						while(k2.hasNext()) {
							var k3 = k2.next();
							var key5 = "" + key2 + "." + k3;
							var value3 = __map_reserved[k3] != null ? m1.getReserved(k3) : m1.h[k3];
							if(__map_reserved[key5] != null) {
								map1.setReserved(key5,value3);
							} else {
								map1.h[key5] = value3;
							}
						}
					}
					break;
				}
				return map1;
			},new haxe_ds_StringMap()));
		} else {
			return thx_Either.Left(v);
		}
	};
	var _g2 = f(o);
	switch(_g2._hx_index) {
	case 0:
		var v3 = _g2.value;
		return v3;
	case 1:
		var m2 = _g2.value;
		return thx_Maps.toObject(m2);
	}
};
thx_Objects.inflate = function(o) {
	return thx_Arrays.reduce(Reflect.fields(o),function(acc,field) {
		return thx_Objects.setPath(acc,field,Reflect.field(o,field));
	},{ });
};
thx_Objects.combine = function(first,second) {
	return thx_Objects.shallowCombine(first,second);
};
thx_Objects.shallowCombine = function(first,second) {
	var to = { };
	var _g = 0;
	var _g1 = Reflect.fields(first);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		to[field] = Reflect.field(first,field);
	}
	var _g2 = 0;
	var _g3 = Reflect.fields(second);
	while(_g2 < _g3.length) {
		var field1 = _g3[_g2];
		++_g2;
		to[field1] = Reflect.field(second,field1);
	}
	return to;
};
thx_Objects.deepCombine = function(first,second) {
	return thx_Objects.copyTo(second,first,true);
};
thx_Objects.assign = function(to,from,replacef) {
	if(null == replacef) {
		replacef = function(field,oldv,newv) {
			return newv;
		};
	}
	var _g = 0;
	var _g1 = Reflect.fields(from);
	while(_g < _g1.length) {
		var field1 = _g1[_g];
		++_g;
		var newv1 = Reflect.field(from,field1);
		if(Object.prototype.hasOwnProperty.call(to,field1)) {
			to[field1] = replacef(field1,Reflect.field(to,field1),newv1);
		} else {
			to[field1] = newv1;
		}
	}
	return to;
};
thx_Objects.copyTo = function(src,dst,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	var _g = 0;
	var _g1 = Reflect.fields(src);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		var sv = thx_Dynamics.clone(Reflect.field(src,field),cloneInstances);
		var dv = Reflect.field(dst,field);
		var tmp;
		var v = sv;
		if(Reflect.isObject(v) && null == js_Boot.getClass(v)) {
			var v1 = dv;
			tmp = Reflect.isObject(v1) && null == js_Boot.getClass(v1);
		} else {
			tmp = false;
		}
		if(tmp) {
			thx_Objects.copyTo(sv,dv);
		} else {
			dst[field] = sv;
		}
	}
	return dst;
};
thx_Objects.clone = function(src,cloneInstances) {
	if(cloneInstances == null) {
		cloneInstances = false;
	}
	return thx_Dynamics.clone(src,cloneInstances);
};
thx_Objects.toMap = function(o) {
	return thx_Arrays.reduce(thx_Objects.tuples(o),function(map,t) {
		var key = t._0;
		var value = t._1;
		if(__map_reserved[key] != null) {
			map.setReserved(key,value);
		} else {
			map.h[key] = value;
		}
		return map;
	},new haxe_ds_StringMap());
};
thx_Objects.size = function(o) {
	return Reflect.fields(o).length;
};
thx_Objects.string = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var v = Reflect.field(o,key);
		var s = typeof(v) == "string" ? thx_Strings.quote(v) : thx_Dynamics.string(v);
		result[i] = "" + key + " : " + s;
	}
	return "{" + result.join(", ") + "}";
};
thx_Objects.stringImpl = function(o,cache) {
};
thx_Objects.values = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Reflect.field(o,_this[i]);
	}
	return result;
};
thx_Objects.tuples = function(o) {
	var _this = Reflect.fields(o);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var key = _this[i];
		var this1 = { _0 : key, _1 : Reflect.field(o,key)};
		result[i] = this1;
	}
	return result;
};
thx_Objects.hasPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr || arr.length <= index) {
				return false;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return false;
		}
	}
	return true;
};
thx_Objects.hasPathValue = function(o,path) {
	return thx_Objects.getPath(o,path) != null;
};
thx_Objects.getPath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	while(_g < paths.length) {
		var currentPath = paths[_g];
		++_g;
		if(current == null) {
			return null;
		} else if(thx_Strings.DIGITS.match(currentPath)) {
			var index = Std.parseInt(currentPath);
			var value = current;
			var arr = ((value) instanceof Array) ? value : null;
			if(null == arr) {
				return null;
			}
			current = arr[index];
		} else if(Object.prototype.hasOwnProperty.call(current,currentPath)) {
			current = Reflect.field(current,currentPath);
		} else {
			return null;
		}
	}
	return current;
};
thx_Objects.getPathOption = function(o,path) {
	var value = thx_Objects.getPath(o,path);
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Objects.parsePath = function(o,path,parse) {
	var this1 = thx_Options.toSuccessNel(thx_Objects.getPathOption(o,path),"Object does not contain path " + path);
	switch(this1._hx_index) {
	case 0:
		var a = this1.value;
		return thx_Either.Left(a);
	case 1:
		var b = this1.value;
		return parse(b);
	}
};
thx_Objects.getPathOr = function(o,path,alt) {
	return thx_Options.getOrElse(thx_Objects.getPathOption(o,path),alt);
};
thx_Objects.setPath = function(o,path,val) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var current = o;
	var _g = 0;
	var _g1 = paths.length - 1;
	while(_g < _g1) {
		var i = _g++;
		var currentPath = paths[i];
		var nextPath = paths[i + 1];
		if(thx_Strings.DIGITS.match(currentPath) || currentPath == "*") {
			var index = currentPath == "*" ? current.length : Std.parseInt(currentPath);
			if(current[index] == null) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[index] = [];
				} else {
					current[index] = { };
				}
			}
			current = current[index];
		} else {
			if(!Object.prototype.hasOwnProperty.call(current,currentPath)) {
				if(thx_Strings.DIGITS.match(nextPath) || nextPath == "*") {
					current[currentPath] = [];
				} else {
					current[currentPath] = { };
				}
			}
			current = Reflect.field(current,currentPath);
		}
	}
	var p = paths[paths.length - 1];
	if(thx_Strings.DIGITS.match(p)) {
		var index1 = Std.parseInt(p);
		current[index1] = val;
	} else if(p == "*") {
		current.push(val);
	} else {
		current[p] = val;
	}
	return o;
};
thx_Objects.removePath = function(o,path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	path = path.replace(_this_r,".$1");
	var paths = path.split(".");
	var target = paths.pop();
	try {
		var sub = thx_Arrays.reduce(paths,function(existing,nextPath) {
			if(nextPath == "*") {
				return existing.pop();
			} else if(thx_Strings.DIGITS.match(nextPath)) {
				var current = existing;
				var index = Std.parseInt(nextPath);
				return current[index];
			} else {
				return Reflect.field(existing,nextPath);
			}
		},o);
		if(null != sub) {
			Reflect.deleteField(sub,target);
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	return o;
};
thx_Objects.normalizePath = function(path) {
	var _this_r = new RegExp("\\[(\\d+)\\]","g".split("u").join(""));
	return path.replace(_this_r,".$1");
};
var thx_Options = function() { };
$hxClasses["thx.Options"] = thx_Options;
thx_Options.__name__ = "thx.Options";
thx_Options.ofValue = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.maybe = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.equals = function(a,b,eq) {
	switch(a._hx_index) {
	case 0:
		if(b._hx_index == 0) {
			var a1 = a.v;
			var b1 = b.v;
			if(null == eq) {
				eq = function(a2,b2) {
					return a2 == b2;
				};
			}
			return eq(a1,b1);
		} else {
			return false;
		}
		break;
	case 1:
		if(b._hx_index == 1) {
			return true;
		} else {
			return false;
		}
		break;
	}
};
thx_Options.equalsValue = function(a,b,eq) {
	return thx_Options.equals(a,null == b ? haxe_ds_Option.None : haxe_ds_Option.Some(b),eq);
};
thx_Options.map = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return haxe_ds_Option.Some(callback(v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.ap = function(option,fopt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Options.map(fopt,function(f) {
			return f(v);
		});
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return callback(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.join = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return ifNone();
	}
};
thx_Options.foldLeft = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(b,v);
	case 1:
		return b;
	}
};
thx_Options.foldLeftf = function(option,b,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(b(),v);
	case 1:
		return b();
	}
};
thx_Options.foldMap = function(option,f,m) {
	var _e = m;
	var tmp = function(a0,a1) {
		return thx__$Monoid_Monoid_$Impl_$.append(_e,a0,a1);
	};
	return thx_Options.foldLeft(thx_Options.map(option,f),thx__$Monoid_Monoid_$Impl_$.get_zero(m),tmp);
};
thx_Options.filter = function(option,f) {
	if(option._hx_index == 0) {
		var v = option.v;
		if(f(v)) {
			return option;
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
};
thx_Options.toArray = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return [v];
	case 1:
		return [];
	}
};
thx_Options.toBool = function(option) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return true;
	case 1:
		return false;
	}
};
thx_Options.isNone = function(option) {
	return !thx_Options.toBool(option);
};
thx_Options.toOption = function(value) {
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Options.get = function(option) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return null;
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return alt;
	}
};
thx_Options.getOrElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		return alt();
	}
};
thx_Options.getOrThrow = function(option,err,posInfo) {
	if(null == err) {
		err = new thx_Error("Could not extract value from option",null,posInfo);
	}
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return v;
	case 1:
		throw err;
	}
};
thx_Options.getOrFail = function(option,msg,posInfo) {
	return thx_Options.getOrThrow(option,new thx_Error(msg,null,posInfo),{ fileName : "thx/Options.hx", lineNumber : 208, className : "thx.Options", methodName : "getOrFail"});
};
thx_Options.orElse = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return option;
	case 1:
		return alt;
	}
};
thx_Options.orElseF = function(option,alt) {
	switch(option._hx_index) {
	case 0:
		var _g = option.v;
		return option;
	case 1:
		return alt();
	}
};
thx_Options.all = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return true;
	}
};
thx_Options.any = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return f(v);
	case 1:
		return false;
	}
};
thx_Options.traverseValidation = function(option,f) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx__$Validation_Validation_$Impl_$.map(f(v),function(v1) {
			return haxe_ds_Option.Some(v1);
		});
	case 1:
		return thx_Either.Right(haxe_ds_Option.None);
	}
};
thx_Options.toSuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error);
	}
};
thx_Options.toLazySuccess = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(error());
	}
};
thx_Options.toSuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
	}
};
thx_Options.toLazySuccessNel = function(option,error) {
	switch(option._hx_index) {
	case 0:
		var v = option.v;
		return thx_Either.Right(v);
	case 1:
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error()));
	}
};
thx_Options.toFailure = function(error,value) {
	switch(error._hx_index) {
	case 0:
		var e = error.v;
		return thx_Either.Left(e);
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toFailureNel = function(error,value) {
	switch(error._hx_index) {
	case 0:
		var e = error.v;
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	case 1:
		return thx_Either.Right(value);
	}
};
thx_Options.toRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		var r = opt.v;
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left);
	}
};
thx_Options.toLazyRight = function(opt,left) {
	switch(opt._hx_index) {
	case 0:
		var r = opt.v;
		return thx_Either.Right(r);
	case 1:
		return thx_Either.Left(left());
	}
};
thx_Options.toLeft = function(opt,right) {
	switch(opt._hx_index) {
	case 0:
		var l = opt.v;
		return thx_Either.Left(l);
	case 1:
		return thx_Either.Right(right);
	}
};
thx_Options.each = function(o,f) {
	switch(o._hx_index) {
	case 0:
		var v = o.v;
		f(v);
		return o;
	case 1:
		return o;
	}
};
thx_Options.alt2 = function(a,b) {
	if(a._hx_index == 1) {
		var r = b;
		return r;
	} else {
		var l = a;
		return l;
	}
};
thx_Options.alt3 = function(a,b,c) {
	var a1;
	if(a._hx_index == 1) {
		var r = b;
		a1 = r;
	} else {
		var l = a;
		a1 = l;
	}
	if(a1._hx_index == 1) {
		var r1 = c;
		return r1;
	} else {
		var l1 = a1;
		return l1;
	}
};
thx_Options.alt4 = function(a,b,c,d) {
	var a1;
	if(a._hx_index == 1) {
		var r = b;
		a1 = r;
	} else {
		var l = a;
		a1 = l;
	}
	var a2;
	if(a1._hx_index == 1) {
		var r1 = c;
		a2 = r1;
	} else {
		var l1 = a1;
		a2 = l1;
	}
	if(a2._hx_index == 1) {
		var r2 = d;
		return r2;
	} else {
		var l2 = a2;
		return l2;
	}
};
thx_Options.alts = function(as) {
	return thx_Arrays.reduce(as,thx_Options.alt2,haxe_ds_Option.None);
};
thx_Options.altsF = function(fs) {
	return thx_Arrays.reduce(fs,thx_Options.orElseF,haxe_ds_Option.None);
};
thx_Options.ap2 = function(f,v1,v2) {
	return thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(f)));
};
thx_Options.ap3 = function(f,v1,v2,v3) {
	var f1 = f;
	return thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	}))));
};
thx_Options.ap4 = function(f,v1,v2,v3,v4) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})))));
};
thx_Options.ap5 = function(f,v1,v2,v3,v4,v5) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	}))))));
};
thx_Options.ap6 = function(f,v1,v2,v3,v4,v5,v6) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})))))));
};
thx_Options.ap7 = function(f,v1,v2,v3,v4,v5,v6,v7) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	}))))))));
};
thx_Options.ap8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx_Options.ap(v8,thx_Options.ap(v7,thx_Options.ap(v6,thx_Options.ap(v5,thx_Options.ap(v4,thx_Options.ap(v3,thx_Options.ap(v2,thx_Options.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})))))))));
};
thx_Options.combine = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine2 = function(a,b) {
	return thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(thx__$Tuple_Tuple2_$Impl_$.of)));
};
thx_Options.combine3 = function(a,b,c) {
	var f = thx__$Tuple_Tuple3_$Impl_$.of;
	return thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f(a1,b1,c1);
		};
	}))));
};
thx_Options.combine4 = function(a,b,c,d) {
	var f = thx__$Tuple_Tuple4_$Impl_$.of;
	var f1 = function(a1,b1,c1) {
		return function(d1) {
			return f(a1,b1,c1,d1);
		};
	};
	return thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f1(a2,b2,c2);
		};
	})))));
};
thx_Options.combine5 = function(a,b,c,d,e) {
	var f = thx__$Tuple_Tuple5_$Impl_$.of;
	var f1 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f(a1,b1,c1,d1,e1);
		};
	};
	var f2 = function(a2,b2,c2) {
		return function(d2) {
			return f1(a2,b2,c2,d2);
		};
	};
	return thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f2(a3,b3,c3);
		};
	}))))));
};
thx_Options.combine6 = function(a,b,c,d,e,f) {
	var f1 = thx__$Tuple_Tuple6_$Impl_$.of;
	var f2 = function(a1,b1,c1,d1,e1) {
		return function(f0) {
			return f1(a1,b1,c1,d1,e1,f0);
		};
	};
	var f3 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f2(a2,b2,c2,d2,e2);
		};
	};
	var f4 = function(a3,b3,c3) {
		return function(d3) {
			return f3(a3,b3,c3,d3);
		};
	};
	return thx_Options.ap(f,thx_Options.ap(e,thx_Options.ap(d,thx_Options.ap(c,thx_Options.ap(b,thx_Options.map(a,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f4(a4,b4,c4);
		};
	})))))));
};
thx_Options.spread2 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1);
	});
};
thx_Options.spread = function(v,f) {
	var f1 = f;
	return thx_Options.map(v,function(t) {
		return f1(t._0,t._1);
	});
};
thx_Options.spread3 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2);
	});
};
thx_Options.spread4 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3);
	});
};
thx_Options.spread5 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4);
	});
};
thx_Options.spread6 = function(v,f) {
	return thx_Options.map(v,function(t) {
		return f(t._0,t._1,t._2,t._3,t._4,t._5);
	});
};
var thx_Orderings = function() { };
$hxClasses["thx.Orderings"] = thx_Orderings;
thx_Orderings.__name__ = "thx.Orderings";
thx_Orderings.negate = function(o) {
	switch(o._hx_index) {
	case 0:
		return thx_OrderingImpl.GT;
	case 1:
		return thx_OrderingImpl.LT;
	case 2:
		return thx_OrderingImpl.EQ;
	}
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
$hxClasses["thx._ReadonlyArray.ReadonlyArray_Impl_"] = thx__$ReadonlyArray_ReadonlyArray_$Impl_$;
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = "thx._ReadonlyArray.ReadonlyArray_Impl_";
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__properties__ = {get_length:"get_length"};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.empty = function() {
	return [];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.flatten = function(array) {
	return Array.prototype.concat.apply([],array);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.lastIndexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var len = this1.length;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		if(eq(el,this1[len - i - 1])) {
			return i;
		}
	}
	return -1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get_length = function(this1) {
	return this1.length;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.get = function(this1,i) {
	return this1[i];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.head = function(this1) {
	return this1[0];
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.tail = function(this1) {
	return this1.slice(1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reduce = function(this1,f,initial) {
	var _g = 0;
	while(_g < this1.length) {
		var v = this1[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reducei = function(this1,f,initial) {
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		initial = f(initial,this1[i],i);
	}
	return initial;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.reverse = function(this1) {
	var arr = this1.slice();
	arr.reverse();
	return arr;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.toArray = function(this1) {
	return this1.slice();
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unsafe = function(this1) {
	return this1;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.concat = function(this1,that) {
	return this1.concat(that);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertAfter = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		pos = this1.length - 1;
	}
	var pos1 = pos + 1;
	return this1.slice(0,pos1).concat([el]).concat(this1.slice(pos1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.insertBefore = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replace = function(this1,ref,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,ref,eq);
	if(pos < 0) {
		throw new thx_Error("unable to find reference element",null,{ fileName : "thx/ReadonlyArray.hx", lineNumber : 94, className : "thx._ReadonlyArray.ReadonlyArray_Impl_", methodName : "replace"});
	}
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.replaceAt = function(this1,pos,el) {
	return this1.slice(0,pos).concat([el]).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.remove = function(this1,el,eq) {
	var pos = thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(this1,el,eq);
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.removeAt = function(this1,pos) {
	return this1.slice(0,pos).concat(this1.slice(pos + 1));
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.prepend = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.append = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.unshift = function(this1,el) {
	return [el].concat(this1);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.shift = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[0];
	var array = this1.slice(0,0).concat(this1.slice(1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.push = function(this1,el) {
	return this1.concat([el]);
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.pop = function(this1) {
	if(this1.length == 0) {
		var this2 = { _0 : null, _1 : this1};
		return this2;
	}
	var value = this1[this1.length - 1];
	var pos = this1.length - 1;
	var array = this1.slice(0,pos).concat(this1.slice(pos + 1));
	var this3 = { _0 : value, _1 : array};
	return this3;
};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter(this1);
};
var thx__$Semigroup_Semigroup_$Impl_$ = {};
$hxClasses["thx._Semigroup.Semigroup_Impl_"] = thx__$Semigroup_Semigroup_$Impl_$;
thx__$Semigroup_Semigroup_$Impl_$.__name__ = "thx._Semigroup.Semigroup_Impl_";
thx__$Semigroup_Semigroup_$Impl_$.__properties__ = {get_append:"get_append"};
thx__$Semigroup_Semigroup_$Impl_$.get_append = function(this1) {
	return this1;
};
var thx__$Set_Set_$Impl_$ = {};
$hxClasses["thx._Set.Set_Impl_"] = thx__$Set_Set_$Impl_$;
thx__$Set_Set_$Impl_$.__name__ = "thx._Set.Set_Impl_";
thx__$Set_Set_$Impl_$.__properties__ = {get_length:"get_length"};
thx__$Set_Set_$Impl_$.createString = function(it) {
	var map = new haxe_ds_StringMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createInt = function(it) {
	var map = new haxe_ds_IntMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createObject = function(it) {
	var map = new haxe_ds_ObjectMap();
	var this1 = map;
	var set = this1;
	if(null != it) {
		thx__$Set_Set_$Impl_$.pushMany(set,it);
	}
	return set;
};
thx__$Set_Set_$Impl_$.createEnum = function(arr) {
	var map = new haxe_ds_EnumValueMap();
	var this1 = map;
	var set = this1;
	if(null != arr) {
		thx__$Set_Set_$Impl_$.pushMany(set,arr);
	}
	return set;
};
thx__$Set_Set_$Impl_$._new = function(map) {
	var this1 = map;
	return this1;
};
thx__$Set_Set_$Impl_$.add = function(this1,v) {
	if(this1.exists(v)) {
		return false;
	} else {
		this1.set(v,true);
		return true;
	}
};
thx__$Set_Set_$Impl_$.copy = function(this1) {
	var inst = thx__$Set_Set_$Impl_$.empty(this1);
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		inst.set(k1,true);
	}
	return inst;
};
thx__$Set_Set_$Impl_$.empty = function(this1) {
	var inst = Type.createInstance(js_Boot.getClass(this1),[]);
	var this2 = inst;
	return this2;
};
thx__$Set_Set_$Impl_$.difference = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.copy(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(set);
	while(item.hasNext()) {
		var item1 = item.next();
		result.remove(item1);
	}
	return result;
};
thx__$Set_Set_$Impl_$.filter = function(this1,predicate) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		if(predicate(v)) {
			thx__$Set_Set_$Impl_$.add(acc,v);
		}
		return acc;
	},thx__$Set_Set_$Impl_$.empty(this1));
};
thx__$Set_Set_$Impl_$.map = function(this1,f) {
	return thx__$Set_Set_$Impl_$.reduce(this1,function(acc,v) {
		acc.push(f(v));
		return acc;
	},[]);
};
thx__$Set_Set_$Impl_$.exists = function(this1,v) {
	return this1.exists(v);
};
thx__$Set_Set_$Impl_$.remove = function(this1,v) {
	return this1.remove(v);
};
thx__$Set_Set_$Impl_$.intersection = function(this1,set) {
	var result = thx__$Set_Set_$Impl_$.empty(this1);
	var item = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(item.hasNext()) {
		var item1 = item.next();
		if(set.exists(item1)) {
			result.set(item1,true);
		}
	}
	return result;
};
thx__$Set_Set_$Impl_$.push = function(this1,v) {
	this1.set(v,true);
};
thx__$Set_Set_$Impl_$.pushMany = function(this1,values) {
	var value = $getIterator(values);
	while(value.hasNext()) {
		var value1 = value.next();
		this1.set(value1,true);
	}
};
thx__$Set_Set_$Impl_$.reduce = function(this1,handler,acc) {
	var v = $iterator(thx__$Set_Set_$Impl_$)(this1);
	while(v.hasNext()) {
		var v1 = v.next();
		acc = handler(acc,v1);
	}
	return acc;
};
thx__$Set_Set_$Impl_$.iterator = function(this1) {
	return this1.keys();
};
thx__$Set_Set_$Impl_$.union = function(this1,set) {
	var newset = thx__$Set_Set_$Impl_$.copy(this1);
	thx__$Set_Set_$Impl_$.pushMany(newset,thx__$Set_Set_$Impl_$.toArray(set));
	return newset;
};
thx__$Set_Set_$Impl_$.toArray = function(this1) {
	var arr = [];
	var k = this1.keys();
	while(k.hasNext()) {
		var k1 = k.next();
		arr.push(k1);
	}
	return arr;
};
thx__$Set_Set_$Impl_$.toString = function(this1) {
	return "{" + thx__$Set_Set_$Impl_$.toArray(this1).join(", ") + "}";
};
thx__$Set_Set_$Impl_$.get_length = function(this1) {
	var l = 0;
	var i = this1.iterator();
	while(i.hasNext()) {
		var i1 = i.next();
		++l;
	}
	return l;
};
var thx_Strings = function() { };
$hxClasses["thx.Strings"] = thx_Strings;
thx_Strings.__name__ = "thx.Strings";
thx_Strings.after = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.afterLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos + searchFor.length);
	}
};
thx_Strings.before = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.beforeLast = function(value,searchFor) {
	var pos = value.lastIndexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.capitalize = function(s) {
	return HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,null);
};
thx_Strings.capitalizeWords = function(value,whiteSpaceOnly) {
	if(whiteSpaceOnly == null) {
		whiteSpaceOnly = false;
	}
	if(whiteSpaceOnly) {
		return thx_Strings.UCWORDSWS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,null),thx_Strings.upperMatch);
	} else {
		return thx_Strings.UCWORDS.map(HxOverrides.substr(value,0,1).toUpperCase() + HxOverrides.substr(value,1,null),thx_Strings.upperMatch);
	}
};
thx_Strings.canonicalizeNewlines = function(value) {
	return value.replace(thx_Strings.CANONICALIZE_LINES.r,"\n");
};
thx_Strings.caseInsensitiveCompare = function(a,b) {
	if(null == a && null == b) {
		return 0;
	}
	if(null == a) {
		return -1;
	} else if(null == b) {
		return 1;
	}
	var a1 = a.toLowerCase();
	var b1 = b.toLowerCase();
	if(a1 < b1) {
		return -1;
	} else if(a1 > b1) {
		return 1;
	} else {
		return 0;
	}
};
thx_Strings.caseInsensitiveEndsWith = function(s,end) {
	return StringTools.endsWith(s.toLowerCase(),end.toLowerCase());
};
thx_Strings.caseInsensitiveEndsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.endsWithAny(tmp,result);
};
thx_Strings.caseInsensitiveStartsWith = function(s,start) {
	return StringTools.startsWith(s.toLowerCase(),start.toLowerCase());
};
thx_Strings.caseInsensitiveStartsWithAny = function(s,values) {
	var tmp = s.toLowerCase();
	var result = new Array(values.length);
	var _g = 0;
	var _g1 = values.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = values[i].toLowerCase();
	}
	return thx_Strings.startsWithAny(tmp,result);
};
thx_Strings.collapse = function(value) {
	var _this = thx_Strings.WSG;
	return StringTools.trim(value).replace(_this.r," ");
};
thx_Strings.compare = function(a,b) {
	if(a < b) {
		return -1;
	} else if(a > b) {
		return 1;
	} else {
		return 0;
	}
};
thx_Strings.caseInsensitiveContains = function(s,test) {
	return s.toLowerCase().indexOf(test.toLowerCase()) >= 0;
};
thx_Strings.contains = function(s,test) {
	return s.indexOf(test) >= 0;
};
thx_Strings.count = function(s,test) {
	return s.split(test).length - 1;
};
thx_Strings.caseInsensitiveContainsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAny = function(s,tests) {
	var s1 = s;
	return thx_Arrays.any(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.caseInsensitiveContainsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.toLowerCase().indexOf(test.toLowerCase()) >= 0;
	});
};
thx_Strings.containsAll = function(s,tests) {
	var s1 = s;
	return thx_Arrays.all(tests,function(test) {
		return s1.indexOf(test) >= 0;
	});
};
thx_Strings.dasherize = function(s) {
	return StringTools.replace(s,"_","-");
};
thx_Strings.diffAt = function(a,b) {
	var a1 = a.length;
	var b1 = b.length;
	var min = a1 < b1 ? a1 : b1;
	var _g = 0;
	var _g1 = min;
	while(_g < _g1) {
		var i = _g++;
		if(a.substring(i,i + 1) != b.substring(i,i + 1)) {
			return i;
		}
	}
	return min;
};
thx_Strings.ellipsis = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen < symboll) {
			return HxOverrides.substr(symbol,symboll - maxlen,maxlen);
		} else {
			return HxOverrides.substr(s,0,maxlen - symboll) + symbol;
		}
	} else {
		return s;
	}
};
thx_Strings.ellipsisMiddle = function(s,maxlen,symbol) {
	if(symbol == null) {
		symbol = "…";
	}
	if(maxlen == null) {
		maxlen = 20;
	}
	var sl = s.length;
	var symboll = symbol.length;
	if(sl > maxlen) {
		if(maxlen <= symboll) {
			return thx_Strings.ellipsis(s,maxlen,symbol);
		}
		var hll = Math.ceil((maxlen - symboll) / 2);
		var hlr = Math.floor((maxlen - symboll) / 2);
		return HxOverrides.substr(s,0,hll) + symbol + HxOverrides.substr(s,sl - hlr,hlr);
	} else {
		return s;
	}
};
thx_Strings.endsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(end) {
		return StringTools.endsWith(s,end);
	});
};
thx_Strings.filter = function(s,predicate) {
	var _g = [];
	var _g1 = 0;
	var _g2 = s.split("");
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	return _g.join("");
};
thx_Strings.filterCharcode = function(s,predicate) {
	var _g = [];
	var _g1 = 0;
	var _g2 = thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(predicate(v)) {
			_g.push(v);
		}
	}
	var codes = _g;
	var result = new Array(codes.length);
	var _g3 = 0;
	var _g11 = codes.length;
	while(_g3 < _g11) {
		var i = _g3++;
		result[i] = String.fromCodePoint(codes[i]);
	}
	return result.join("");
};
thx_Strings.from = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return "";
	} else {
		return value.substring(pos);
	}
};
thx_Strings.hashCode = function(value) {
	var code = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(value,i);
		code = (haxe__$Int32_Int32_$Impl_$._mul(thx_Strings.HASCODE_MUL,code) + c | 0) % thx_Strings.HASCODE_MAX;
	}
	return code;
};
thx_Strings.hasContent = function(value) {
	if(value != null) {
		return value.length > 0;
	} else {
		return false;
	}
};
thx_Strings.humanize = function(s) {
	return StringTools.replace(thx_Strings.underscore(s),"_"," ");
};
thx_Strings.isAlpha = function(s) {
	if(s.length > 0) {
		return !thx_Strings.IS_ALPHA.match(s);
	} else {
		return false;
	}
};
thx_Strings.isAlphaNum = function(value) {
	return thx_Strings.ALPHANUM.match(value);
};
thx_Strings.isBreakingWhitespace = function(value) {
	return !thx_Strings.IS_BREAKINGWHITESPACE.match(value);
};
thx_Strings.isLowerCase = function(value) {
	return value.toLowerCase() == value;
};
thx_Strings.isUpperCase = function(value) {
	return value.toUpperCase() == value;
};
thx_Strings.ifEmpty = function(value,alt) {
	if(null != value && "" != value) {
		return value;
	} else {
		return alt;
	}
};
thx_Strings.isDigitsOnly = function(value) {
	return thx_Strings.DIGITS.match(value);
};
thx_Strings.isEmpty = function(value) {
	if(value != null) {
		return value == "";
	} else {
		return true;
	}
};
thx_Strings.lowerCaseFirst = function(value) {
	return value.substring(0,1).toLowerCase() + value.substring(1);
};
thx_Strings.random = function(value,length) {
	if(length == null) {
		length = 1;
	}
	return HxOverrides.substr(value,Math.floor((value.length - length + 1) * Math.random()),length);
};
thx_Strings.randomSequence = function(seed,length) {
	var _this = thx_Ints.range(0,length);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.random(seed);
	}
	return result.join("");
};
thx_Strings.randomSequence64 = function(length) {
	return thx_Strings.randomSequence(haxe_crypto_Base64.CHARS,length);
};
thx_Strings.iterator = function(s) {
	return HxOverrides.iter(s.split(""));
};
thx_Strings.map = function(value,callback) {
	var _this = value.split("");
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = callback(_this[i]);
	}
	return result;
};
thx_Strings.remove = function(value,toremove) {
	return StringTools.replace(value,toremove,"");
};
thx_Strings.removeAfter = function(value,toremove) {
	if(StringTools.endsWith(value,toremove)) {
		return value.substring(0,value.length - toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeAt = function(value,index,length) {
	return value.substring(0,index) + value.substring(index + length);
};
thx_Strings.removeBefore = function(value,toremove) {
	if(StringTools.startsWith(value,toremove)) {
		return value.substring(toremove.length);
	} else {
		return value;
	}
};
thx_Strings.removeOne = function(value,toremove) {
	var pos = value.indexOf(toremove);
	if(pos < 0) {
		return value;
	}
	return value.substring(0,pos) + value.substring(pos + toremove.length);
};
thx_Strings.repeat = function(s,times) {
	var _g = [];
	var _g1 = 0;
	var _g2 = times;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(s);
	}
	return _g.join("");
};
thx_Strings.reverse = function(s) {
	var arr = s.split("");
	arr.reverse();
	return arr.join("");
};
thx_Strings.quote = function(s) {
	if(s.indexOf("\"") < 0) {
		return "\"" + s + "\"";
	} else if(s.indexOf("'") < 0) {
		return "'" + s + "'";
	} else {
		return "\"" + StringTools.replace(s,"\"","\\\"") + "\"";
	}
};
thx_Strings.splitOnce = function(s,separator) {
	var pos = s.indexOf(separator);
	if(pos < 0) {
		return [s];
	}
	return [s.substring(0,pos),s.substring(pos + separator.length)];
};
thx_Strings.startsWithAny = function(s,values) {
	return thx_Iterables.any(values,function(start) {
		return StringTools.startsWith(s,start);
	});
};
thx_Strings.stripTags = function(s) {
	return s.replace(thx_Strings.STRIPTAGS.r,"");
};
thx_Strings.surround = function(s,left,right) {
	return "" + left + s + (null == right ? left : right);
};
thx_Strings.toArray = function(s) {
	return s.split("");
};
thx_Strings.toCharcodes = function(s) {
	return thx_Strings.map(s,function(s1) {
		return HxOverrides.cca(s1,0);
	});
};
thx_Strings.toChunks = function(s,len) {
	var chunks = [];
	while(s.length > 0) {
		chunks.push(HxOverrides.substr(s,0,len));
		s = HxOverrides.substr(s,len,s.length - len);
	}
	return chunks;
};
thx_Strings.toLines = function(s) {
	return thx_Strings.SPLIT_LINES.split(s);
};
thx_Strings.trimChars = function(value,charlist) {
	return thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(value,charlist),charlist);
};
thx_Strings.trimCharsLeft = function(value,charlist) {
	var pos = 0;
	var _g = 0;
	var _g1 = value.length;
	while(_g < _g1) {
		var i = _g++;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			++pos;
		} else {
			break;
		}
	}
	return value.substring(pos);
};
thx_Strings.trimCharsRight = function(value,charlist) {
	var len = value.length;
	var pos = len;
	var i;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var j = _g++;
		i = len - j - 1;
		if(charlist.indexOf(value.charAt(i)) >= 0) {
			pos = i;
		} else {
			break;
		}
	}
	return value.substring(0,pos);
};
thx_Strings.underscore = function(s) {
	var _this_r = new RegExp("::","g".split("u").join(""));
	s = s.replace(_this_r,"/");
	var _this_r1 = new RegExp("([A-Z]+)([A-Z][a-z])","g".split("u").join(""));
	s = s.replace(_this_r1,"$1_$2");
	var _this_r2 = new RegExp("([a-z\\d])([A-Z])","g".split("u").join(""));
	s = s.replace(_this_r2,"$1_$2");
	var _this_r3 = new RegExp("-","g".split("u").join(""));
	s = s.replace(_this_r3,"_");
	return s.toLowerCase();
};
thx_Strings.upperCaseFirst = function(value) {
	return value.substring(0,1).toUpperCase() + value.substring(1);
};
thx_Strings.upTo = function(value,searchFor) {
	var pos = value.indexOf(searchFor);
	if(pos < 0) {
		return value;
	} else {
		return value.substring(0,pos);
	}
};
thx_Strings.wrapColumns = function(s,columns,indent,newline) {
	if(newline == null) {
		newline = "\n";
	}
	if(indent == null) {
		indent = "";
	}
	if(columns == null) {
		columns = 78;
	}
	var _this = thx_Strings.SPLIT_LINES.split(s);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = thx_Strings.wrapLine(StringTools.trim(_this[i].replace(thx_Strings.WSG.r," ")),columns,indent,newline);
	}
	return result.join(newline);
};
thx_Strings.upperMatch = function(re) {
	return re.matched(0).toUpperCase();
};
thx_Strings.wrapLine = function(s,columns,indent,newline) {
	var parts = [];
	var pos = 0;
	var len = s.length;
	var ilen = indent.length;
	columns -= ilen;
	while(true) {
		if(pos + columns >= len - ilen) {
			parts.push(s.substring(pos));
			break;
		}
		var i = 0;
		while(!StringTools.isSpace(s,pos + columns - i) && i < columns) ++i;
		if(i == columns) {
			i = 0;
			while(!StringTools.isSpace(s,pos + columns + i) && pos + columns + i < len) ++i;
			parts.push(s.substring(pos,pos + columns + i));
			pos += columns + i + 1;
		} else {
			parts.push(s.substring(pos,pos + columns - i));
			pos += columns - i + 1;
		}
	}
	return indent + parts.join(newline + indent);
};
thx_Strings.lpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return thx_Strings.repeat(char,diff) + s;
	} else {
		return s;
	}
};
thx_Strings.rpad = function(s,char,length) {
	var diff = length - s.length;
	if(diff > 0) {
		return s + thx_Strings.repeat(char,diff);
	} else {
		return s;
	}
};
var thx_TimePeriod = $hxEnums["thx.TimePeriod"] = { __ename__ : "thx.TimePeriod", __constructs__ : ["Second","Minute","Hour","Day","Week","Month","Year"]
	,Second: {_hx_index:0,__enum__:"thx.TimePeriod",toString:$estr}
	,Minute: {_hx_index:1,__enum__:"thx.TimePeriod",toString:$estr}
	,Hour: {_hx_index:2,__enum__:"thx.TimePeriod",toString:$estr}
	,Day: {_hx_index:3,__enum__:"thx.TimePeriod",toString:$estr}
	,Week: {_hx_index:4,__enum__:"thx.TimePeriod",toString:$estr}
	,Month: {_hx_index:5,__enum__:"thx.TimePeriod",toString:$estr}
	,Year: {_hx_index:6,__enum__:"thx.TimePeriod",toString:$estr}
};
var thx__$Timestamp_Timestamp_$Impl_$ = {};
$hxClasses["thx._Timestamp.Timestamp_Impl_"] = thx__$Timestamp_Timestamp_$Impl_$;
thx__$Timestamp_Timestamp_$Impl_$.__name__ = "thx._Timestamp.Timestamp_Impl_";
thx__$Timestamp_Timestamp_$Impl_$.create = function(year,month,day,hour,minute,second) {
	return thx_Dates.create(year,month,day,hour,minute,second).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.now = function() {
	return new Date().getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromDate = function(d) {
	return d.getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.fromString = function(s) {
	return HxOverrides.strDate(s).getTime();
};
thx__$Timestamp_Timestamp_$Impl_$.toDate = function(this1) {
	return new Date(this1);
};
thx__$Timestamp_Timestamp_$Impl_$.toString = function(this1) {
	return HxOverrides.dateStr(new Date(this1));
};
thx__$Timestamp_Timestamp_$Impl_$.snapNext = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.ceil(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.ceil(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.ceil(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + 1,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + 7 - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + 1,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear() + 1,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapPrev = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.floor(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.floor(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.floor(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() - wd,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		return thx_Dates.create(d2.getFullYear(),d2.getMonth(),1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		return thx_Dates.create(d3.getFullYear(),0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.snapTo = function(this1,period) {
	switch(period._hx_index) {
	case 0:
		return Math.round(this1 / 1000.0) * 1000.0;
	case 1:
		return Math.round(this1 / 60000.0) * 60000.0;
	case 2:
		return Math.round(this1 / 3600000.0) * 3600000.0;
	case 3:
		var d = new Date(this1);
		var mod = d.getHours() >= 12 ? 1 : 0;
		return thx_Dates.create(d.getFullYear(),d.getMonth(),d.getDate() + mod,0,0,0).getTime();
	case 4:
		var d1 = new Date(this1);
		var wd = d1.getDay();
		var mod1 = wd < 3 ? -wd : wd > 3 ? 7 - wd : d1.getHours() < 12 ? -wd : 7 - wd;
		return thx_Dates.create(d1.getFullYear(),d1.getMonth(),d1.getDate() + mod1,0,0,0).getTime();
	case 5:
		var d2 = new Date(this1);
		var mod2 = d2.getDate() > Math.round(DateTools.getMonthDays(d2) / 2) ? 1 : 0;
		return thx_Dates.create(d2.getFullYear(),d2.getMonth() + mod2,1,0,0,0).getTime();
	case 6:
		var d3 = new Date(this1);
		var mod3 = this1 > new Date(d3.getFullYear(),6,2,0,0,0).getTime() ? 1 : 0;
		return thx_Dates.create(d3.getFullYear() + mod3,0,1,0,0,0).getTime();
	}
};
thx__$Timestamp_Timestamp_$Impl_$.r = function(t,v) {
	return Math.round(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.f = function(t,v) {
	return Math.floor(t / v) * v;
};
thx__$Timestamp_Timestamp_$Impl_$.c = function(t,v) {
	return Math.ceil(t / v) * v;
};
var thx__$Tuple_Tuple0_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple0_Impl_"] = thx__$Tuple_Tuple0_$Impl_$;
thx__$Tuple_Tuple0_$Impl_$.__name__ = "thx._Tuple.Tuple0_Impl_";
thx__$Tuple_Tuple0_$Impl_$._new = function() {
	var this1 = thx_Nil.nil;
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.with = function(this1,v) {
	var this2 = v;
	return this2;
};
thx__$Tuple_Tuple0_$Impl_$.toString = function(this1) {
	return "Tuple0()";
};
thx__$Tuple_Tuple0_$Impl_$.toNil = function(this1) {
	return this1;
};
thx__$Tuple_Tuple0_$Impl_$.nilToTuple = function(v) {
	var this1 = thx_Nil.nil;
	return this1;
};
var thx__$Tuple_Tuple1_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple1_Impl_"] = thx__$Tuple_Tuple1_$Impl_$;
thx__$Tuple_Tuple1_$Impl_$.__name__ = "thx._Tuple.Tuple1_Impl_";
thx__$Tuple_Tuple1_$Impl_$.__properties__ = {get__0:"get__0"};
thx__$Tuple_Tuple1_$Impl_$._new = function(_0) {
	var this1 = _0;
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.get__0 = function(this1) {
	return this1;
};
thx__$Tuple_Tuple1_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1, _1 : v};
	return this2;
};
thx__$Tuple_Tuple1_$Impl_$.toString = function(this1) {
	return "Tuple1(" + Std.string(this1) + ")";
};
thx__$Tuple_Tuple1_$Impl_$.arrayToTuple = function(v) {
	var this1 = v[0];
	return this1;
};
var thx__$Tuple_Tuple2_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple2_Impl_"] = thx__$Tuple_Tuple2_$Impl_$;
thx__$Tuple_Tuple2_$Impl_$.__name__ = "thx._Tuple.Tuple2_Impl_";
thx__$Tuple_Tuple2_$Impl_$.__properties__ = {get_right:"get_right",get_left:"get_left"};
thx__$Tuple_Tuple2_$Impl_$.of = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$._new = function(_0,_1) {
	var this1 = { _0 : _0, _1 : _1};
	return this1;
};
thx__$Tuple_Tuple2_$Impl_$.get_left = function(this1) {
	return this1._0;
};
thx__$Tuple_Tuple2_$Impl_$.get_right = function(this1) {
	return this1._1;
};
thx__$Tuple_Tuple2_$Impl_$.flip = function(this1) {
	return { _0 : this1._1, _1 : this1._0};
};
thx__$Tuple_Tuple2_$Impl_$.dropLeft = function(this1) {
	var this2 = this1._1;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.dropRight = function(this1) {
	var this2 = this1._0;
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : v};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.toString = function(this1) {
	return "Tuple2(" + Std.string(this1._0) + "," + Std.string(this1._1) + ")";
};
thx__$Tuple_Tuple2_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : f(this1._1)};
	return this2;
};
thx__$Tuple_Tuple2_$Impl_$.squeeze = function(f) {
	return function(tp) {
		return f(tp._0,tp._1);
	};
};
thx__$Tuple_Tuple2_$Impl_$.arrayToTuple2 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1]};
	return this1;
};
var thx__$Tuple_Tuple3_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple3_Impl_"] = thx__$Tuple_Tuple3_$Impl_$;
thx__$Tuple_Tuple3_$Impl_$.__name__ = "thx._Tuple.Tuple3_Impl_";
thx__$Tuple_Tuple3_$Impl_$.of = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$._new = function(_0,_1,_2) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.flip = function(this1) {
	return { _0 : this1._2, _1 : this1._1, _2 : this1._0};
};
thx__$Tuple_Tuple3_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : v};
	return this2;
};
thx__$Tuple_Tuple3_$Impl_$.toString = function(this1) {
	return "Tuple3(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + ")";
};
thx__$Tuple_Tuple3_$Impl_$.arrayToTuple3 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2]};
	return this1;
};
thx__$Tuple_Tuple3_$Impl_$.map = function(this1,f) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : f(this1._2)};
	return this2;
};
var thx__$Tuple_Tuple4_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple4_Impl_"] = thx__$Tuple_Tuple4_$Impl_$;
thx__$Tuple_Tuple4_$Impl_$.__name__ = "thx._Tuple.Tuple4_Impl_";
thx__$Tuple_Tuple4_$Impl_$.of = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$._new = function(_0,_1,_2,_3) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3};
	return this1;
};
thx__$Tuple_Tuple4_$Impl_$.flip = function(this1) {
	return { _0 : this1._3, _1 : this1._2, _2 : this1._1, _3 : this1._0};
};
thx__$Tuple_Tuple4_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : v};
	return this2;
};
thx__$Tuple_Tuple4_$Impl_$.toString = function(this1) {
	return "Tuple4(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + ")";
};
thx__$Tuple_Tuple4_$Impl_$.arrayToTuple4 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3]};
	return this1;
};
var thx__$Tuple_Tuple5_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple5_Impl_"] = thx__$Tuple_Tuple5_$Impl_$;
thx__$Tuple_Tuple5_$Impl_$.__name__ = "thx._Tuple.Tuple5_Impl_";
thx__$Tuple_Tuple5_$Impl_$.of = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$._new = function(_0,_1,_2,_3,_4) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4};
	return this1;
};
thx__$Tuple_Tuple5_$Impl_$.flip = function(this1) {
	return { _0 : this1._4, _1 : this1._3, _2 : this1._2, _3 : this1._1, _4 : this1._0};
};
thx__$Tuple_Tuple5_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.with = function(this1,v) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4, _5 : v};
	return this2;
};
thx__$Tuple_Tuple5_$Impl_$.toString = function(this1) {
	return "Tuple5(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + ")";
};
thx__$Tuple_Tuple5_$Impl_$.arrayToTuple5 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4]};
	return this1;
};
var thx__$Tuple_Tuple6_$Impl_$ = {};
$hxClasses["thx._Tuple.Tuple6_Impl_"] = thx__$Tuple_Tuple6_$Impl_$;
thx__$Tuple_Tuple6_$Impl_$.__name__ = "thx._Tuple.Tuple6_Impl_";
thx__$Tuple_Tuple6_$Impl_$.of = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$._new = function(_0,_1,_2,_3,_4,_5) {
	var this1 = { _0 : _0, _1 : _1, _2 : _2, _3 : _3, _4 : _4, _5 : _5};
	return this1;
};
thx__$Tuple_Tuple6_$Impl_$.flip = function(this1) {
	return { _0 : this1._5, _1 : this1._4, _2 : this1._3, _3 : this1._2, _4 : this1._1, _5 : this1._0};
};
thx__$Tuple_Tuple6_$Impl_$.dropLeft = function(this1) {
	var this2 = { _0 : this1._1, _1 : this1._2, _2 : this1._3, _3 : this1._4, _4 : this1._5};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.dropRight = function(this1) {
	var this2 = { _0 : this1._0, _1 : this1._1, _2 : this1._2, _3 : this1._3, _4 : this1._4};
	return this2;
};
thx__$Tuple_Tuple6_$Impl_$.toString = function(this1) {
	return "Tuple6(" + Std.string(this1._0) + "," + Std.string(this1._1) + "," + Std.string(this1._2) + "," + Std.string(this1._3) + "," + Std.string(this1._4) + "," + Std.string(this1._5) + ")";
};
thx__$Tuple_Tuple6_$Impl_$.arrayToTuple6 = function(v) {
	var this1 = { _0 : v[0], _1 : v[1], _2 : v[2], _3 : v[3], _4 : v[4], _5 : v[5]};
	return this1;
};
var thx_Types = function() { };
$hxClasses["thx.Types"] = thx_Types;
thx_Types.__name__ = "thx.Types";
thx_Types.isAnonymousObject = function(v) {
	if(Reflect.isObject(v)) {
		return null == js_Boot.getClass(v);
	} else {
		return false;
	}
};
thx_Types.isObject = function(v) {
	if(Reflect.isObject(v)) {
		return !thx_Types.isPrimitive(v);
	} else {
		return false;
	}
};
thx_Types.isPrimitive = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 1:case 2:case 3:
		return true;
	case 0:case 4:case 5:case 8:
		return false;
	case 6:
		var _g2 = _g.c;
		var c = _g2;
		if(c.__name__ == "String") {
			return true;
		} else {
			var c1 = _g2;
			if(c1.__name__ == "Date") {
				return true;
			} else {
				return false;
			}
		}
		break;
	case 7:
		var _g1 = _g.e;
		return false;
	}
};
thx_Types.isEnumValue = function(v) {
	var _g = Type.typeof(v);
	if(_g._hx_index == 7) {
		var _g1 = _g.e;
		return true;
	} else {
		return false;
	}
};
thx_Types.hasSuperClass = function(cls,sup) {
	while(null != cls) {
		if(cls == sup) {
			return true;
		}
		cls = cls.__super__;
	}
	return false;
};
thx_Types.sameType = function(a,b) {
	return thx_Types.toString(Type.typeof(a)) == thx_Types.toString(Type.typeof(b));
};
thx_Types.typeInheritance = function(type) {
	switch(type._hx_index) {
	case 1:
		return ["Int"];
	case 2:
		return ["Float"];
	case 3:
		return ["Bool"];
	case 4:
		return ["{}"];
	case 5:
		return ["Function"];
	case 6:
		var c = type.c;
		var classes = [];
		while(null != c) {
			classes.push(c);
			c = c.__super__;
		}
		var f = Type.getClassName;
		var result = new Array(classes.length);
		var _g = 0;
		var _g1 = classes.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = f(classes[i]);
		}
		return result;
	case 7:
		var e = type.e;
		return [e.__ename__];
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.toString = function(type) {
	switch(type._hx_index) {
	case 0:
		return "Null";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "{}";
	case 5:
		return "Function";
	case 6:
		var c = type.c;
		return c.__name__;
	case 7:
		var e = type.e;
		return e.__ename__;
	default:
		throw new js__$Boot_HaxeError("invalid type " + Std.string(type));
	}
};
thx_Types.valueTypeInheritance = function(value) {
	return thx_Types.typeInheritance(Type.typeof(value));
};
thx_Types.valueTypeToString = function(value) {
	return thx_Types.toString(Type.typeof(value));
};
thx_Types.anyValueToString = function(value) {
	if(js_Boot.__instanceof(value,ValueType)) {
		return thx_Types.toString(value);
	}
	if(js_Boot.__instanceof(value,Class)) {
		return value.__name__;
	}
	if(js_Boot.__instanceof(value,Enum)) {
		return value.__ename__;
	}
	return thx_Types.toString(Type.typeof(value));
};
var thx__$Validation_Validation_$Impl_$ = {};
$hxClasses["thx._Validation.Validation_Impl_"] = thx__$Validation_Validation_$Impl_$;
thx__$Validation_Validation_$Impl_$.__name__ = "thx._Validation.Validation_Impl_";
thx__$Validation_Validation_$Impl_$.__properties__ = {get_either:"get_either"};
thx__$Validation_Validation_$Impl_$.get_either = function(this1) {
	return this1;
};
thx__$Validation_Validation_$Impl_$.pure = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.success = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failure = function(e) {
	return thx_Either.Left(e);
};
thx__$Validation_Validation_$Impl_$.successNel = function(a) {
	return thx_Either.Right(a);
};
thx__$Validation_Validation_$Impl_$.failureNel = function(e) {
	return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
};
thx__$Validation_Validation_$Impl_$.nn = function(a,e) {
	if(a == null) {
		return thx_Either.Left(e);
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.nnNel = function(a,e) {
	if(a == null) {
		return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(e));
	} else {
		return thx_Either.Right(a);
	}
};
thx__$Validation_Validation_$Impl_$.map = function(this1,f) {
	return thx_Eithers.map(this1,f);
};
thx__$Validation_Validation_$Impl_$.ap = function(this1,v,s) {
	switch(this1._hx_index) {
	case 0:
		var e0 = this1.value;
		var _g = v;
		switch(_g._hx_index) {
		case 0:
			var e1 = _g.value;
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e0,e1));
		case 1:
			var b = _g.value;
			return thx_Either.Left(e0);
		}
		break;
	case 1:
		var a = this1.value;
		var _g1 = v;
		switch(_g1._hx_index) {
		case 0:
			var e = _g1.value;
			return thx_Either.Left(e);
		case 1:
			var f = _g1.value;
			return thx_Either.Right(f(a));
		}
		break;
	}
};
thx__$Validation_Validation_$Impl_$.flatMapV = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		var a = this1.value;
		return thx_Either.Left(a);
	case 1:
		var b = this1.value;
		return f(b);
	}
};
thx__$Validation_Validation_$Impl_$.orElseV = function(this1,other,s) {
	var _g = other;
	switch(this1._hx_index) {
	case 0:
		var _g1 = this1.value;
		switch(_g._hx_index) {
		case 0:
			var e1 = _g1;
			var e2 = _g.value;
			return thx_Either.Left((thx__$Semigroup_Semigroup_$Impl_$.get_append(s))(e1,e2));
		case 1:
			var _g3 = _g.value;
			return other;
		}
		break;
	case 1:
		var _g4 = this1.value;
		return this1;
	}
};
thx__$Validation_Validation_$Impl_$.foldLeft = function(this1,b,f) {
	return thx_Eithers.foldLeft(this1,b,f);
};
thx__$Validation_Validation_$Impl_$.foldMap = function(this1,f,m) {
	return thx_Eithers.foldMap(this1,f,m);
};
thx__$Validation_Validation_$Impl_$.leftMap = function(this1,f) {
	return thx_Eithers.leftMap(this1,f);
};
thx__$Validation_Validation_$Impl_$.wrapNel = function(this1) {
	return thx_Eithers.leftMap(this1,thx__$Nel_Nel_$Impl_$.pure);
};
thx__$Validation_Validation_$Impl_$.ensure = function(this1,p,error) {
	return thx_Eithers.ensure(this1,p,error);
};
thx__$Validation_Validation_$Impl_$.vnel = function(e) {
	return e;
};
thx__$Validation_Validation_$Impl_$.val1 = function(f,v1) {
	return thx__$Validation_Validation_$Impl_$.map(v1,f);
};
thx__$Validation_Validation_$Impl_$.val2 = function(f,v1,v2,s) {
	return thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(f)),s);
};
thx__$Validation_Validation_$Impl_$.val3 = function(f,v1,v2,v3,s) {
	var f1 = f;
	return thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a,b) {
		return function(c) {
			return f1(a,b,c);
		};
	})),s),s);
};
thx__$Validation_Validation_$Impl_$.val4 = function(f,v1,v2,v3,v4,s) {
	var f1 = f;
	var f2 = function(a,b,c) {
		return function(d) {
			return f1(a,b,c,d);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a1,b1) {
		return function(c1) {
			return f2(a1,b1,c1);
		};
	})),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val5 = function(f,v1,v2,v3,v4,v5,s) {
	var f1 = f;
	var f2 = function(a,b,c,d) {
		return function(e) {
			return f1(a,b,c,d,e);
		};
	};
	var f3 = function(a1,b1,c1) {
		return function(d1) {
			return f2(a1,b1,c1,d1);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a2,b2) {
		return function(c2) {
			return f3(a2,b2,c2);
		};
	})),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val6 = function(f,v1,v2,v3,v4,v5,v6,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e) {
		return function(f0) {
			return f1(a,b,c,d,e,f0);
		};
	};
	var f3 = function(a1,b1,c1,d1) {
		return function(e1) {
			return f2(a1,b1,c1,d1,e1);
		};
	};
	var f4 = function(a2,b2,c2) {
		return function(d2) {
			return f3(a2,b2,c2,d2);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a3,b3) {
		return function(c3) {
			return f4(a3,b3,c3);
		};
	})),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val7 = function(f,v1,v2,v3,v4,v5,v6,v7,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0) {
		return function(g) {
			return f1(a,b,c,d,e,f0,g);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1) {
		return function(f01) {
			return f2(a1,b1,c1,d1,e1,f01);
		};
	};
	var f4 = function(a2,b2,c2,d2) {
		return function(e2) {
			return f3(a2,b2,c2,d2,e2);
		};
	};
	var f5 = function(a3,b3,c3) {
		return function(d3) {
			return f4(a3,b3,c3,d3);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a4,b4) {
		return function(c4) {
			return f5(a4,b4,c4);
		};
	})),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val8 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g) {
		return function(h) {
			return f1(a,b,c,d,e,f0,g,h);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01) {
		return function(g1) {
			return f2(a1,b1,c1,d1,e1,f01,g1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2) {
		return function(f02) {
			return f3(a2,b2,c2,d2,e2,f02);
		};
	};
	var f5 = function(a3,b3,c3,d3) {
		return function(e3) {
			return f4(a3,b3,c3,d3,e3);
		};
	};
	var f6 = function(a4,b4,c4) {
		return function(d4) {
			return f5(a4,b4,c4,d4);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a5,b5) {
		return function(c5) {
			return f6(a5,b5,c5);
		};
	})),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val9 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h) {
		return function(i) {
			return f1(a,b,c,d,e,f0,g,h,i);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1) {
		return function(h1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02) {
		return function(g2) {
			return f3(a2,b2,c2,d2,e2,f02,g2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3) {
		return function(f03) {
			return f4(a3,b3,c3,d3,e3,f03);
		};
	};
	var f6 = function(a4,b4,c4,d4) {
		return function(e4) {
			return f5(a4,b4,c4,d4,e4);
		};
	};
	var f7 = function(a5,b5,c5) {
		return function(d5) {
			return f6(a5,b5,c5,d5);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a6,b6) {
		return function(c6) {
			return f7(a6,b6,c6);
		};
	})),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val10 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i) {
		return function(j) {
			return f1(a,b,c,d,e,f0,g,h,i,j);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1) {
		return function(i1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2) {
		return function(h2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03) {
		return function(g3) {
			return f4(a3,b3,c3,d3,e3,f03,g3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4) {
		return function(f04) {
			return f5(a4,b4,c4,d4,e4,f04);
		};
	};
	var f7 = function(a5,b5,c5,d5) {
		return function(e5) {
			return f6(a5,b5,c5,d5,e5);
		};
	};
	var f8 = function(a6,b6,c6) {
		return function(d6) {
			return f7(a6,b6,c6,d6);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a7,b7) {
		return function(c7) {
			return f8(a7,b7,c7);
		};
	})),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val11 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j) {
		return function(k) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1) {
		return function(j1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2) {
		return function(i2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3) {
		return function(h3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04) {
		return function(g4) {
			return f5(a4,b4,c4,d4,e4,f04,g4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5) {
		return function(f05) {
			return f6(a5,b5,c5,d5,e5,f05);
		};
	};
	var f8 = function(a6,b6,c6,d6) {
		return function(e6) {
			return f7(a6,b6,c6,d6,e6);
		};
	};
	var f9 = function(a7,b7,c7) {
		return function(d7) {
			return f8(a7,b7,c7,d7);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a8,b8) {
		return function(c8) {
			return f9(a8,b8,c8);
		};
	})),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val12 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k) {
		return function(l) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1) {
		return function(k1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2) {
		return function(j2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3) {
		return function(i3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4) {
		return function(h4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05) {
		return function(g5) {
			return f6(a5,b5,c5,d5,e5,f05,g5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6) {
		return function(f06) {
			return f7(a6,b6,c6,d6,e6,f06);
		};
	};
	var f9 = function(a7,b7,c7,d7) {
		return function(e7) {
			return f8(a7,b7,c7,d7,e7);
		};
	};
	var f10 = function(a8,b8,c8) {
		return function(d8) {
			return f9(a8,b8,c8,d8);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a9,b9) {
		return function(c9) {
			return f10(a9,b9,c9);
		};
	})),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val13 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l) {
		return function(m) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1) {
		return function(l1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2) {
		return function(k2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3) {
		return function(j3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4) {
		return function(i4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5) {
		return function(h5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06) {
		return function(g6) {
			return f7(a6,b6,c6,d6,e6,f06,g6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7) {
		return function(f07) {
			return f8(a7,b7,c7,d7,e7,f07);
		};
	};
	var f10 = function(a8,b8,c8,d8) {
		return function(e8) {
			return f9(a8,b8,c8,d8,e8);
		};
	};
	var f11 = function(a9,b9,c9) {
		return function(d9) {
			return f10(a9,b9,c9,d9);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a10,b10) {
		return function(c10) {
			return f11(a10,b10,c10);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val14 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m) {
		return function(n) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1) {
		return function(m1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2) {
		return function(l2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3) {
		return function(k3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4) {
		return function(j4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5) {
		return function(i5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6) {
		return function(h6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07) {
		return function(g7) {
			return f8(a7,b7,c7,d7,e7,f07,g7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8) {
		return function(f08) {
			return f9(a8,b8,c8,d8,e8,f08);
		};
	};
	var f11 = function(a9,b9,c9,d9) {
		return function(e9) {
			return f10(a9,b9,c9,d9,e9);
		};
	};
	var f12 = function(a10,b10,c10) {
		return function(d10) {
			return f11(a10,b10,c10,d10);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a11,b11) {
		return function(c11) {
			return f12(a11,b11,c11);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val15 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n) {
		return function(o) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1) {
		return function(n1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2) {
		return function(m2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3) {
		return function(l3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4) {
		return function(k4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5) {
		return function(j5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6) {
		return function(i6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7) {
		return function(h7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08) {
		return function(g8) {
			return f9(a8,b8,c8,d8,e8,f08,g8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9) {
		return function(f09) {
			return f10(a9,b9,c9,d9,e9,f09);
		};
	};
	var f12 = function(a10,b10,c10,d10) {
		return function(e10) {
			return f11(a10,b10,c10,d10,e10);
		};
	};
	var f13 = function(a11,b11,c11) {
		return function(d11) {
			return f12(a11,b11,c11,d11);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a12,b12) {
		return function(c12) {
			return f13(a12,b12,c12);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val16 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o) {
		return function(p) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1) {
		return function(o1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2) {
		return function(n2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3) {
		return function(m3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4) {
		return function(l4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5) {
		return function(k5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6) {
		return function(j6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7) {
		return function(i7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8) {
		return function(h8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09) {
		return function(g9) {
			return f10(a9,b9,c9,d9,e9,f09,g9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10) {
		return function(f010) {
			return f11(a10,b10,c10,d10,e10,f010);
		};
	};
	var f13 = function(a11,b11,c11,d11) {
		return function(e11) {
			return f12(a11,b11,c11,d11,e11);
		};
	};
	var f14 = function(a12,b12,c12) {
		return function(d12) {
			return f13(a12,b12,c12,d12);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a13,b13) {
		return function(c13) {
			return f14(a13,b13,c13);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val17 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p) {
		return function(q) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1) {
		return function(p1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2) {
		return function(o2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3) {
		return function(n3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4) {
		return function(m4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5) {
		return function(l5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6) {
		return function(k6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7) {
		return function(j7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8) {
		return function(i8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9) {
		return function(h9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010) {
		return function(g10) {
			return f11(a10,b10,c10,d10,e10,f010,g10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11) {
		return function(f011) {
			return f12(a11,b11,c11,d11,e11,f011);
		};
	};
	var f14 = function(a12,b12,c12,d12) {
		return function(e12) {
			return f13(a12,b12,c12,d12,e12);
		};
	};
	var f15 = function(a13,b13,c13) {
		return function(d13) {
			return f14(a13,b13,c13,d13);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a14,b14) {
		return function(c14) {
			return f15(a14,b14,c14);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val18 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q) {
		return function(r) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1) {
		return function(q1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2) {
		return function(p2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3) {
		return function(o3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4) {
		return function(n4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5) {
		return function(m5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6) {
		return function(l6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7) {
		return function(k7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8) {
		return function(j8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9) {
		return function(i9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10) {
		return function(h10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011) {
		return function(g11) {
			return f12(a11,b11,c11,d11,e11,f011,g11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12) {
		return function(f012) {
			return f13(a12,b12,c12,d12,e12,f012);
		};
	};
	var f15 = function(a13,b13,c13,d13) {
		return function(e13) {
			return f14(a13,b13,c13,d13,e13);
		};
	};
	var f16 = function(a14,b14,c14) {
		return function(d14) {
			return f15(a14,b14,c14,d14);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a15,b15) {
		return function(c15) {
			return f16(a15,b15,c15);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val19 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r) {
		return function(s1) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1) {
		return function(r1) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2) {
		return function(q2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3) {
		return function(p3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4) {
		return function(o4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5) {
		return function(n5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6) {
		return function(m6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7) {
		return function(l7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8) {
		return function(k8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9,i9) {
		return function(j9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10,h10) {
		return function(i10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10,i10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011,g11) {
		return function(h11) {
			return f12(a11,b11,c11,d11,e11,f011,g11,h11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12,f012) {
		return function(g12) {
			return f13(a12,b12,c12,d12,e12,f012,g12);
		};
	};
	var f15 = function(a13,b13,c13,d13,e13) {
		return function(f013) {
			return f14(a13,b13,c13,d13,e13,f013);
		};
	};
	var f16 = function(a14,b14,c14,d14) {
		return function(e14) {
			return f15(a14,b14,c14,d14,e14);
		};
	};
	var f17 = function(a15,b15,c15) {
		return function(d15) {
			return f16(a15,b15,c15,d15);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v19,thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a16,b16) {
		return function(c16) {
			return f17(a16,b16,c16);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
thx__$Validation_Validation_$Impl_$.val20 = function(f,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,s) {
	var f1 = f;
	var f2 = function(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1) {
		return function(t) {
			return f1(a,b,c,d,e,f0,g,h,i,j,k,l,m,n,o,p,q,r,s1,t);
		};
	};
	var f3 = function(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1) {
		return function(s2) {
			return f2(a1,b1,c1,d1,e1,f01,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s2);
		};
	};
	var f4 = function(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2) {
		return function(r2) {
			return f3(a2,b2,c2,d2,e2,f02,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2);
		};
	};
	var f5 = function(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3) {
		return function(q3) {
			return f4(a3,b3,c3,d3,e3,f03,g3,h3,i3,j3,k3,l3,m3,n3,o3,p3,q3);
		};
	};
	var f6 = function(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4) {
		return function(p4) {
			return f5(a4,b4,c4,d4,e4,f04,g4,h4,i4,j4,k4,l4,m4,n4,o4,p4);
		};
	};
	var f7 = function(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5) {
		return function(o5) {
			return f6(a5,b5,c5,d5,e5,f05,g5,h5,i5,j5,k5,l5,m5,n5,o5);
		};
	};
	var f8 = function(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6) {
		return function(n6) {
			return f7(a6,b6,c6,d6,e6,f06,g6,h6,i6,j6,k6,l6,m6,n6);
		};
	};
	var f9 = function(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7) {
		return function(m7) {
			return f8(a7,b7,c7,d7,e7,f07,g7,h7,i7,j7,k7,l7,m7);
		};
	};
	var f10 = function(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8) {
		return function(l8) {
			return f9(a8,b8,c8,d8,e8,f08,g8,h8,i8,j8,k8,l8);
		};
	};
	var f11 = function(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9) {
		return function(k9) {
			return f10(a9,b9,c9,d9,e9,f09,g9,h9,i9,j9,k9);
		};
	};
	var f12 = function(a10,b10,c10,d10,e10,f010,g10,h10,i10) {
		return function(j10) {
			return f11(a10,b10,c10,d10,e10,f010,g10,h10,i10,j10);
		};
	};
	var f13 = function(a11,b11,c11,d11,e11,f011,g11,h11) {
		return function(i11) {
			return f12(a11,b11,c11,d11,e11,f011,g11,h11,i11);
		};
	};
	var f14 = function(a12,b12,c12,d12,e12,f012,g12) {
		return function(h12) {
			return f13(a12,b12,c12,d12,e12,f012,g12,h12);
		};
	};
	var f15 = function(a13,b13,c13,d13,e13,f013) {
		return function(g13) {
			return f14(a13,b13,c13,d13,e13,f013,g13);
		};
	};
	var f16 = function(a14,b14,c14,d14,e14) {
		return function(f014) {
			return f15(a14,b14,c14,d14,e14,f014);
		};
	};
	var f17 = function(a15,b15,c15,d15) {
		return function(e15) {
			return f16(a15,b15,c15,d15,e15);
		};
	};
	var f18 = function(a16,b16,c16) {
		return function(d16) {
			return f17(a16,b16,c16,d16);
		};
	};
	return thx__$Validation_Validation_$Impl_$.ap(v20,thx__$Validation_Validation_$Impl_$.ap(v19,thx__$Validation_Validation_$Impl_$.ap(v18,thx__$Validation_Validation_$Impl_$.ap(v17,thx__$Validation_Validation_$Impl_$.ap(v16,thx__$Validation_Validation_$Impl_$.ap(v15,thx__$Validation_Validation_$Impl_$.ap(v14,thx__$Validation_Validation_$Impl_$.ap(v13,thx__$Validation_Validation_$Impl_$.ap(v12,thx__$Validation_Validation_$Impl_$.ap(v11,thx__$Validation_Validation_$Impl_$.ap(v10,thx__$Validation_Validation_$Impl_$.ap(v9,thx__$Validation_Validation_$Impl_$.ap(v8,thx__$Validation_Validation_$Impl_$.ap(v7,thx__$Validation_Validation_$Impl_$.ap(v6,thx__$Validation_Validation_$Impl_$.ap(v5,thx__$Validation_Validation_$Impl_$.ap(v4,thx__$Validation_Validation_$Impl_$.ap(v3,thx__$Validation_Validation_$Impl_$.ap(v2,thx__$Validation_Validation_$Impl_$.map(v1,thx_Functions2.curry(function(a17,b17) {
		return function(c17) {
			return f18(a17,b17,c17);
		};
	})),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s),s);
};
var thx_ValidationExtensions = function() { };
$hxClasses["thx.ValidationExtensions"] = thx_ValidationExtensions;
thx_ValidationExtensions.__name__ = "thx.ValidationExtensions";
thx_ValidationExtensions.leftMapNel = function(n,f) {
	return thx_Eithers.leftMap(n,function(n1) {
		return thx__$Nel_Nel_$Impl_$.map(n1,f);
	});
};
thx_ValidationExtensions.ensureNel = function(v,p,error) {
	if(v._hx_index == 1) {
		var a = v.value;
		if(p(a)) {
			return v;
		} else {
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.pure(error));
		}
	} else {
		var left = v;
		return left;
	}
};
thx_ValidationExtensions.appendVNel = function(target,item) {
	switch(target._hx_index) {
	case 0:
		var _g = target.value;
		switch(item._hx_index) {
		case 0:
			var errors1 = _g;
			var errors2 = item.value;
			return thx_Either.Left(thx__$Nel_Nel_$Impl_$.append(errors1,errors2));
		case 1:
			var errors = _g;
			var value = item.value;
			return thx_Either.Left(errors);
		}
		break;
	case 1:
		var _g3 = target.value;
		switch(item._hx_index) {
		case 0:
			var values = _g3;
			var errors3 = item.value;
			return thx_Either.Left(errors3);
		case 1:
			var values1 = _g3;
			var value1 = item.value;
			return thx_Either.Right(thx_Arrays.append(values1,value1));
		}
		break;
	}
};
thx_ValidationExtensions.appendValidation = function(target,item) {
	return thx_ValidationExtensions.appendVNel(target,thx_Eithers.toVNel(item));
};
thx_ValidationExtensions.appendVNels = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendVNel,target);
};
thx_ValidationExtensions.appendValidations = function(target,items) {
	return thx_Arrays.reduce(items,thx_ValidationExtensions.appendValidation,target);
};
var thx_color__$Argb_Argb_$Impl_$ = {};
$hxClasses["thx.color._Argb.Argb_Impl_"] = thx_color__$Argb_Argb_$Impl_$;
thx_color__$Argb_Argb_$Impl_$.__name__ = "thx.color._Argb.Argb_Impl_";
thx_color__$Argb_Argb_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_blue:"get_blue",get_green:"get_green",get_red:"get_red"};
thx_color__$Argb_Argb_$Impl_$.create = function(alpha,red,green,blue) {
	return (alpha & 255) << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromFloats = function(arr) {
	var _this = thx_ArrayFloats.resized(arr,4);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Math.round(_this[i] * 255);
	}
	var ints = result;
	return (ints[0] & 255) << 24 | (ints[1] & 255) << 16 | (ints[2] & 255) << 8 | ints[3] & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromInt = function(argb) {
	return argb;
};
thx_color__$Argb_Argb_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	return (arr[0] & 255) << 24 | (arr[1] & 255) << 16 | (arr[2] & 255) << 8 | arr[3] & 255;
};
thx_color__$Argb_Argb_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "argb") {
			return (thx_color_parse_ColorParser.getInt8Channel(info.channels[0]) & 255) << 24 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[1]) & 255) << 16 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[2]) & 255) << 8 | thx_color_parse_ColorParser.getInt8Channel(info.channels[3]) & 255;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Argb_Argb_$Impl_$._new = function(argb) {
	var this1 = argb;
	return this1;
};
thx_color__$Argb_Argb_$Impl_$.combineColor = function(this1,other) {
	var a = (this1 >> 24 & 255) / 255;
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_red(other) + a * (this1 >> 16 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_green(other) + a * (this1 >> 8 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_blue(other) + a * (this1 & 255))]);
};
thx_color__$Argb_Argb_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.darker(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.transparent = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.opaque = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Argb_Argb_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1),thx_color__$Argb_Argb_$Impl_$.toRgbxa(other),t));
};
thx_color__$Argb_Argb_$Impl_$.withAlpha = function(this1,newalpha) {
	return (newalpha & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withAlphaf = function(this1,newalpha) {
	return (Math.round(255 * newalpha) & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withRed = function(this1,newred) {
	return (this1 >> 24 & 255 & 255) << 24 | (newred & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withGreen = function(this1,newgreen) {
	return (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (newgreen & 255) << 8 | this1 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.withBlue = function(this1,newblue) {
	return (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | newblue & 255;
};
thx_color__$Argb_Argb_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1));
};
thx_color__$Argb_Argb_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Argb_Argb_$Impl_$.toRgbxa(this1));
};
thx_color__$Argb_Argb_$Impl_$.toRgb = function(this1) {
	var this2 = (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this2;
};
thx_color__$Argb_Argb_$Impl_$.toRgba = function(this1) {
	return (this1 >> 16 & 255 & 255) << 24 | (this1 >> 8 & 255 & 255) << 16 | (this1 & 255 & 255) << 8 | this1 >> 24 & 255 & 255;
};
thx_color__$Argb_Argb_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Argb_Argb_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts([this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255,this1 >> 24 & 255]);
};
thx_color__$Argb_Argb_$Impl_$.toString = function(this1) {
	return "argb(" + (this1 >> 24 & 255) + "," + (this1 >> 16 & 255) + "," + (this1 >> 8 & 255) + "," + (this1 & 255) + ")";
};
thx_color__$Argb_Argb_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(this1 >> 24 & 255,2) + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
thx_color__$Argb_Argb_$Impl_$.equals = function(this1,other) {
	if((this1 >> 16 & 255) == (other >> 16 & 255) && (this1 >> 24 & 255) == (other >> 24 & 255) && (this1 >> 8 & 255) == (other >> 8 & 255)) {
		return (this1 & 255) == (other & 255);
	} else {
		return false;
	}
};
thx_color__$Argb_Argb_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Argb_Argb_$Impl_$.get_alpha = function(this1) {
	return this1 >> 24 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_red = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_green = function(this1) {
	return this1 >> 8 & 255;
};
thx_color__$Argb_Argb_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
var thx_color__$Cmy_Cmy_$Impl_$ = {};
$hxClasses["thx.color._Cmy.Cmy_Impl_"] = thx_color__$Cmy_Cmy_$Impl_$;
thx_color__$Cmy_Cmy_$Impl_$.__name__ = "thx.color._Cmy.Cmy_Impl_";
thx_color__$Cmy_Cmy_$Impl_$.__properties__ = {get_yellow:"get_yellow",get_magenta:"get_magenta",get_cyan:"get_cyan"};
thx_color__$Cmy_Cmy_$Impl_$.create = function(cyan,magenta,yellow) {
	var this1 = [cyan,magenta,yellow];
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "cmy") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Cmy_Cmy_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Cmy_Cmy_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withCyan = function(this1,newcyan) {
	var this2 = [newcyan,this1[1],this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withMagenta = function(this1,newmagenta) {
	var this2 = [this1[0],newmagenta,this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.withYellow = function(this1,newyellow) {
	var this2 = [this1[0],this1[1],newyellow];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.toString = function(this1) {
	return "cmy(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Cmy_Cmy_$Impl_$.equals = function(this1,other) {
	return thx_color__$Cmy_Cmy_$Impl_$.nearEquals(this1,other);
};
thx_color__$Cmy_Cmy_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Cmy_Cmy_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Cmy_Cmy_$Impl_$.toXyz(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Cmy_Cmy_$Impl_$.toLab(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toCmyk = function(this1) {
	var k = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	if(k == 1) {
		var this2 = [0,0,0,1];
		return this2;
	} else {
		var this3 = [(this1[0] - k) / (1 - k),(this1[1] - k) / (1 - k),(this1[2] - k) / (1 - k),k];
		return this3;
	}
};
thx_color__$Cmy_Cmy_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1),1);
};
thx_color__$Cmy_Cmy_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Cmy_Cmy_$Impl_$.toXyz(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Cmy_Cmy_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Cmy_Cmy_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toRgbx = function(this1) {
	var this2 = [1 - this1[0],1 - this1[1],1 - this1[2]];
	return this2;
};
thx_color__$Cmy_Cmy_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Cmy_Cmy_$Impl_$.toRgbx(this1));
};
thx_color__$Cmy_Cmy_$Impl_$.get_cyan = function(this1) {
	return this1[0];
};
thx_color__$Cmy_Cmy_$Impl_$.get_magenta = function(this1) {
	return this1[1];
};
thx_color__$Cmy_Cmy_$Impl_$.get_yellow = function(this1) {
	return this1[2];
};
var thx_color__$Cmyk_Cmyk_$Impl_$ = {};
$hxClasses["thx.color._Cmyk.Cmyk_Impl_"] = thx_color__$Cmyk_Cmyk_$Impl_$;
thx_color__$Cmyk_Cmyk_$Impl_$.__name__ = "thx.color._Cmyk.Cmyk_Impl_";
thx_color__$Cmyk_Cmyk_$Impl_$.__properties__ = {get_yellow:"get_yellow",get_magenta:"get_magenta",get_cyan:"get_cyan",get_black:"get_black"};
thx_color__$Cmyk_Cmyk_$Impl_$.create = function(cyan,magenta,yellow,black) {
	var this1 = [cyan,magenta,yellow,black];
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "cmyk") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Cmyk_Cmyk_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Cmyk_Cmyk_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2]),Math.min(this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2]),Math.max(this1[3],other[3])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var v3 = this1[3];
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,v3 < 0 ? 0 : v3 > 1 ? 1 : v3];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withCyan = function(this1,newcyan) {
	var this2 = [newcyan,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withMagenta = function(this1,newmagenta) {
	var this2 = [this1[0],newmagenta,this1[2],this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withYellow = function(this1,newyellow) {
	var this2 = [this1[0],this1[1],newyellow,this1[3]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.withBlack = function(this1,newblack) {
	var this2 = [this1[0],this1[1],this1[2],newblack];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toString = function(this1) {
	return "cmyk(" + this1[0] + "," + this1[1] + "," + this1[2] + "," + this1[3] + ")";
};
thx_color__$Cmyk_Cmyk_$Impl_$.equals = function(this1,other) {
	return thx_color__$Cmyk_Cmyk_$Impl_$.nearEquals(this1,other);
};
thx_color__$Cmyk_Cmyk_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Cmyk_Cmyk_$Impl_$.toXyz(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Cmyk_Cmyk_$Impl_$.toLab(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toCmy = function(this1) {
	var this2 = [this1[3] + (1 - this1[3]) * this1[0],this1[3] + (1 - this1[3]) * this1[1],this1[3] + (1 - this1[3]) * this1[2]];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1),1);
};
thx_color__$Cmyk_Cmyk_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Cmyk_Cmyk_$Impl_$.toXyz(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx = function(this1) {
	var this2 = [(1 - this1[3]) * (1 - this1[0]),(1 - this1[3]) * (1 - this1[1]),(1 - this1[3]) * (1 - this1[2])];
	return this2;
};
thx_color__$Cmyk_Cmyk_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Cmyk_Cmyk_$Impl_$.toRgbx(this1));
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_cyan = function(this1) {
	return this1[0];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_magenta = function(this1) {
	return this1[1];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_yellow = function(this1) {
	return this1[2];
};
thx_color__$Cmyk_Cmyk_$Impl_$.get_black = function(this1) {
	return this1[3];
};
var thx_color__$CubeHelix_CubeHelix_$Impl_$ = {};
$hxClasses["thx.color._CubeHelix.CubeHelix_Impl_"] = thx_color__$CubeHelix_CubeHelix_$Impl_$;
thx_color__$CubeHelix_CubeHelix_$Impl_$.__name__ = "thx.color._CubeHelix.CubeHelix_Impl_";
thx_color__$CubeHelix_CubeHelix_$Impl_$.__properties__ = {get_gamma:"get_gamma",get_lightness:"get_lightness",get_saturation:"get_saturation",get_hue:"get_hue"};
thx_color__$CubeHelix_CubeHelix_$Impl_$.create = function(hue,saturation,lightness,gamma) {
	var this1 = [hue,saturation,lightness,null == gamma ? 1.0 : gamma];
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.fromFloats = function(arr) {
	if(arr.length < 4) {
		arr = thx_ArrayFloats.resized(arr,3);
		arr.push(1);
	}
	var gamma = arr[3];
	var this1 = [arr[0],arr[1],arr[2],null == gamma ? 1.0 : gamma];
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "cubehelix") {
			if(info.channels.length >= 4) {
				var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
				return this1;
			} else {
				var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false).concat([1.0]);
				return this2;
			}
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-spread), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.complement = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0),this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1),this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.min = function(this1,other) {
	var gamma = Math.min(this1[3],other[3]);
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2]),null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.max = function(this1,other) {
	var gamma = Math.max(this1[3],other[3]);
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2]),null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[3];
	var gamma = v < 0 ? 0 : v > 1 ? 1 : v;
	var v1 = this1[1];
	var v2 = this1[2];
	var this2 = [hue,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.withHue(this1,this1[0] + angle);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.roundTo = function(this1,decimals) {
	var hue = thx_Floats.roundTo(this1[0],decimals);
	var saturation = thx_Floats.roundTo(this1[1],decimals);
	var lightness = thx_Floats.roundTo(this1[2],decimals);
	var gamma = thx_Floats.roundTo(this1[3],decimals);
	var this2 = [hue,saturation,lightness,null == gamma ? 1.0 : gamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-spread), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.square = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.tetrad(this1,90);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,0), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,angle), _2 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180), _3 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,-120), _1 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,0), _2 : thx_color__$CubeHelix_CubeHelix_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withGamma = function(this1,newgamma) {
	var this2 = [this1[0],this1[1],this1[2],newgamma];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness,this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCss3 = function(this1) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.toString(this1);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toString = function(this1) {
	if(this1[3] != 1) {
		return "cubehelix(" + this1[0] + "," + this1[1] + "," + this1[2] + ", " + this1[3] + ")";
	} else {
		return "cubehelix(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.equals = function(this1,other) {
	return thx_color__$CubeHelix_CubeHelix_$Impl_$.nearEquals(this1,other);
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$CubeHelix_CubeHelix_$Impl_$.toLab(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx = function(this1) {
	var h = isNaN(this1[0]) ? 0 : (this1[0] + 120) / 180 * Math.PI;
	var l = Math.pow(this1[2],this1[3]);
	var a = isNaN(this1[1]) ? 0 : this1[1] * l * (1 - l);
	var cosh = Math.cos(h);
	var sinh = Math.sin(h);
	var this2 = [l + a * (-0.14861 * cosh + 1.78277 * sinh),l + a * (-0.29227 * cosh + -0.90649 * sinh),l + a * (1.97294 * cosh)];
	return this2;
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$CubeHelix_CubeHelix_$Impl_$.toRgbx(this1));
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$CubeHelix_CubeHelix_$Impl_$.get_gamma = function(this1) {
	return this1[3];
};
var thx_color__$Grey_Grey_$Impl_$ = {};
$hxClasses["thx.color._Grey.Grey_Impl_"] = thx_color__$Grey_Grey_$Impl_$;
thx_color__$Grey_Grey_$Impl_$.__name__ = "thx.color._Grey.Grey_Impl_";
thx_color__$Grey_Grey_$Impl_$.__properties__ = {get_grey:"get_grey"};
thx_color__$Grey_Grey_$Impl_$.create = function(v) {
	var this1 = v;
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "gray":case "grey":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,1,false)[0];
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Grey_Grey_$Impl_$._new = function(grey) {
	var this1 = grey;
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.contrast = function(this1) {
	if(this1 > 0.5) {
		return thx_color__$Grey_Grey_$Impl_$.black;
	} else {
		return thx_color__$Grey_Grey_$Impl_$.white;
	}
};
thx_color__$Grey_Grey_$Impl_$.darker = function(this1,t) {
	var this2 = thx_Floats.interpolate(t,this1,0);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.lighter = function(this1,t) {
	var this2 = thx_Floats.interpolate(t,this1,1);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = thx_Floats.interpolate(t,this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.min = function(this1,other) {
	var this2 = Math.min(this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.max = function(this1,other) {
	var this2 = Math.max(this1,other);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.normalize = function(this1) {
	var this2 = this1 < 0 ? 0 : this1 > 1 ? 1 : this1;
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = thx_Floats.roundTo(this1,decimals);
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.toString = function(this1) {
	return "grey(" + this1 * 100 + "%)";
};
thx_color__$Grey_Grey_$Impl_$.equals = function(this1,other) {
	return thx_color__$Grey_Grey_$Impl_$.nearEquals(this1,other);
};
thx_color__$Grey_Grey_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	return thx_Floats.nearEquals(this1,other,tolerance);
};
thx_color__$Grey_Grey_$Impl_$.get_grey = function(this1) {
	return this1;
};
thx_color__$Grey_Grey_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Grey_Grey_$Impl_$.toXyz(this1));
};
thx_color__$Grey_Grey_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Grey_Grey_$Impl_$.toLab(this1));
};
thx_color__$Grey_Grey_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1),1);
};
thx_color__$Grey_Grey_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Grey_Grey_$Impl_$.toXyz(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Grey_Grey_$Impl_$.toRgbxa(this1));
};
thx_color__$Grey_Grey_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Grey_Grey_$Impl_$.toRgbxa(this1));
};
thx_color__$Grey_Grey_$Impl_$.toRgbx = function(this1) {
	var this2 = [this1,this1,this1];
	return this2;
};
thx_color__$Grey_Grey_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
thx_color__$Grey_Grey_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Grey_Grey_$Impl_$.toRgbx(this1));
};
var thx_color__$Hsl_Hsl_$Impl_$ = {};
$hxClasses["thx.color._Hsl.Hsl_Impl_"] = thx_color__$Hsl_Hsl_$Impl_$;
thx_color__$Hsl_Hsl_$Impl_$.__name__ = "thx.color._Hsl.Hsl_Impl_";
thx_color__$Hsl_Hsl_$Impl_$.__properties__ = {get_lightness:"get_lightness",get_saturation:"get_saturation",get_hue:"get_hue"};
thx_color__$Hsl_Hsl_$Impl_$.create = function(hue,saturation,lightness) {
	var this1 = [hue,saturation,lightness];
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "hsl") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Hsl_Hsl_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsl_Hsl_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.complement = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180);
};
thx_color__$Hsl_Hsl_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0],360),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[1];
	var v1 = this1[2];
	var this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$Hsl_Hsl_$Impl_$.withHue(this1,this1[0] + angle);
};
thx_color__$Hsl_Hsl_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.square = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.tetrad(this1,90);
};
thx_color__$Hsl_Hsl_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,0), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,angle), _2 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180), _3 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,-120), _1 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,0), _2 : thx_color__$Hsl_Hsl_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2]];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2]];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.toString(this1);
};
thx_color__$Hsl_Hsl_$Impl_$.toString = function(this1) {
	return "hsl(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Hsl_Hsl_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsl_Hsl_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsl_Hsl_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsl_Hsl_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Hsl_Hsl_$Impl_$.toXyz(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Hsl_Hsl_$Impl_$.toLab(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1),1);
};
thx_color__$Hsl_Hsl_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsl_Hsl_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsl_Hsl_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toRgbx = function(this1) {
	var this2 = [thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] + 120,this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0],this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] - 120,this1[1],this1[2])];
	return this2;
};
thx_color__$Hsl_Hsl_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toHsla = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Hsl_Hsl_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Hsl_Hsl_$Impl_$.toXyz(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Hsl_Hsl_$Impl_$.toRgbx(this1));
};
thx_color__$Hsl_Hsl_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsl_Hsl_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsl_Hsl_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$Hsl_Hsl_$Impl_$._c = function(d,s,l) {
	var m2 = l <= 0.5 ? l * (1 + s) : l + s - l * s;
	var m1 = 2 * l - m2;
	d = thx_Floats.wrapCircular(d,360);
	if(d < 60) {
		return m1 + (m2 - m1) * d / 60;
	} else if(d < 180) {
		return m2;
	} else if(d < 240) {
		return m1 + (m2 - m1) * (240 - d) / 60;
	} else {
		return m1;
	}
};
var thx_color__$Hsla_Hsla_$Impl_$ = {};
$hxClasses["thx.color._Hsla.Hsla_Impl_"] = thx_color__$Hsla_Hsla_$Impl_$;
thx_color__$Hsla_Hsla_$Impl_$.__name__ = "thx.color._Hsla.Hsla_Impl_";
thx_color__$Hsla_Hsla_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_lightness:"get_lightness",get_saturation:"get_saturation",get_hue:"get_hue"};
thx_color__$Hsla_Hsla_$Impl_$.create = function(hue,saturation,lightness,alpha) {
	var this1 = [hue,saturation,lightness,alpha];
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "hsl":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return thx_color__$Hsl_Hsl_$Impl_$.toHsla(this1);
		case "hsla":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Hsla_Hsla_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsla_Hsla_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.complement = function(this1) {
	return thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,180);
};
thx_color__$Hsla_Hsla_$Impl_$.darker = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],0),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.lighter = function(this1,t) {
	var this2 = [this1[0],this1[1],thx_Floats.interpolate(t,this1[2],1),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[1];
	var v1 = this1[2];
	var v2 = this1[3];
	var this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.rotate = function(this1,angle) {
	var this2 = [this1[0] + angle,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 150.0;
	}
	var this2 = { _0 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsla_Hsla_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [this1[0],this1[1],this1[2],newalpha];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [this1[0],this1[1],newlightness,this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Hsla_Hsla_$Impl_$.toString(this1);
};
thx_color__$Hsla_Hsla_$Impl_$.toString = function(this1) {
	return "hsla(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Hsla_Hsla_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsla_Hsla_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsla_Hsla_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsla_Hsla_$Impl_$.toHsl = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsla_Hsla_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsla_Hsla_$Impl_$.toRgbxa = function(this1) {
	var this2 = [thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] + 120,this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0],this1[1],this1[2]),thx_color__$Hsl_Hsl_$Impl_$._c(this1[0] - 120,this1[1],this1[2]),this1[3]];
	return this2;
};
thx_color__$Hsla_Hsla_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsla_Hsla_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsla_Hsla_$Impl_$.get_lightness = function(this1) {
	return this1[2];
};
thx_color__$Hsla_Hsla_$Impl_$.get_alpha = function(this1) {
	return this1[3];
};
var thx_color__$Hsv_Hsv_$Impl_$ = {};
$hxClasses["thx.color._Hsv.Hsv_Impl_"] = thx_color__$Hsv_Hsv_$Impl_$;
thx_color__$Hsv_Hsv_$Impl_$.__name__ = "thx.color._Hsv.Hsv_Impl_";
thx_color__$Hsv_Hsv_$Impl_$.__properties__ = {get_value:"get_value",get_saturation:"get_saturation",get_hue:"get_hue"};
thx_color__$Hsv_Hsv_$Impl_$.create = function(hue,saturation,value) {
	var this1 = [hue,saturation,value];
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "hsv") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Hsv_Hsv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsv_Hsv_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.complement = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180);
};
thx_color__$Hsv_Hsv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[1];
	var v1 = this1[2];
	var this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$Hsv_Hsv_$Impl_$.normalize(thx_color__$Hsv_Hsv_$Impl_$.withHue(this1,this1[0] + angle));
};
thx_color__$Hsv_Hsv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.square = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.tetrad(this1,90);
};
thx_color__$Hsv_Hsv_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,0), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,angle), _2 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180), _3 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,-120), _1 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,0), _2 : thx_color__$Hsv_Hsv_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2]];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withValue = function(this1,newvalue) {
	var this2 = [this1[0],this1[1],newvalue];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2]];
	return this2;
};
thx_color__$Hsv_Hsv_$Impl_$.toString = function(this1) {
	return "hsv(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Hsv_Hsv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsv_Hsv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsv_Hsv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsv_Hsv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Hsv_Hsv_$Impl_$.toXyz(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Hsv_Hsv_$Impl_$.toLab(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Hsv_Hsv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toHsva = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Hsv_Hsv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Hsv_Hsv_$Impl_$.toXyz(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Hsv_Hsv_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsv_Hsv_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toRgbx = function(this1) {
	if(this1[1] == 0) {
		var this2 = [this1[2],this1[2],this1[2]];
		return this2;
	}
	var r;
	var g;
	var b;
	var h = this1[0] / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = this1[2] * (1 - this1[1]);
	var q = this1[2] * (1 - f * this1[1]);
	var t = this1[2] * (1 - (1 - f) * this1[1]);
	switch(i) {
	case 0:
		r = this1[2];
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = this1[2];
		b = p;
		break;
	case 2:
		r = p;
		g = this1[2];
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = this1[2];
		break;
	case 4:
		r = t;
		g = p;
		b = this1[2];
		break;
	default:
		r = this1[2];
		g = p;
		b = q;
	}
	var this3 = [r,g,b];
	return this3;
};
thx_color__$Hsv_Hsv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Hsv_Hsv_$Impl_$.toRgbx(this1));
};
thx_color__$Hsv_Hsv_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsv_Hsv_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsv_Hsv_$Impl_$.get_value = function(this1) {
	return this1[2];
};
var thx_color__$Hsva_Hsva_$Impl_$ = {};
$hxClasses["thx.color._Hsva.Hsva_Impl_"] = thx_color__$Hsva_Hsva_$Impl_$;
thx_color__$Hsva_Hsva_$Impl_$.__name__ = "thx.color._Hsva.Hsva_Impl_";
thx_color__$Hsva_Hsva_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_value:"get_value",get_saturation:"get_saturation",get_hue:"get_hue"};
thx_color__$Hsva_Hsva_$Impl_$.create = function(hue,saturation,value,alpha) {
	var this1 = [hue,saturation,value,alpha];
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "hsv":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return thx_color__$Hsv_Hsv_$Impl_$.toHsva(this1);
		case "hsva":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,4,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Hsva_Hsva_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Hsva_Hsva_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.complement = function(this1) {
	return thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,180);
};
thx_color__$Hsva_Hsva_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[0],360);
	var v = this1[1];
	var v1 = this1[2];
	var v2 = this1[3];
	var this2 = [hue,v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Floats.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngle(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolateAngleWidest(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2]),thx_Floats.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.rotate = function(this1,angle) {
	var this2 = [this1[0] + angle,this1[1],this1[2],this1[3]];
	return thx_color__$Hsva_Hsva_$Impl_$.normalize(this2);
};
thx_color__$Hsva_Hsva_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 150.0;
	}
	var this2 = { _0 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,-spread), _1 : thx_color__$Hsva_Hsva_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [this1[0],this1[1],this1[2],newalpha];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [newhue,this1[1],this1[2],this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withLightness = function(this1,newvalue) {
	var this2 = [this1[0],this1[1],newvalue,this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.withSaturation = function(this1,newsaturation) {
	var this2 = [this1[0],newsaturation,this1[2],this1[3]];
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.toString = function(this1) {
	return "hsva(" + this1[0] + "," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Hsva_Hsva_$Impl_$.equals = function(this1,other) {
	return thx_color__$Hsva_Hsva_$Impl_$.nearEquals(this1,other);
};
thx_color__$Hsva_Hsva_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Hsva_Hsva_$Impl_$.toHsv = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Hsva_Hsva_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Hsva_Hsva_$Impl_$.toRgbxa(this1));
};
thx_color__$Hsva_Hsva_$Impl_$.toRgbxa = function(this1) {
	if(this1[1] == 0) {
		var this2 = [this1[2],this1[2],this1[2],this1[3]];
		return this2;
	}
	var r;
	var g;
	var b;
	var h = this1[0] / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = this1[2] * (1 - this1[1]);
	var q = this1[2] * (1 - f * this1[1]);
	var t = this1[2] * (1 - (1 - f) * this1[1]);
	switch(i) {
	case 0:
		r = this1[2];
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = this1[2];
		b = p;
		break;
	case 2:
		r = p;
		g = this1[2];
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = this1[2];
		break;
	case 4:
		r = t;
		g = p;
		b = this1[2];
		break;
	default:
		r = this1[2];
		g = p;
		b = q;
	}
	var this3 = [r,g,b,this1[3]];
	return this3;
};
thx_color__$Hsva_Hsva_$Impl_$.get_hue = function(this1) {
	return this1[0];
};
thx_color__$Hsva_Hsva_$Impl_$.get_saturation = function(this1) {
	return this1[1];
};
thx_color__$Hsva_Hsva_$Impl_$.get_value = function(this1) {
	return this1[2];
};
thx_color__$Hsva_Hsva_$Impl_$.get_alpha = function(this1) {
	return this1[3];
};
var thx_color__$HunterLab_HunterLab_$Impl_$ = {};
$hxClasses["thx.color._HunterLab.HunterLab_Impl_"] = thx_color__$HunterLab_HunterLab_$Impl_$;
thx_color__$HunterLab_HunterLab_$Impl_$.__name__ = "thx.color._HunterLab.HunterLab_Impl_";
thx_color__$HunterLab_HunterLab_$Impl_$.__properties__ = {get_b:"get_b",get_a:"get_a",get_l:"get_l"};
thx_color__$HunterLab_HunterLab_$Impl_$.create = function(l,a,b) {
	var this1 = [l,a,b];
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "hunterlab") {
			return thx_color__$HunterLab_HunterLab_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$HunterLab_HunterLab_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$HunterLab_HunterLab_$Impl_$.distance = function(this1,other) {
	return (this1[0] - other[0]) * (this1[0] - other[0]) + (this1[1] - other[1]) * (this1[1] - other[1]) + (this1[2] - other[2]) * (this1[2] - other[2]);
};
thx_color__$HunterLab_HunterLab_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.match = function(this1,palette) {
	var it = palette;
	if(null == it) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be null",{ fileName : "thx/error/NullArgument.hx", lineNumber : 73, className : "thx.color._HunterLab.HunterLab_Impl_", methodName : "match"});
	} else if(!$getIterator(it).hasNext()) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be empty",{ fileName : "thx/error/NullArgument.hx", lineNumber : 75, className : "thx.color._HunterLab.HunterLab_Impl_", methodName : "match"});
	}
	var dist = Infinity;
	var closest = null;
	var color = $getIterator(palette);
	while(color.hasNext()) {
		var color1 = color.next();
		var ndist = thx_color__$HunterLab_HunterLab_$Impl_$.distance(this1,color1);
		if(ndist < dist) {
			dist = ndist;
			closest = color1;
		}
	}
	return closest;
};
thx_color__$HunterLab_HunterLab_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.equals = function(this1,other) {
	return thx_color__$HunterLab_HunterLab_$Impl_$.nearEquals(this1,other);
};
thx_color__$HunterLab_HunterLab_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$HunterLab_HunterLab_$Impl_$.withL = function(this1,newl) {
	var this2 = [newl,this1[1],this1[2]];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.withA = function(this1,newa) {
	var this2 = [this1[0],newa,this1[2]];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.withB = function(this1,newb) {
	var this2 = [this1[0],this1[1],newb];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.toString = function(this1) {
	return "hunterlab(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$HunterLab_HunterLab_$Impl_$.toLab(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1),1);
};
thx_color__$HunterLab_HunterLab_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toXyz = function(this1) {
	var x = this1[1] / 17.5 * (this1[0] / 10.0);
	var l10 = this1[0] / 10.0;
	var y = l10 * l10;
	var z = this1[2] / 7.0 * (this1[0] / 10.0);
	var this2 = [(x + y) / 1.02,y,-(z - y) / 0.847];
	return this2;
};
thx_color__$HunterLab_HunterLab_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$HunterLab_HunterLab_$Impl_$.toRgbx(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$HunterLab_HunterLab_$Impl_$.toXyz(this1));
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_a = function(this1) {
	return this1[1];
};
thx_color__$HunterLab_HunterLab_$Impl_$.get_b = function(this1) {
	return this1[2];
};
var thx_color__$LCh_LCh_$Impl_$ = {};
$hxClasses["thx.color._LCh.LCh_Impl_"] = thx_color__$LCh_LCh_$Impl_$;
thx_color__$LCh_LCh_$Impl_$.__name__ = "thx.color._LCh.LCh_Impl_";
thx_color__$LCh_LCh_$Impl_$.__properties__ = {get_hue:"get_hue",get_chroma:"get_chroma",get_lightness:"get_lightness"};
thx_color__$LCh_LCh_$Impl_$.create = function(lightness,chroma,hue) {
	var this1 = [lightness,chroma,hue];
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "hcl":
			var c = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			var this1 = [c[2],c[1],c[0]];
			return this1;
		case "cielch":case "lch":
			var this2 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this2;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$LCh_LCh_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$LCh_LCh_$Impl_$.analogous = function(this1,spread) {
	if(spread == null) {
		spread = 30.0;
	}
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-spread), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.complement = function(this1) {
	return thx_color__$LCh_LCh_$Impl_$.rotate(this1,180);
};
thx_color__$LCh_LCh_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolateAngle(t,this1[2],other[2],360)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.interpolateWidest = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolateAngleWidest(t,this1[2],other[2],360)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.normalize = function(this1) {
	var hue = thx_Floats.wrapCircular(this1[2],360);
	var v = this1[0];
	var v1 = this1[1];
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,hue];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.rotate = function(this1,angle) {
	return thx_color__$LCh_LCh_$Impl_$.normalize(thx_color__$LCh_LCh_$Impl_$.withHue(this1,this1[2] + angle));
};
thx_color__$LCh_LCh_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.split = function(this1,spread) {
	if(spread == null) {
		spread = 144.0;
	}
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-spread), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,spread)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.square = function(this1) {
	return thx_color__$LCh_LCh_$Impl_$.tetrad(this1,90);
};
thx_color__$LCh_LCh_$Impl_$.tetrad = function(this1,angle) {
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,0), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,angle), _2 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,180), _3 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,180 + angle)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.triad = function(this1) {
	var this2 = { _0 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,-120), _1 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,0), _2 : thx_color__$LCh_LCh_$Impl_$.rotate(this1,120)};
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withLightness = function(this1,newlightness) {
	var this2 = [newlightness,this1[1],this1[2]];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withChroma = function(this1,newchroma) {
	var this2 = [this1[0],newchroma,this1[2]];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.withHue = function(this1,newhue) {
	var this2 = [this1[0],this1[1],newhue];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.equals = function(this1,other) {
	return thx_color__$LCh_LCh_$Impl_$.nearEquals(this1,other);
};
thx_color__$LCh_LCh_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	var tollerance = tolerance;
	if(tollerance == null) {
		tollerance = 1e-9;
	}
	if(Math.abs(thx_Floats.angleDifference(this1[0],other[0],360.0)) <= tollerance && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$LCh_LCh_$Impl_$.toString = function(this1) {
	return "lch(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$LCh_LCh_$Impl_$.toHclString = function(this1) {
	return "hcl(" + this1[2] + "," + this1[1] + "," + this1[0] + ")";
};
thx_color__$LCh_LCh_$Impl_$.toLab = function(this1) {
	var hradi = this1[2] * (Math.PI / 180);
	var a = Math.cos(hradi) * this1[1];
	var b = Math.sin(hradi) * this1[1];
	var this2 = [this1[0],a,b];
	return this2;
};
thx_color__$LCh_LCh_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1),1);
};
thx_color__$LCh_LCh_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$LCh_LCh_$Impl_$.toXyz(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$LCh_LCh_$Impl_$.toRgbxa(this1));
};
thx_color__$LCh_LCh_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$LCh_LCh_$Impl_$.toRgbxa(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toRgbx(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toXyz = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toXyz(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$LCh_LCh_$Impl_$.toRgbx(this1));
};
thx_color__$LCh_LCh_$Impl_$.toYxy = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toYxy(thx_color__$LCh_LCh_$Impl_$.toLab(this1));
};
thx_color__$LCh_LCh_$Impl_$.get_lightness = function(this1) {
	return this1[0];
};
thx_color__$LCh_LCh_$Impl_$.get_chroma = function(this1) {
	return this1[1];
};
thx_color__$LCh_LCh_$Impl_$.get_hue = function(this1) {
	return this1[2];
};
var thx_color__$Lab_Lab_$Impl_$ = {};
$hxClasses["thx.color._Lab.Lab_Impl_"] = thx_color__$Lab_Lab_$Impl_$;
thx_color__$Lab_Lab_$Impl_$.__name__ = "thx.color._Lab.Lab_Impl_";
thx_color__$Lab_Lab_$Impl_$.__properties__ = {get_b:"get_b",get_a:"get_a",get_l:"get_l"};
thx_color__$Lab_Lab_$Impl_$.create = function(l,a,b) {
	var this1 = [l,a,b];
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "cielab":case "l*a*b*":case "lab":
			return thx_color__$Lab_Lab_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false));
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Lab_Lab_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Lab_Lab_$Impl_$.distance = function(this1,other) {
	return (this1[0] - other[0]) * (this1[0] - other[0]) + (this1[1] - other[1]) * (this1[1] - other[1]) + (this1[2] - other[2]) * (this1[2] - other[2]);
};
thx_color__$Lab_Lab_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.match = function(this1,palette) {
	var it = palette;
	if(null == it) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be null",{ fileName : "thx/error/NullArgument.hx", lineNumber : 73, className : "thx.color._Lab.Lab_Impl_", methodName : "match"});
	} else if(!$getIterator(it).hasNext()) {
		throw new thx_error_NullArgument("Iterable argument \"this\" cannot be empty",{ fileName : "thx/error/NullArgument.hx", lineNumber : 75, className : "thx.color._Lab.Lab_Impl_", methodName : "match"});
	}
	var dist = Infinity;
	var closest = null;
	var color = $getIterator(palette);
	while(color.hasNext()) {
		var color1 = color.next();
		var ndist = thx_color__$Lab_Lab_$Impl_$.distance(this1,color1);
		if(ndist < dist) {
			dist = ndist;
			closest = color1;
		}
	}
	return closest;
};
thx_color__$Lab_Lab_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.equals = function(this1,other) {
	return thx_color__$Lab_Lab_$Impl_$.nearEquals(this1,other);
};
thx_color__$Lab_Lab_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Lab_Lab_$Impl_$.withL = function(this1,newl) {
	var this2 = [newl,this1[1],this1[2]];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.withA = function(this1,newa) {
	var this2 = [this1[0],newa,this1[2]];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.withB = function(this1,newb) {
	var this2 = [this1[0],this1[1],newb];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toString = function(this1) {
	return "lab(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Lab_Lab_$Impl_$.toLCh = function(this1) {
	var h = Math.atan2(this1[2],this1[1]) * 180 / Math.PI;
	var c = Math.sqrt(this1[1] * this1[1] + this1[2] * this1[2]);
	var this2 = [this1[0],c,h];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1),1);
};
thx_color__$Lab_Lab_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Lab_Lab_$Impl_$.toRgbxa(this1));
};
thx_color__$Lab_Lab_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Lab_Lab_$Impl_$.toRgbxa(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toXyz = function(this1) {
	var f = function(t) {
		if(t > 0.206896551724137928) {
			return Math.pow(t,3);
		} else {
			return 0.128418549346016653 * (t - 0.137931034482758619);
		}
	};
	var x = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[0] * f(0.00862068965517241367 * (this1[0] + 16) + 0.002 * this1[1]);
	var y = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * f(0.00862068965517241367 * (this1[0] + 16));
	var z = thx_color__$Xyz_Xyz_$Impl_$.whiteReference[2] * f(0.00862068965517241367 * (this1[0] + 16) - 0.005 * this1[2]);
	var this2 = [x,y,z];
	return this2;
};
thx_color__$Lab_Lab_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Lab_Lab_$Impl_$.toRgbx(this1));
};
thx_color__$Lab_Lab_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$Lab_Lab_$Impl_$.toXyz(this1));
};
thx_color__$Lab_Lab_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$Lab_Lab_$Impl_$.get_a = function(this1) {
	return this1[1];
};
thx_color__$Lab_Lab_$Impl_$.get_b = function(this1) {
	return this1[2];
};
var thx_color__$Luv_Luv_$Impl_$ = {};
$hxClasses["thx.color._Luv.Luv_Impl_"] = thx_color__$Luv_Luv_$Impl_$;
thx_color__$Luv_Luv_$Impl_$.__name__ = "thx.color._Luv.Luv_Impl_";
thx_color__$Luv_Luv_$Impl_$.__properties__ = {get_v:"get_v",get_u:"get_u",get_l:"get_l"};
thx_color__$Luv_Luv_$Impl_$.create = function(l,u,v) {
	var this1 = [l,u,v];
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "cieluv":case "luv":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Luv_Luv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Luv_Luv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var min = -0.436;
	var v2 = this1[2];
	var min1 = -0.615;
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < min ? min : v1 > 0.436 ? 0.436 : v1,v2 < min1 ? min1 : v2 > 0.615 ? 0.615 : v2];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withY = function(this1,newy) {
	var this2 = [newy,this1[1],this1[2]];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withU = function(this1,newu) {
	var this2 = [this1[0],newu,this1[2]];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.withV = function(this1,newv) {
	var this2 = [this1[0],this1[1],newv];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.toString = function(this1) {
	return "cieluv(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Luv_Luv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Luv_Luv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Luv_Luv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Luv_Luv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Luv_Luv_$Impl_$.toLab(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Luv_Luv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Luv_Luv_$Impl_$.toRgbxa(this1));
};
thx_color__$Luv_Luv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Luv_Luv_$Impl_$.toRgbxa(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Luv_Luv_$Impl_$.toXyz(this1));
};
thx_color__$Luv_Luv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Luv_Luv_$Impl_$.toRgbx(this1));
};
thx_color__$Luv_Luv_$Impl_$.toXyz = function(this1) {
	var l = this1[0] * 100;
	var u = this1[1] * 100;
	var v = this1[2] * 100;
	var x = 9 * u / (9 * u - 16 * v + 12);
	var y = 4 * v / (9 * u - 16 * v + 12);
	var uPrime = (l == 0 ? 0 : u / (13 * l)) + thx_color__$Xyz_Xyz_$Impl_$.get_u(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100;
	var vPrime = (l == 0 ? 0 : v / (13 * l)) + thx_color__$Xyz_Xyz_$Impl_$.get_v(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100;
	var Y = l > 8 ? thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100 * Math.pow((l + 16) / 116,3) : thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100 * l * Math.pow(0.103448275862068964,3);
	var X = Y * 9 * uPrime / (4 * vPrime);
	var Z = Y * (12 - 3 * uPrime - 20 * vPrime) / (4 * vPrime);
	var this2 = [X / 100,Y / 100,Z / 100];
	return this2;
};
thx_color__$Luv_Luv_$Impl_$.get_l = function(this1) {
	return this1[0];
};
thx_color__$Luv_Luv_$Impl_$.get_u = function(this1) {
	return this1[1];
};
thx_color__$Luv_Luv_$Impl_$.get_v = function(this1) {
	return this1[2];
};
var thx_color__$Rgb_Rgb_$Impl_$ = {};
$hxClasses["thx.color._Rgb.Rgb_Impl_"] = thx_color__$Rgb_Rgb_$Impl_$;
thx_color__$Rgb_Rgb_$Impl_$.__name__ = "thx.color._Rgb.Rgb_Impl_";
thx_color__$Rgb_Rgb_$Impl_$.__properties__ = {get_blue:"get_blue",get_green:"get_green",get_red:"get_red"};
thx_color__$Rgb_Rgb_$Impl_$.create = function(red,green,blue) {
	var this1 = (red & 255) << 16 | (green & 255) << 8 | blue & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.createf = function(red,green,blue) {
	var this1 = (Math.round(red * 255) & 255) << 16 | (Math.round(green * 255) & 255) << 8 | Math.round(blue * 255) & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "rgb") {
			return thx_color__$Rgb_Rgb_$Impl_$.fromInts(thx_color_parse_ColorParser.getInt8Channels(info.channels,3));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Rgb_Rgb_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,3);
	var this1 = (arr[0] & 255) << 16 | (arr[1] & 255) << 8 | arr[2] & 255;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$._new = function(rgb) {
	var this1 = rgb;
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.darker(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),t));
};
thx_color__$Rgb_Rgb_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.lighter(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),t));
};
thx_color__$Rgb_Rgb_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbx_Rgbx_$Impl_$.interpolate(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),thx_color__$Rgb_Rgb_$Impl_$.toRgbx(other),t));
};
thx_color__$Rgb_Rgb_$Impl_$.min = function(this1,other) {
	var a = thx_color__$Rgb_Rgb_$Impl_$.get_red(this1);
	var b = thx_color__$Rgb_Rgb_$Impl_$.get_red(other);
	var a1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(this1);
	var b1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(other);
	var a2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1);
	var b2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	var this2 = ((a < b ? a : b) & 255) << 16 | ((a1 < b1 ? a1 : b1) & 255) << 8 | (a2 < b2 ? a2 : b2) & 255;
	return this2;
};
thx_color__$Rgb_Rgb_$Impl_$.max = function(this1,other) {
	var a = thx_color__$Rgb_Rgb_$Impl_$.get_red(this1);
	var b = thx_color__$Rgb_Rgb_$Impl_$.get_red(other);
	var a1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(this1);
	var b1 = thx_color__$Rgb_Rgb_$Impl_$.get_green(other);
	var a2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1);
	var b2 = thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	var this2 = ((a > b ? a : b) & 255) << 16 | ((a1 > b1 ? a1 : b1) & 255) << 8 | (a2 > b2 ? a2 : b2) & 255;
	return this2;
};
thx_color__$Rgb_Rgb_$Impl_$.withAlpha = function(this1,alpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),alpha]);
};
thx_color__$Rgb_Rgb_$Impl_$.withAlphaf = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),Math.round(255 * newalpha)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withRed = function(this1,newred) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([newred,thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withGreen = function(this1,newgreen) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),newgreen,thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.withBlue = function(this1,newblue) {
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),newblue]);
};
thx_color__$Rgb_Rgb_$Impl_$.toCss3 = function(this1) {
	return "rgb(" + thx_color__$Rgb_Rgb_$Impl_$.get_red(this1) + "," + thx_color__$Rgb_Rgb_$Impl_$.get_green(this1) + "," + thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1) + ")";
};
thx_color__$Rgb_Rgb_$Impl_$.toString = function(this1) {
	return thx_color__$Rgb_Rgb_$Impl_$.toHex(this1);
};
thx_color__$Rgb_Rgb_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgb_Rgb_$Impl_$.equals = function(this1,other) {
	if(thx_color__$Rgb_Rgb_$Impl_$.get_red(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_red(other) && thx_color__$Rgb_Rgb_$Impl_$.get_green(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_green(other)) {
		return thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1) == thx_color__$Rgb_Rgb_$Impl_$.get_blue(other);
	} else {
		return false;
	}
};
thx_color__$Rgb_Rgb_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Rgb_Rgb_$Impl_$.toXyz(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Rgb_Rgb_$Impl_$.toLab(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1),1);
};
thx_color__$Rgb_Rgb_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Rgb_Rgb_$Impl_$.toXyz(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([thx_color__$Rgb_Rgb_$Impl_$.get_red(this1),thx_color__$Rgb_Rgb_$Impl_$.get_green(this1),thx_color__$Rgb_Rgb_$Impl_$.get_blue(this1)]);
};
thx_color__$Rgb_Rgb_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgb_Rgb_$Impl_$.withAlpha(this1,255);
};
thx_color__$Rgb_Rgb_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toArgb(thx_color__$Rgb_Rgb_$Impl_$.toRgba(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(thx_color__$Rgb_Rgb_$Impl_$.toRgba(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Rgb_Rgb_$Impl_$.toRgbx(this1));
};
thx_color__$Rgb_Rgb_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Rgb_Rgb_$Impl_$.get_red = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Rgb_Rgb_$Impl_$.get_green = function(this1) {
	return this1 >> 8 & 255;
};
thx_color__$Rgb_Rgb_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
var thx_color__$Rgba_Rgba_$Impl_$ = {};
$hxClasses["thx.color._Rgba.Rgba_Impl_"] = thx_color__$Rgba_Rgba_$Impl_$;
thx_color__$Rgba_Rgba_$Impl_$.__name__ = "thx.color._Rgba.Rgba_Impl_";
thx_color__$Rgba_Rgba_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_blue:"get_blue",get_green:"get_green",get_red:"get_red"};
thx_color__$Rgba_Rgba_$Impl_$.create = function(red,green,blue,alpha) {
	return (red & 255) << 24 | (green & 255) << 16 | (blue & 255) << 8 | alpha & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromFloats = function(arr) {
	var _this = thx_ArrayFloats.resized(arr,4);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = Math.round(_this[i] * 255);
	}
	var ints = result;
	return (ints[0] & 255) << 24 | (ints[1] & 255) << 16 | (ints[2] & 255) << 8 | ints[3] & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromInt = function(rgba) {
	return rgba;
};
thx_color__$Rgba_Rgba_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	return (arr[0] & 255) << 24 | (arr[1] & 255) << 16 | (arr[2] & 255) << 8 | arr[3] & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "rgb":
			return thx_color__$Rgb_Rgb_$Impl_$.toRgba(thx_color__$Rgb_Rgb_$Impl_$.fromInts(thx_color_parse_ColorParser.getInt8Channels(info.channels,3)));
		case "rgba":
			return (thx_color_parse_ColorParser.getInt8Channel(info.channels[0]) & 255) << 24 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[1]) & 255) << 16 | (thx_color_parse_ColorParser.getInt8Channel(info.channels[2]) & 255) << 8 | Math.round(thx_color_parse_ColorParser.getFloatChannel(info.channels[3]) * 255) & 255;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Rgba_Rgba_$Impl_$._new = function(rgba) {
	var this1 = rgba;
	return this1;
};
thx_color__$Rgba_Rgba_$Impl_$.combineColor = function(this1,other) {
	var a = (this1 & 255) / 255;
	return thx_color__$Rgb_Rgb_$Impl_$.fromInts([Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_red(other) + a * (this1 >> 24 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_green(other) + a * (this1 >> 16 & 255)),Math.round((1 - a) * thx_color__$Rgb_Rgb_$Impl_$.get_blue(other) + a * (this1 >> 8 & 255))]);
};
thx_color__$Rgba_Rgba_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.darker(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.transparent = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.opaque = function(this1,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),t));
};
thx_color__$Rgba_Rgba_$Impl_$.interpolate = function(this1,other,t) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1),thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(other),t));
};
thx_color__$Rgba_Rgba_$Impl_$.withAlpha = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,newalpha]);
};
thx_color__$Rgba_Rgba_$Impl_$.withAlphaf = function(this1,newalpha) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,Math.round(255 * newalpha)]);
};
thx_color__$Rgba_Rgba_$Impl_$.withRed = function(this1,newred) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([newred,this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.withGreen = function(this1,newgreen) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,newgreen,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.withBlue = function(this1,newblue) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,newblue,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toHsla = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1));
};
thx_color__$Rgba_Rgba_$Impl_$.toHsva = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva(thx_color__$Rgba_Rgba_$Impl_$.toRgbxa(this1));
};
thx_color__$Rgba_Rgba_$Impl_$.toRgb = function(this1) {
	var this2 = (this1 >> 24 & 255 & 255) << 16 | (this1 >> 16 & 255 & 255) << 8 | this1 >> 8 & 255 & 255;
	return this2;
};
thx_color__$Rgba_Rgba_$Impl_$.toArgb = function(this1) {
	return (this1 & 255 & 255) << 24 | (this1 >> 24 & 255 & 255) << 16 | (this1 >> 16 & 255 & 255) << 8 | this1 >> 8 & 255 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts([this1 >> 24 & 255,this1 >> 16 & 255,this1 >> 8 & 255,this1 & 255]);
};
thx_color__$Rgba_Rgba_$Impl_$.toCss3 = function(this1) {
	return "rgba(" + (this1 >> 24 & 255) + "," + (this1 >> 16 & 255) + "," + (this1 >> 8 & 255) + "," + (this1 & 255) / 255 + ")";
};
thx_color__$Rgba_Rgba_$Impl_$.toString = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.toCss3(this1);
};
thx_color__$Rgba_Rgba_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(this1 >> 24 & 255,2) + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
thx_color__$Rgba_Rgba_$Impl_$.equals = function(this1,other) {
	if((this1 >> 24 & 255) == (other >> 24 & 255) && (this1 & 255) == (other & 255) && (this1 >> 16 & 255) == (other >> 16 & 255)) {
		return (this1 >> 8 & 255) == (other >> 8 & 255);
	} else {
		return false;
	}
};
thx_color__$Rgba_Rgba_$Impl_$.toInt = function(this1) {
	return this1;
};
thx_color__$Rgba_Rgba_$Impl_$.get_alpha = function(this1) {
	return this1 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_red = function(this1) {
	return this1 >> 24 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_green = function(this1) {
	return this1 >> 16 & 255;
};
thx_color__$Rgba_Rgba_$Impl_$.get_blue = function(this1) {
	return this1 >> 8 & 255;
};
var thx_color__$Rgbx_Rgbx_$Impl_$ = {};
$hxClasses["thx.color._Rgbx.Rgbx_Impl_"] = thx_color__$Rgbx_Rgbx_$Impl_$;
thx_color__$Rgbx_Rgbx_$Impl_$.__name__ = "thx.color._Rgbx.Rgbx_Impl_";
thx_color__$Rgbx_Rgbx_$Impl_$.__properties__ = {get_inSpace:"get_inSpace",get_bluef:"get_bluef",get_greenf:"get_greenf",get_redf:"get_redf",get_blue:"get_blue",get_green:"get_green",get_red:"get_red"};
thx_color__$Rgbx_Rgbx_$Impl_$.create = function(red,green,blue) {
	var this1 = [red,green,blue];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,3);
	var this1 = [arr[0] / 255.0,arr[1] / 255.0,arr[2] / 255.0];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromInt = function(value) {
	var rgb = value;
	var this1 = [thx_color__$Rgb_Rgb_$Impl_$.get_red(rgb) / 255,thx_color__$Rgb_Rgb_$Impl_$.get_green(rgb) / 255,thx_color__$Rgb_Rgb_$Impl_$.get_blue(rgb) / 255];
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "rgb") {
			return thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,true));
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Rgbx_Rgbx_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Rgbx_Rgbx_$Impl_$.darker = function(this1,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],0),thx_Floats.interpolate(t,this1[1],0),thx_Floats.interpolate(t,this1[2],0)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.lighter = function(this1,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],1),thx_Floats.interpolate(t,this1[1],1),thx_Floats.interpolate(t,this1[2],1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toString(this1);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toString = function(this1) {
	return "rgb(" + this1[0] * 100 + "%," + this1[1] * 100 + "%," + this1[2] * 100 + "%)";
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgbx_Rgbx_$Impl_$.equals = function(this1,other) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.nearEquals(this1,other);
};
thx_color__$Rgbx_Rgbx_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha = function(this1,alpha) {
	var this2 = this1.concat([alpha]);
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withRed = function(this1,newred) {
	var this2 = [newred,thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withGreen = function(this1,newgreen) {
	var this2 = [thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),newgreen,thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1)];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.withBlue = function(this1,newblue) {
	var this2 = [thx_color__$Rgbx_Rgbx_$Impl_$.get_red(this1),thx_color__$Rgbx_Rgbx_$Impl_$.get_green(this1),newblue];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Rgbx_Rgbx_$Impl_$.toLab(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toLuv = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLuv(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCmy = function(this1) {
	var this2 = [1 - this1[0],1 - this1[1],1 - this1[2]];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk = function(this1) {
	var c = 0.0;
	var y = 0.0;
	var m = 0.0;
	var k;
	if(this1[0] + this1[1] + this1[2] == 0) {
		k = 1.0;
	} else {
		k = 1 - Math.max(Math.max(this1[0],this1[1]),this1[2]);
		c = (1 - this1[0] - k) / (1 - k);
		m = (1 - this1[1] - k) / (1 - k);
		y = (1 - this1[2] - k) / (1 - k);
	}
	var this2 = [c,m,y,k];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(this1,1);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma = function(this1,gamma) {
	var l = (-0.655763666799999867 * this1[2] + -1.7884503806 * this1[0] - 3.5172982438 * this1[1]) / -5.9615122912;
	var bl = this1[2] - l;
	var k = (1.97294 * (this1[1] - l) - -0.29227 * bl) / -0.90649;
	var lgamma = Math.pow(l,gamma);
	var s;
	try {
		s = Math.sqrt(k * k + bl * bl) / (1.97294 * lgamma * (1 - lgamma));
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		s = 0.0;
	}
	var h;
	try {
		h = s != 0 ? Math.atan2(k,bl) / Math.PI * 180 - 120 : NaN;
	} catch( e2 ) {
		haxe_CallStack.lastException = e2;
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
		h = 0.0;
	}
	if(isNaN(s)) {
		s = 0;
	}
	if(isNaN(h)) {
		h = 0;
	}
	if(h < 0) {
		h += 360;
	}
	var this2 = [h,s,l,1];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toGrey = function(this1) {
	var this2 = this1[0] * .2126 + this1[1] * .7152 + this1[2] * .0722;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toPerceivedGrey = function(this1) {
	var this2 = this1[0] * .299 + this1[1] * .587 + this1[2] * .114;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toPerceivedAccurateGrey = function(this1) {
	var this2 = Math.pow(this1[0],2) * .241 + Math.pow(this1[1],2) * .691 + Math.pow(this1[2],2) * .068;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHsl = function(this1) {
	var min = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	var max = Math.max(Math.max(this1[0],this1[1]),this1[2]);
	var delta = max - min;
	var h;
	var s;
	var l = (max + min) / 2;
	if(delta == 0.0) {
		h = 0.0;
		s = h;
	} else {
		s = l < 0.5 ? delta / (max + min) : delta / (2 - max - min);
		if(this1[0] == max) {
			h = (this1[1] - this1[2]) / delta + (this1[1] < thx_color__$Rgbx_Rgbx_$Impl_$.get_blue(this1) ? 6 : 0);
		} else if(this1[1] == max) {
			h = (this1[2] - this1[0]) / delta + 2;
		} else {
			h = (this1[0] - this1[1]) / delta + 4;
		}
		h *= 60;
	}
	var this2 = [h,s,l];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHsv = function(this1) {
	var min = Math.min(Math.min(this1[0],this1[1]),this1[2]);
	var max = Math.max(Math.max(this1[0],this1[1]),this1[2]);
	var delta = max - min;
	var h;
	var s;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = -1;
		var this2 = [h,s,v];
		return this2;
	}
	if(this1[0] == max) {
		h = (this1[1] - this1[2]) / delta;
	} else if(this1[1] == max) {
		h = 2 + (this1[2] - this1[0]) / delta;
	} else {
		h = 4 + (this1[0] - this1[1]) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	var this3 = [h,s,v];
	return this3;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.toRgb = function(this1) {
	var this2 = (Math.round(this1[0] * 255) & 255) << 16 | (Math.round(this1[1] * 255) & 255) << 8 | Math.round(this1[2] * 255) & 255;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(this1,1.0);
};
thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature = function(this1) {
	var t = 0;
	var rgb;
	var epsilon = 0.4;
	var minT = 1000;
	var maxT = 40000;
	while(maxT - minT > epsilon) {
		t = (maxT + minT) / 2;
		rgb = thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx(t);
		if(rgb[2] / rgb[0] >= this1[2] / this1[0]) {
			maxT = t;
		} else {
			minT = t;
		}
	}
	var this2 = t;
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toXyz = function(this1) {
	var r = this1[0];
	var g = this1[1];
	var b = this1[2];
	if(r > 0.04045) {
		r = Math.pow((r + 0.055) / 1.055,2.4);
	} else {
		r /= 12.92;
	}
	if(g > 0.04045) {
		g = Math.pow((g + 0.055) / 1.055,2.4);
	} else {
		g /= 12.92;
	}
	if(b > 0.04045) {
		b = Math.pow((b + 0.055) / 1.055,2.4);
	} else {
		b /= 12.92;
	}
	var this2 = [r * 0.4124564 + g * 0.3575761 + b * 0.1804375,r * 0.2126729 + g * 0.7151522 + b * 0.0721750,r * 0.0193339 + g * 0.1191920 + b * 0.9503041];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toYuv = function(this1) {
	var r = this1[0];
	var g = this1[1];
	var b = this1[2];
	var y = 0.299 * r + 0.587 * g + 0.114 * b;
	var u = -0.14713 * r - 0.28886 * g + 0.436 * b;
	var v = 0.615 * r - 0.51499 * g - 0.10001 * b;
	var this2 = [y,u,v];
	return this2;
};
thx_color__$Rgbx_Rgbx_$Impl_$.toYxy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toYxy(thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(this1));
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_red = function(this1) {
	return Math.round(this1[0] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_green = function(this1) {
	return Math.round(this1[1] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_blue = function(this1) {
	return Math.round(this1[2] * 255);
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_redf = function(this1) {
	return this1[0];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_greenf = function(this1) {
	return this1[1];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_bluef = function(this1) {
	return this1[2];
};
thx_color__$Rgbx_Rgbx_$Impl_$.get_inSpace = function(this1) {
	if(this1[0] >= 0 && this1[0] <= 1 && this1[1] >= 0 && this1[1] <= 1 && this1[2] >= 0) {
		return this1[2] <= 1;
	} else {
		return false;
	}
};
var thx_color__$Rgbxa_Rgbxa_$Impl_$ = {};
$hxClasses["thx.color._Rgbxa.Rgbxa_Impl_"] = thx_color__$Rgbxa_Rgbxa_$Impl_$;
thx_color__$Rgbxa_Rgbxa_$Impl_$.__name__ = "thx.color._Rgbxa.Rgbxa_Impl_";
thx_color__$Rgbxa_Rgbxa_$Impl_$.__properties__ = {get_inSpace:"get_inSpace",get_alphaf:"get_alphaf",get_bluef:"get_bluef",get_greenf:"get_greenf",get_redf:"get_redf",get_alpha:"get_alpha",get_blue:"get_blue",get_green:"get_green",get_red:"get_red"};
thx_color__$Rgbxa_Rgbxa_$Impl_$.create = function(red,green,blue,alpha) {
	var this1 = [red,green,blue,alpha];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,4);
	var this1 = [arr[0],arr[1],arr[2],arr[3]];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInts = function(arr) {
	arr = thx_ArrayInts.resized(arr,4);
	var this1 = [arr[0] / 255.0,arr[1] / 255.0,arr[2] / 255.0,arr[3] / 255.0];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromInt = function(value) {
	var rgba = value;
	var this1 = [(rgba >> 24 & 255) / 255,(rgba >> 16 & 255) / 255,(rgba >> 8 & 255) / 255,(rgba & 255) / 255];
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseHex(color);
	if(null == info) {
		info = thx_color_parse_ColorParser.parseColor(color);
	}
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "rgb":
			return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Rgbx_Rgbx_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,3,true)));
		case "rgba":
			return thx_color__$Rgbxa_Rgbxa_$Impl_$.fromFloats(thx_color_parse_ColorParser.getFloatChannels(info.channels,4,true));
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Rgbxa_Rgbxa_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.combineColor = function(this1,other) {
	var this2 = [(1 - this1[3]) * other[0] + this1[3] * this1[0],(1 - this1[3]) * other[1] + this1[3] * this1[1],(1 - this1[3]) * other[2] + this1[3] * this1[2]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.darker = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.darker(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1),t),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.lighter = function(this1,t) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.lighter(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1),t),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.transparent = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Ints.interpolate(t,this1[3],0)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.opaque = function(this1,t) {
	var this2 = [this1[0],this1[1],this1[2],thx_Ints.interpolate(t,this1[3],1)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Ints.interpolate(t,this1[0],other[0]),thx_Ints.interpolate(t,this1[1],other[1]),thx_Ints.interpolate(t,this1[2],other[2]),thx_Ints.interpolate(t,this1[3],other[3])];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var v2 = this1[2];
	var v3 = this1[3];
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < 0 ? 0 : v1 > 1 ? 1 : v1,v2 < 0 ? 0 : v2 > 1 ? 1 : v2,v3 < 0 ? 0 : v3 > 1 ? 1 : v3];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals),thx_Floats.roundTo(this1[3],decimals)];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withAlpha = function(this1,newalpha) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),newalpha];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withRed = function(this1,newred) {
	var this2 = [newred,thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withGreen = function(this1,newgreen) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),newgreen,thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.withBlue = function(this1,newblue) {
	var this2 = [thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),newblue,this1[3]];
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toCss3 = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toString(this1);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toString = function(this1) {
	return "rgba(" + this1[0] * 100 + "%," + this1[1] * 100 + "%," + this1[2] * 100 + "%," + this1[3] + ")";
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHex = function(this1,prefix) {
	if(prefix == null) {
		prefix = "#";
	}
	return "" + prefix + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green(this1),2) + StringTools.hex(thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue(this1),2);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.equals = function(this1,other) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.nearEquals(this1,other);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance) && thx_Floats.nearEquals(this1[2],other[2],tolerance)) {
		return thx_Floats.nearEquals(this1[3],other[3],tolerance);
	} else {
		return false;
	}
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsla = function(this1) {
	return thx_color__$Hsl_Hsl_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1)),this1[3]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toHsva = function(this1) {
	return thx_color__$Hsv_Hsv_$Impl_$.withAlpha(thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1)),this1[3]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx(this1));
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgbx = function(this1) {
	var this2 = this1.slice(0,3);
	return this2;
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgba_Rgba_$Impl_$.fromFloats([this1[0],this1[1],this1[2],this1[3]]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb = function(this1) {
	return thx_color__$Argb_Argb_$Impl_$.fromFloats([this1[3],this1[0],this1[1],this1[2]]);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_red = function(this1) {
	return Math.round(this1[0] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_green = function(this1) {
	return Math.round(this1[1] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_blue = function(this1) {
	return Math.round(this1[2] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alpha = function(this1) {
	return Math.round(this1[3] * 255);
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_redf = function(this1) {
	return this1[0];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_greenf = function(this1) {
	return this1[1];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_bluef = function(this1) {
	return this1[2];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_alphaf = function(this1) {
	return this1[3];
};
thx_color__$Rgbxa_Rgbxa_$Impl_$.get_inSpace = function(this1) {
	if(this1[0] >= 0 && this1[0] <= 1 && this1[1] >= 0 && this1[1] <= 1 && this1[2] >= 0 && this1[2] <= 1 && this1[3] >= 0) {
		return this1[3] <= 1;
	} else {
		return false;
	}
};
var thx_color__$Temperature_Temperature_$Impl_$ = {};
$hxClasses["thx.color._Temperature.Temperature_Impl_"] = thx_color__$Temperature_Temperature_$Impl_$;
thx_color__$Temperature_Temperature_$Impl_$.__name__ = "thx.color._Temperature.Temperature_Impl_";
thx_color__$Temperature_Temperature_$Impl_$.__properties__ = {get_kelvin:"get_kelvin"};
thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx = function(kelvin) {
	var t = kelvin / 100.0;
	var r;
	var g;
	var b;
	if(t < 66.0) {
		r = 1;
	} else {
		r = t - 55.0;
		r = (351.97690566805693 + 0.114206453784165 * r - 40.25366309332127 * Math.log(r)) / 255;
		if(r < 0) {
			r = 0;
		}
		if(r > 1) {
			r = 1;
		}
	}
	if(t < 66.0) {
		g = t - 2;
		g = (-155.25485562709179 - 0.44596950469579133 * g + 104.49216199393888 * Math.log(g)) / 255;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	} else {
		g = t - 50;
		g = (325.4494125711974 + 0.07943456536662342 * g - 28.0852963507957 * Math.log(g)) / 255;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	}
	if(t >= 66.0) {
		b = 1;
	} else if(t <= 20.0) {
		b = 0;
	} else {
		b = t - 10;
		b = (-254.76935184120902 + 0.8274096064007395 * b + 115.67994401066147 * Math.log(b)) / 255;
		if(b < 0) {
			b = 0;
		}
		if(b > 1) {
			b = 1;
		}
	}
	var this1 = [r,g,b];
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.create = function(v) {
	var this1 = v;
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "temperature") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,1,false)[0];
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Temperature_Temperature_$Impl_$._new = function(kelvin) {
	var this1 = kelvin;
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = thx_Floats.interpolate(t,this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.min = function(this1,other) {
	var this2 = Math.min(this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.max = function(this1,other) {
	var this2 = Math.max(this1,other);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = thx_Floats.roundTo(this1,decimals);
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.toString = function(this1) {
	return "temperature(" + this1 + ")";
};
thx_color__$Temperature_Temperature_$Impl_$.equals = function(this1,other) {
	return thx_color__$Temperature_Temperature_$Impl_$.nearEquals(this1,other);
};
thx_color__$Temperature_Temperature_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	return thx_Floats.nearEquals(this1,other,tolerance);
};
thx_color__$Temperature_Temperature_$Impl_$.get_kelvin = function(this1) {
	return this1;
};
thx_color__$Temperature_Temperature_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Temperature_Temperature_$Impl_$.toXyz(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Temperature_Temperature_$Impl_$.toLab(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1),1);
};
thx_color__$Temperature_Temperature_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Temperature_Temperature_$Impl_$.toXyz(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Temperature_Temperature_$Impl_$.toRgbxa(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Temperature_Temperature_$Impl_$.toRgbxa(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbxTannerHelland = function(this1) {
	var t = this1 / 100;
	var r;
	var g;
	var b;
	if(t <= 66) {
		r = 1;
	} else {
		r = t - 60;
		r = 329.698727446 * Math.pow(r,-0.1332047592) / 1;
		if(r < 0) {
			r = 0;
		}
		if(r > 1) {
			r = 1;
		}
	}
	if(t <= 66.0) {
		g = t;
		g = (99.4708025861 * Math.log(g) - 161.1195681661) / 1;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	} else {
		g = t - 60.0;
		g = 288.1221695283 * Math.pow(g,-0.0755148492) / 1;
		if(g < 0) {
			g = 0;
		}
		if(g > 1) {
			g = 1;
		}
	}
	if(t >= 66.0) {
		b = 1;
	} else if(t <= 19.0) {
		b = 0;
	} else {
		b = t - 10;
		b = (138.5177312231 * Math.log(b) - 305.0447927307) / 1;
		if(b < 0) {
			b = 0;
		}
		if(b > 1) {
			b = 1;
		}
	}
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Temperature_Temperature_$Impl_$.temperatureToRgbx(this1);
};
thx_color__$Temperature_Temperature_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
thx_color__$Temperature_Temperature_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Temperature_Temperature_$Impl_$.toRgbx(this1));
};
var thx_color__$Xyz_Xyz_$Impl_$ = {};
$hxClasses["thx.color._Xyz.Xyz_Impl_"] = thx_color__$Xyz_Xyz_$Impl_$;
thx_color__$Xyz_Xyz_$Impl_$.__name__ = "thx.color._Xyz.Xyz_Impl_";
thx_color__$Xyz_Xyz_$Impl_$.__properties__ = {get_v:"get_v",get_u:"get_u",get_z:"get_z",get_y:"get_y",get_x:"get_x"};
thx_color__$Xyz_Xyz_$Impl_$.create = function(x,y,z) {
	var this1 = [x,y,z];
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		switch(info.name) {
		case "ciexyz":case "xyz":
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		default:
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Xyz_Xyz_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Xyz_Xyz_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withX = function(this1,newx) {
	var this2 = [newx,this1[1],this1[2]];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withY = function(this1,newy) {
	var this2 = [this1[0],newy,this1[2]];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.withZ = function(this1,newz) {
	var this2 = [this1[0],this1[1],newz];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toString = function(this1) {
	return "xyz(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Xyz_Xyz_$Impl_$.equals = function(this1,other) {
	return thx_color__$Xyz_Xyz_$Impl_$.nearEquals(this1,other);
};
thx_color__$Xyz_Xyz_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Xyz_Xyz_$Impl_$.toLab = function(this1) {
	var f = function(t) {
		if(t > 0.0088564516790356311) {
			return Math.pow(t,0.333333333333333315);
		} else {
			return 7.78703703703703543 * t + 0.137931034482758619;
		}
	};
	var x1 = this1[0] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[0];
	var y1 = this1[1] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1];
	var z1 = this1[2] / thx_color__$Xyz_Xyz_$Impl_$.whiteReference[2];
	var fy1 = f(y1);
	var l = 116 * fy1 - 16;
	var a = 500 * (f(x1) - fy1);
	var b = 200 * (fy1 - f(z1));
	var this2 = [l,a,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Xyz_Xyz_$Impl_$.toLab(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toLuv = function(this1) {
	var x = this1[0] * 100;
	var y = this1[1] * 100;
	var z = this1[2] * 100;
	var f = y / (thx_color__$Xyz_Xyz_$Impl_$.whiteReference[1] * 100);
	var r = Math.pow(0.206896551724137928,3);
	var l = f > r ? 116 * Math.pow(f,0.333333333333333315) - 16 : Math.pow(9.66666666666666607,3) * f;
	var u = 13 * l * (thx_color__$Xyz_Xyz_$Impl_$.get_u(this1) - thx_color__$Xyz_Xyz_$Impl_$.get_u(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100);
	var v = 13 * l * (thx_color__$Xyz_Xyz_$Impl_$.get_v(this1) - thx_color__$Xyz_Xyz_$Impl_$.get_v(thx_color__$Xyz_Xyz_$Impl_$.whiteReference) * 100);
	var this2 = [l / 100,u / 100,v / 100];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1),1);
};
thx_color__$Xyz_Xyz_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toHunterLab = function(this1) {
	var l = 10.0 * Math.sqrt(this1[1]);
	var a = this1[1] != 0 ? 17.5 * ((1.02 * this1[0] - this1[1]) / Math.sqrt(this1[1])) : 0;
	var b = this1[1] != 0 ? 7.0 * ((this1[1] - .847 * this1[2]) / Math.sqrt(this1[1])) : 0;
	var this2 = [l,a,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toRgbx = function(this1) {
	var x = this1[0];
	var y = this1[1];
	var z = this1[2];
	var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
	var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
	var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
	r = r > 0.0031308 ? 1.055 * Math.pow(r,0.416666666666666685) - 0.055 : 12.92 * r;
	g = g > 0.0031308 ? 1.055 * Math.pow(g,0.416666666666666685) - 0.055 : 12.92 * g;
	b = b > 0.0031308 ? 1.055 * Math.pow(b,0.416666666666666685) - 0.055 : 12.92 * b;
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Xyz_Xyz_$Impl_$.toRgbx(this1));
};
thx_color__$Xyz_Xyz_$Impl_$.toYxy = function(this1) {
	var sum = this1[0] + this1[1] + this1[2];
	var this2 = [this1[1],sum == 0 ? 1 : this1[0] / sum,sum == 0 ? 1 : this1[1] / sum];
	return this2;
};
thx_color__$Xyz_Xyz_$Impl_$.get_x = function(this1) {
	return this1[0];
};
thx_color__$Xyz_Xyz_$Impl_$.get_y = function(this1) {
	return this1[1];
};
thx_color__$Xyz_Xyz_$Impl_$.get_z = function(this1) {
	return this1[2];
};
thx_color__$Xyz_Xyz_$Impl_$.get_u = function(this1) {
	try {
		return 4 * this1[0] / (this1[0] + 15 * this1[1] + 3 * this1[2]);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return 0;
	}
};
thx_color__$Xyz_Xyz_$Impl_$.get_v = function(this1) {
	try {
		return 9 * this1[1] / (this1[0] + 15 * this1[1] + 3 * this1[2]);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return 0;
	}
};
var thx_color__$Yuv_Yuv_$Impl_$ = {};
$hxClasses["thx.color._Yuv.Yuv_Impl_"] = thx_color__$Yuv_Yuv_$Impl_$;
thx_color__$Yuv_Yuv_$Impl_$.__name__ = "thx.color._Yuv.Yuv_Impl_";
thx_color__$Yuv_Yuv_$Impl_$.__properties__ = {get_v:"get_v",get_u:"get_u",get_y:"get_y"};
thx_color__$Yuv_Yuv_$Impl_$.create = function(y,u,v) {
	var this1 = [y,u,v];
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "yuv") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Yuv_Yuv_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Yuv_Yuv_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.normalize = function(this1) {
	var v = this1[0];
	var v1 = this1[1];
	var min = -0.436;
	var v2 = this1[2];
	var min1 = -0.615;
	var this2 = [v < 0 ? 0 : v > 1 ? 1 : v,v1 < min ? min : v1 > 0.436 ? 0.436 : v1,v2 < min1 ? min1 : v2 > 0.615 ? 0.615 : v2];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withY = function(this1,newy) {
	var this2 = [newy,this1[1],this1[2]];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withU = function(this1,newu) {
	var this2 = [this1[0],newu,this1[2]];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.withV = function(this1,newv) {
	var this2 = [this1[0],this1[1],newv];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.toString = function(this1) {
	return "yuv(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Yuv_Yuv_$Impl_$.equals = function(this1,other) {
	return thx_color__$Yuv_Yuv_$Impl_$.nearEquals(this1,other);
};
thx_color__$Yuv_Yuv_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Yuv_Yuv_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Yuv_Yuv_$Impl_$.toXyz(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Yuv_Yuv_$Impl_$.toLab(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCmy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmy(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCmyk(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toCubeHelixWithGamma(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1),1);
};
thx_color__$Yuv_Yuv_$Impl_$.toGrey = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toGrey(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHsv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsv(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Yuv_Yuv_$Impl_$.toXyz(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgb = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgb(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Yuv_Yuv_$Impl_$.toRgbxa(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Yuv_Yuv_$Impl_$.toRgbxa(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toRgbx = function(this1) {
	var r = this1[0] + 1.139837398373983740 * this1[2];
	var g = this1[0] - 0.3946517043589703515 * this1[1] - 0.5805986066674976801 * this1[2];
	var b = this1[0] + 2.032110091743119266 * this1[1];
	var this2 = [r,g,b];
	return this2;
};
thx_color__$Yuv_Yuv_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toRgbxa(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toYxy = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYxy(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.toXyz = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toXyz(thx_color__$Yuv_Yuv_$Impl_$.toRgbx(this1));
};
thx_color__$Yuv_Yuv_$Impl_$.get_y = function(this1) {
	return this1[0];
};
thx_color__$Yuv_Yuv_$Impl_$.get_u = function(this1) {
	return this1[1];
};
thx_color__$Yuv_Yuv_$Impl_$.get_v = function(this1) {
	return this1[2];
};
var thx_color__$Yxy_Yxy_$Impl_$ = {};
$hxClasses["thx.color._Yxy.Yxy_Impl_"] = thx_color__$Yxy_Yxy_$Impl_$;
thx_color__$Yxy_Yxy_$Impl_$.__name__ = "thx.color._Yxy.Yxy_Impl_";
thx_color__$Yxy_Yxy_$Impl_$.__properties__ = {get_y2:"get_y2",get_x:"get_x",get_y1:"get_y1"};
thx_color__$Yxy_Yxy_$Impl_$.create = function(y1,x,y2) {
	var this1 = [y1,x,y2];
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.fromFloats = function(arr) {
	arr = thx_ArrayFloats.resized(arr,3);
	var this1 = [arr[0],arr[1],arr[2]];
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.fromString = function(color) {
	var info = thx_color_parse_ColorParser.parseColor(color);
	if(null == info) {
		return null;
	}
	try {
		if(info.name == "yxy") {
			var this1 = thx_color_parse_ColorParser.getFloatChannels(info.channels,3,false);
			return this1;
		} else {
			return null;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
thx_color__$Yxy_Yxy_$Impl_$._new = function(channels) {
	var this1 = channels;
	return this1;
};
thx_color__$Yxy_Yxy_$Impl_$.interpolate = function(this1,other,t) {
	var this2 = [thx_Floats.interpolate(t,this1[0],other[0]),thx_Floats.interpolate(t,this1[1],other[1]),thx_Floats.interpolate(t,this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.min = function(this1,other) {
	var this2 = [Math.min(this1[0],other[0]),Math.min(this1[1],other[1]),Math.min(this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.max = function(this1,other) {
	var this2 = [Math.max(this1[0],other[0]),Math.max(this1[1],other[1]),Math.max(this1[2],other[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.roundTo = function(this1,decimals) {
	var this2 = [thx_Floats.roundTo(this1[0],decimals),thx_Floats.roundTo(this1[1],decimals),thx_Floats.roundTo(this1[2],decimals)];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withY1 = function(this1,newy1) {
	var this2 = [newy1,this1[1],this1[2]];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withY = function(this1,newx) {
	var this2 = [this1[0],newx,this1[2]];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.withZ = function(this1,newy2) {
	var this2 = [this1[0],this1[1],newy2];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.toString = function(this1) {
	return "yxy(" + this1[0] + "," + this1[1] + "," + this1[2] + ")";
};
thx_color__$Yxy_Yxy_$Impl_$.equals = function(this1,other) {
	return thx_color__$Yxy_Yxy_$Impl_$.nearEquals(this1,other);
};
thx_color__$Yxy_Yxy_$Impl_$.nearEquals = function(this1,other,tolerance) {
	if(tolerance == null) {
		tolerance = 1e-9;
	}
	if(thx_Floats.nearEquals(this1[0],other[0],tolerance) && thx_Floats.nearEquals(this1[1],other[1],tolerance)) {
		return thx_Floats.nearEquals(this1[2],other[2],tolerance);
	} else {
		return false;
	}
};
thx_color__$Yxy_Yxy_$Impl_$.toLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toLab(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toLCh = function(this1) {
	return thx_color__$Lab_Lab_$Impl_$.toLCh(thx_color__$Yxy_Yxy_$Impl_$.toLab(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toLuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toLuv(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCmy = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCmy(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCmyk = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCmyk(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toCubeHelix = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toCubeHelix(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toGrey = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toGrey(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHsl = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toHsl(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHsv = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHsv(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toHunterLab = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toHunterLab(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgb = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgb(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgba = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toRgba(thx_color__$Yxy_Yxy_$Impl_$.toRgbxa(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toArgb = function(this1) {
	return thx_color__$Rgbxa_Rgbxa_$Impl_$.toArgb(thx_color__$Yxy_Yxy_$Impl_$.toRgbxa(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgbx = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbx(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toRgbxa = function(this1) {
	return thx_color__$Xyz_Xyz_$Impl_$.toRgbxa(thx_color__$Yxy_Yxy_$Impl_$.toXyz(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toTemperature = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toTemperature(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toYuv = function(this1) {
	return thx_color__$Rgbx_Rgbx_$Impl_$.toYuv(thx_color__$Yxy_Yxy_$Impl_$.toRgbx(this1));
};
thx_color__$Yxy_Yxy_$Impl_$.toXyz = function(this1) {
	var this2 = [this1[1] * (this1[0] / this1[2]),this1[0],(1 - this1[1] - this1[2]) * (this1[0] / this1[2])];
	return this2;
};
thx_color__$Yxy_Yxy_$Impl_$.get_y1 = function(this1) {
	return this1[0];
};
thx_color__$Yxy_Yxy_$Impl_$.get_x = function(this1) {
	return this1[1];
};
thx_color__$Yxy_Yxy_$Impl_$.get_y2 = function(this1) {
	return this1[2];
};
var thx_color_parse_ColorParser = function() {
	this.pattern_color = new EReg("^\\s*([^(]+)\\s*\\(([^)]*)\\)\\s*$","i");
	this.pattern_channel = new EReg("^\\s*(-?\\d*.\\d+|-?\\d+)(%|deg|rad)?\\s*$","i");
};
$hxClasses["thx.color.parse.ColorParser"] = thx_color_parse_ColorParser;
thx_color_parse_ColorParser.__name__ = "thx.color.parse.ColorParser";
thx_color_parse_ColorParser.parseColor = function(s) {
	return thx_color_parse_ColorParser.parser.processColor(s);
};
thx_color_parse_ColorParser.parseHex = function(s) {
	return thx_color_parse_ColorParser.parser.processHex(s);
};
thx_color_parse_ColorParser.parseChannel = function(s) {
	return thx_color_parse_ColorParser.parser.processChannel(s);
};
thx_color_parse_ColorParser.getFloatChannels = function(channels,length,useInt8) {
	if(length != channels.length) {
		throw new js__$Boot_HaxeError("invalid number of channels, expected " + length + " but it is " + channels.length);
	}
	var useInt81 = useInt8;
	var f = function(channel) {
		return thx_color_parse_ColorParser.getFloatChannel(channel,useInt81);
	};
	var result = new Array(channels.length);
	var _g = 0;
	var _g1 = channels.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(channels[i]);
	}
	return result;
};
thx_color_parse_ColorParser.getInt8Channels = function(channels,length) {
	if(length != channels.length) {
		throw new js__$Boot_HaxeError("invalid number of channels, expected " + length + " but it is " + channels.length);
	}
	var f = thx_color_parse_ColorParser.getInt8Channel;
	var result = new Array(channels.length);
	var _g = 0;
	var _g1 = channels.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = f(channels[i]);
	}
	return result;
};
thx_color_parse_ColorParser.getFloatChannel = function(channel,useInt8) {
	if(useInt8 == null) {
		useInt8 = true;
	}
	switch(channel._hx_index) {
	case 0:
		var v = channel.value;
		return v / 100;
	case 1:
		var v1 = channel.value;
		return v1;
	case 2:
		var v2 = channel.value;
		return v2;
	case 3:
		var _g2 = channel.value;
		var v3 = _g2;
		if(useInt8) {
			return v3 / 255;
		} else {
			var v4 = _g2;
			return v4;
		}
		break;
	case 4:
		var v5 = channel.value;
		return v5;
	case 5:
		var v6 = channel.value;
		if(v6) {
			return 1;
		} else {
			return 0;
		}
		break;
	}
};
thx_color_parse_ColorParser.getInt8Channel = function(channel) {
	switch(channel._hx_index) {
	case 0:
		var v = channel.value;
		return Math.round(255 * v / 100);
	case 3:
		var v1 = channel.value;
		return v1;
	case 5:
		var v2 = channel.value;
		if(v2) {
			return 1;
		} else {
			return 0;
		}
		break;
	default:
		throw new js__$Boot_HaxeError("unable to extract a valid int8 value");
	}
};
thx_color_parse_ColorParser.prototype = {
	pattern_color: null
	,pattern_channel: null
	,processHex: function(s) {
		if(!thx_color_parse_ColorParser.isPureHex.match(s)) {
			if(HxOverrides.substr(s,0,1) == "#") {
				if(s.length == 4) {
					s = s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2) + s.charAt(3) + s.charAt(3);
				} else if(s.length == 5) {
					s = s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2) + s.charAt(3) + s.charAt(3) + s.charAt(4) + s.charAt(4);
				} else {
					s = HxOverrides.substr(s,1,null);
				}
			} else if(HxOverrides.substr(s,0,2) == "0x") {
				s = HxOverrides.substr(s,2,null);
			} else {
				return null;
			}
		}
		var channels = [];
		while(s.length > 0) {
			channels.push(thx_color_parse_ChannelInfo.CIInt8(Std.parseInt("0x" + HxOverrides.substr(s,0,2))));
			s = HxOverrides.substr(s,2,null);
		}
		if(channels.length == 4) {
			var channels1 = channels[0];
			return new thx_color_parse_ColorInfo("rgba",channels.slice(1).concat([channels1]));
		} else {
			return new thx_color_parse_ColorInfo("rgb",channels);
		}
	}
	,processColor: function(s) {
		if(!this.pattern_color.match(s)) {
			return null;
		}
		var name = this.pattern_color.matched(1);
		if(null == name) {
			return null;
		}
		name = name.toLowerCase();
		var m2 = this.pattern_color.matched(2);
		var s_channels = null == m2 ? [] : m2.split(",");
		var channels = [];
		var channel;
		var _g = 0;
		while(_g < s_channels.length) {
			var s_channel = s_channels[_g];
			++_g;
			channel = this.processChannel(s_channel);
			if(null == channel) {
				return null;
			}
			channels.push(channel);
		}
		return new thx_color_parse_ColorInfo(name,channels);
	}
	,processChannel: function(s) {
		if(!this.pattern_channel.match(s)) {
			return null;
		}
		var value = this.pattern_channel.matched(1);
		var unit = this.pattern_channel.matched(2);
		if(unit == null) {
			unit = "";
		}
		try {
			switch(unit) {
			case "":
				if(value == "" + thx_Ints.parse(value)) {
					var i = thx_Ints.parse(value);
					if(i == 0) {
						return thx_color_parse_ChannelInfo.CIBool(false);
					} else if(i == 1) {
						return thx_color_parse_ChannelInfo.CIBool(true);
					} else if(i < 256) {
						return thx_color_parse_ChannelInfo.CIInt8(i);
					} else {
						return thx_color_parse_ChannelInfo.CIInt(i);
					}
				} else if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIFloat(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "%":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIPercent(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "DEG":case "deg":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIDegree(thx_Floats.parse(value));
				} else {
					return null;
				}
				break;
			case "RAD":case "rad":
				if(thx_Floats.canParse(value)) {
					return thx_color_parse_ChannelInfo.CIDegree(thx_Floats.parse(value) * 180 / Math.PI);
				} else {
					return null;
				}
				break;
			default:
				return null;
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return null;
		}
	}
	,__class__: thx_color_parse_ColorParser
};
var thx_color_parse_ColorInfo = function(name,channels) {
	this.name = name;
	this.channels = channels;
};
$hxClasses["thx.color.parse.ColorInfo"] = thx_color_parse_ColorInfo;
thx_color_parse_ColorInfo.__name__ = "thx.color.parse.ColorInfo";
thx_color_parse_ColorInfo.prototype = {
	name: null
	,channels: null
	,toString: function() {
		return "" + this.name + ", channels: " + Std.string(this.channels);
	}
	,__class__: thx_color_parse_ColorInfo
};
var thx_color_parse_ChannelInfo = $hxEnums["thx.color.parse.ChannelInfo"] = { __ename__ : "thx.color.parse.ChannelInfo", __constructs__ : ["CIPercent","CIFloat","CIDegree","CIInt8","CIInt","CIBool"]
	,CIPercent: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CIFloat: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CIDegree: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CIInt8: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CIInt: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
	,CIBool: ($_=function(value) { return {_hx_index:5,value:value,__enum__:"thx.color.parse.ChannelInfo",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var thx_csv_Csv = function() { };
$hxClasses["thx.csv.Csv"] = thx_csv_Csv;
thx_csv_Csv.__name__ = "thx.csv.Csv";
thx_csv_Csv.decode = function(csv) {
	return thx_csv_Dsv.decode(csv,thx_csv_Csv.decodeOptions);
};
thx_csv_Csv.decodeObjects = function(csv) {
	return thx_csv_Dsv.arrayToObjects(thx_csv_Dsv.decode(csv,thx_csv_Csv.decodeOptions));
};
thx_csv_Csv.encode = function(data) {
	return thx_csv_Dsv.encode(data,thx_csv_Csv.encodeOptions);
};
thx_csv_Csv.encodeObjects = function(data) {
	return thx_csv_Dsv.encodeObjects(data,thx_csv_Csv.encodeOptions);
};
var thx_csv_Dsv = function() { };
$hxClasses["thx.csv.Dsv"] = thx_csv_Dsv;
thx_csv_Dsv.__name__ = "thx.csv.Dsv";
thx_csv_Dsv.decode = function(dsv,options) {
	if(null == options.quote) {
		options.quote = "\"";
	}
	if(null == options.escapedQuote) {
		options.escapedQuote = options.quote == "\"" ? "\"\"" : "\\" + options.quote;
	}
	if(null == options.trimValues) {
		options.trimValues = false;
	}
	if(null == options.trimEmptyLines) {
		options.trimEmptyLines = true;
	}
	if(options.trimEmptyLines) {
		dsv = thx_Strings.trimCharsRight(thx_Strings.trimCharsLeft(dsv,"\n\r"),"\n\r");
	}
	var result = dsv == "" ? [] : new thx_csv_core_Parser(options.delimiter,options.quote,options.escapedQuote).parse(dsv);
	if(options.trimValues) {
		var _g = 0;
		while(_g < result.length) {
			var row = result[_g];
			++_g;
			var _g1 = 0;
			var _g11 = row.length;
			while(_g1 < _g11) {
				var i = _g1++;
				row[i] = StringTools.trim(row[i]);
			}
		}
	}
	return result;
};
thx_csv_Dsv.decodeObjects = function(dsv,options) {
	return thx_csv_Dsv.arrayToObjects(thx_csv_Dsv.decode(dsv,options));
};
thx_csv_Dsv.arrayToObjects = function(arr) {
	var columns = arr[0];
	if(null == columns) {
		return [];
	}
	var result = [];
	var len = columns.length;
	var row;
	var ob;
	var _g = 1;
	var _g1 = arr.length;
	while(_g < _g1) {
		var r = _g++;
		ob = { };
		row = arr[r];
		var _g2 = 0;
		var _g11 = len;
		while(_g2 < _g11) {
			var i = _g2++;
			ob[columns[i]] = row[i];
		}
		result.push(ob);
	}
	return result;
};
thx_csv_Dsv.encode = function(data,options) {
	if(null == options.quote) {
		options.quote = "\"";
	}
	if(null == options.escapedQuote) {
		options.escapedQuote = options.quote == "\"" ? "\"\"" : "\\" + options.quote;
	}
	if(null == options.newline) {
		options.newline = "\n";
	}
	var result = new Array(data.length);
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var row = data[i];
		var result1 = new Array(row.length);
		var _g2 = 0;
		var _g11 = row.length;
		while(_g2 < _g11) {
			var i1 = _g2++;
			var cell = row[i1];
			result1[i1] = thx_csv_Dsv.requiresQuotes(cell,options.delimiter,options.quote) ? thx_csv_Dsv.applyQuotes(cell,options.quote,options.escapedQuote) : cell;
		}
		result[i] = result1.join(options.delimiter);
	}
	return result.join(options.newline);
};
thx_csv_Dsv.encodeObjects = function(data,options) {
	return thx_csv_Dsv.encode(thx_csv_Dsv.objectsToArray(data,[]),options);
};
thx_csv_Dsv.objectsToArray = function(objects,columns) {
	if(null == columns) {
		return thx_csv_Dsv.objectsToArray(objects,[]);
	}
	var map = new haxe_ds_StringMap();
	var result = [columns];
	var collector;
	var row;
	var _g = 0;
	var _g1 = columns.length;
	while(_g < _g1) {
		var i = _g++;
		var key = columns[i];
		if(__map_reserved[key] != null) {
			map.setReserved(key,i);
		} else {
			map.h[key] = i;
		}
	}
	var _g2 = 0;
	while(_g2 < objects.length) {
		var object = objects[_g2];
		++_g2;
		collector = [];
		row = [];
		var _g21 = 0;
		var _g3 = Reflect.fields(object);
		while(_g21 < _g3.length) {
			var field = _g3[_g21];
			++_g21;
			var index = __map_reserved[field] != null ? map.getReserved(field) : map.h[field];
			if(null == index) {
				collector.push(field);
			} else {
				row[index] = Reflect.field(object,field);
			}
		}
		if(collector.length > 0) {
			return thx_csv_Dsv.objectsToArray(objects,columns.concat(collector));
		} else {
			result.push(row);
		}
	}
	return result;
};
thx_csv_Dsv.requiresQuotes = function(value,delimiter,quote) {
	if(!(value.indexOf(delimiter) >= 0 || value.indexOf(quote) >= 0 || value.indexOf("\n") >= 0)) {
		return value.indexOf("\r") >= 0;
	} else {
		return true;
	}
};
thx_csv_Dsv.applyQuotes = function(value,quote,escapedQuote) {
	value = StringTools.replace(value,quote,escapedQuote);
	return "" + quote + value + quote;
};
var thx_csv_core_Parser = function(delimiter,quote,escapedQuote) {
	this.delimiter = delimiter;
	this.quote = quote;
	this.escapedQuote = escapedQuote;
};
$hxClasses["thx.csv.core.Parser"] = thx_csv_core_Parser;
thx_csv_core_Parser.__name__ = "thx.csv.core.Parser";
thx_csv_core_Parser.prototype = {
	delimiter: null
	,quote: null
	,escapedQuote: null
	,result: null
	,pos: null
	,len: null
	,delimiterLength: null
	,quoteLength: null
	,escapedQuoteLength: null
	,buffer: null
	,row: null
	,s: null
	,parse: function(s) {
		this.s = s;
		this.result = [];
		this.pos = 0;
		this.len = s.length;
		this.delimiterLength = this.delimiter.length;
		this.quoteLength = this.quote.length;
		this.escapedQuoteLength = this.escapedQuote.length;
		this.buffer = new StringBuf();
		this.row = [];
		try {
			var t;
			while(this.pos < this.len) if(this.s.substring(this.pos,this.pos + this.quoteLength) == this.quote && this.buffer.b.length == 0) {
				this.pos += this.quoteLength;
				while(this.pos < this.len) if(this.s.substring(this.pos,this.pos + this.escapedQuoteLength) == this.escapedQuote) {
					this.pushBuffer(this.quote);
					this.pos += this.escapedQuoteLength;
				} else if(this.s.substring(this.pos,this.pos + this.quoteLength) == this.quote) {
					this.pos += this.quoteLength;
					var next = this.s.substring(this.pos,this.pos + 1);
					while(next == " " || this.delimiter != "\t" && next == "\t") {
						++this.pos;
						next = this.s.substring(this.pos,this.pos + 1);
					}
					break;
				} else {
					this.pushBuffer(this.s.substring(this.pos,this.pos + 1));
					++this.pos;
				}
			} else if(this.s.substring(this.pos,this.pos + this.delimiterLength) == this.delimiter) {
				this.pushCell();
				this.pos += this.delimiterLength;
			} else {
				t = this.s.substring(this.pos,this.pos + 2);
				if(t == "\n\r" || t == "\r\n") {
					this.pos += 2;
					this.pushCell();
					this.pushRow();
					continue;
				}
				t = this.s.substring(this.pos,this.pos + 1);
				if(t == "\n" || t == "\r") {
					++this.pos;
					this.pushCell();
					this.pushRow();
					continue;
				}
				this.pushBuffer(this.s.substring(this.pos,this.pos + 1));
				++this.pos;
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			throw new thx_Error("unable to parse at pos " + this.pos + ": " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),null,{ fileName : "thx/csv/core/Parser.hx", lineNumber : 39, className : "thx.csv.core.Parser", methodName : "parse"});
		}
		this.pushCell();
		this.pushRow();
		return this.result;
	}
	,pushCell: function() {
		this.row.push(this.buffer.b);
		this.buffer = new StringBuf();
	}
	,pushBuffer: function(char) {
		this.buffer.b += char == null ? "null" : "" + char;
	}
	,pushRow: function() {
		this.result.push(this.row);
		this.row = [];
	}
	,loop: function() {
		var t;
		while(this.pos < this.len) if(this.s.substring(this.pos,this.pos + this.quoteLength) == this.quote && this.buffer.b.length == 0) {
			this.pos += this.quoteLength;
			while(this.pos < this.len) if(this.s.substring(this.pos,this.pos + this.escapedQuoteLength) == this.escapedQuote) {
				this.pushBuffer(this.quote);
				this.pos += this.escapedQuoteLength;
			} else if(this.s.substring(this.pos,this.pos + this.quoteLength) == this.quote) {
				this.pos += this.quoteLength;
				var next = this.s.substring(this.pos,this.pos + 1);
				while(next == " " || this.delimiter != "\t" && next == "\t") {
					++this.pos;
					next = this.s.substring(this.pos,this.pos + 1);
				}
				break;
			} else {
				this.pushBuffer(this.s.substring(this.pos,this.pos + 1));
				++this.pos;
			}
		} else if(this.s.substring(this.pos,this.pos + this.delimiterLength) == this.delimiter) {
			this.pushCell();
			this.pos += this.delimiterLength;
		} else {
			t = this.s.substring(this.pos,this.pos + 2);
			if(t == "\n\r" || t == "\r\n") {
				this.pos += 2;
				this.pushCell();
				this.pushRow();
				continue;
			}
			t = this.s.substring(this.pos,this.pos + 1);
			if(t == "\n" || t == "\r") {
				++this.pos;
				this.pushCell();
				this.pushRow();
				continue;
			}
			this.pushBuffer(this.s.substring(this.pos,this.pos + 1));
			++this.pos;
		}
	}
	,__class__: thx_csv_core_Parser
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
$hxClasses["thx.error.ErrorWrapper"] = thx_error_ErrorWrapper;
thx_error_ErrorWrapper.__name__ = "thx.error.ErrorWrapper";
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	innerError: null
	,__class__: thx_error_ErrorWrapper
});
var thx_error_NullArgument = function(message,posInfo) {
	thx_Error.call(this,message,null,posInfo);
};
$hxClasses["thx.error.NullArgument"] = thx_error_NullArgument;
thx_error_NullArgument.__name__ = "thx.error.NullArgument";
thx_error_NullArgument.__super__ = thx_Error;
thx_error_NullArgument.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_NullArgument
});
var thx_fp__$Map_Map_$Impl_$ = {};
$hxClasses["thx.fp._Map.Map_Impl_"] = thx_fp__$Map_Map_$Impl_$;
thx_fp__$Map_Map_$Impl_$.__name__ = "thx.fp._Map.Map_Impl_";
thx_fp__$Map_Map_$Impl_$.empty = function() {
	return thx_fp_MapImpl.Tip;
};
thx_fp__$Map_Map_$Impl_$.singleton = function(k,v) {
	return thx_fp_MapImpl.Bin(1,k,v,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
};
thx_fp__$Map_Map_$Impl_$.bin = function(k,v,lhs,rhs) {
	return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k,v,lhs,rhs);
};
thx_fp__$Map_Map_$Impl_$.fromNative = function(map,comparator) {
	var r = thx_fp_MapImpl.Tip;
	var key = map.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		r = thx_fp__$Map_Map_$Impl_$.insert(r,key1,map.get(key1),comparator);
	}
	return r;
};
thx_fp__$Map_Map_$Impl_$.lookup = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1.rhs;
		var lhs = this1.lhs;
		var xvalue = this1.value;
		var xkey = this1.key;
		var size = this1.size;
		var c = comparator(key,xkey);
		switch(c._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookup(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookup(rhs,key,comparator);
		case 2:
			return haxe_ds_Option.Some(xvalue);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.lookupTuple = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return haxe_ds_Option.None;
	case 1:
		var rhs = this1.rhs;
		var lhs = this1.lhs;
		var xvalue = this1.value;
		var xkey = this1.key;
		var size = this1.size;
		var c = comparator(key,xkey);
		switch(c._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(lhs,key,comparator);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.lookupTuple(rhs,key,comparator);
		case 2:
			var this2 = { _0 : xkey, _1 : xvalue};
			return haxe_ds_Option.Some(this2);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.delete = function(this1,key,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1.rhs;
		var lhs = this1.lhs;
		var x = this1.value;
		var kx = this1.key;
		var size = this1.size;
		switch(comparator(key,kx)._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,thx_fp__$Map_Map_$Impl_$.delete(lhs,key,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(kx,x,lhs,thx_fp__$Map_Map_$Impl_$.delete(rhs,key,comparator));
		case 2:
			return thx_fp__$Map_Map_$Impl_$.glue(lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.insert = function(this1,kx,x,comparator) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Bin(1,kx,x,thx_fp_MapImpl.Tip,thx_fp_MapImpl.Tip);
	case 1:
		var rhs = this1.rhs;
		var lhs = this1.lhs;
		var y = this1.value;
		var ky = this1.key;
		var sz = this1.size;
		switch(comparator(kx,ky)._hx_index) {
		case 0:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,thx_fp__$Map_Map_$Impl_$.insert(lhs,kx,x,comparator),rhs);
		case 1:
			return thx_fp__$Map_Map_$Impl_$.balance(ky,y,lhs,thx_fp__$Map_Map_$Impl_$.insert(rhs,kx,x,comparator));
		case 2:
			return thx_fp_MapImpl.Bin(sz,kx,x,lhs,rhs);
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeft = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g1 = this1.key;
		var _g = this1.size;
		var r = this1.rhs;
		var l = this1.lhs;
		var x = this1.value;
		return thx_fp__$Map_Map_$Impl_$.foldLeft(r,thx_fp__$Map_Map_$Impl_$.foldLeft(l,f(b,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.map = function(this1,f) {
	switch(this1._hx_index) {
	case 0:
		return thx_fp_MapImpl.Tip;
	case 1:
		var rhs = this1.rhs;
		var lhs = this1.lhs;
		var y = this1.value;
		var ky = this1.key;
		var sz = this1.size;
		return thx_fp_MapImpl.Bin(sz,ky,f(y),thx_fp__$Map_Map_$Impl_$.map(lhs,f),thx_fp__$Map_Map_$Impl_$.map(rhs,f));
	}
};
thx_fp__$Map_Map_$Impl_$.values = function(this1) {
	return thx_fp__$Map_Map_$Impl_$.foldLeft(this1,[],function(acc,v) {
		acc.push(v);
		return acc;
	});
};
thx_fp__$Map_Map_$Impl_$.foldLeftKeys = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g2 = this1.value;
		var _g = this1.size;
		var r = this1.rhs;
		var l = this1.lhs;
		var kx = this1.key;
		return thx_fp__$Map_Map_$Impl_$.foldLeftKeys(r,thx_fp__$Map_Map_$Impl_$.foldLeftKeys(l,f(b,kx),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftAll = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var r = this1.rhs;
		var l = this1.lhs;
		var x = this1.value;
		var kx = this1.key;
		return thx_fp__$Map_Map_$Impl_$.foldLeftAll(r,thx_fp__$Map_Map_$Impl_$.foldLeftAll(l,f(b,kx,x),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.foldLeftTuples = function(this1,b,f) {
	switch(this1._hx_index) {
	case 0:
		return b;
	case 1:
		var _g = this1.size;
		var r = this1.rhs;
		var l = this1.lhs;
		var x = this1.value;
		var kx = this1.key;
		var this2 = { _0 : kx, _1 : x};
		return thx_fp__$Map_Map_$Impl_$.foldLeftTuples(r,thx_fp__$Map_Map_$Impl_$.foldLeftTuples(l,f(b,this2),f),f);
	}
};
thx_fp__$Map_Map_$Impl_$.size = function(this1) {
	switch(this1._hx_index) {
	case 0:
		return 0;
	case 1:
		var _g4 = this1.rhs;
		var _g3 = this1.lhs;
		var _g2 = this1.value;
		var _g1 = this1.key;
		var size = this1.size;
		return size;
	}
};
thx_fp__$Map_Map_$Impl_$.balance = function(k,x,lhs,rhs) {
	var ls = thx_fp__$Map_Map_$Impl_$.size(lhs);
	var rs = thx_fp__$Map_Map_$Impl_$.size(rhs);
	var xs = ls + rs + 1;
	if(ls + rs <= 1) {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	} else if(rs >= 5 * ls) {
		return thx_fp__$Map_Map_$Impl_$.rotateLeft(k,x,lhs,rhs);
	} else if(ls >= 5 * rs) {
		return thx_fp__$Map_Map_$Impl_$.rotateRight(k,x,lhs,rhs);
	} else {
		return thx_fp_MapImpl.Bin(xs,k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.glue = function(this1,that) {
	if(this1._hx_index == 0) {
		return that;
	} else if(that._hx_index == 0) {
		return this1;
	} else {
		var l = this1;
		var r = that;
		if(thx_fp__$Map_Map_$Impl_$.size(l) > thx_fp__$Map_Map_$Impl_$.size(r)) {
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(l);
			return thx_fp__$Map_Map_$Impl_$.balance(t.k,t.x,t.t,r);
		} else {
			var l1 = this1;
			var r1 = that;
			var t1 = thx_fp__$Map_Map_$Impl_$.deleteFindMin(r1);
			return thx_fp__$Map_Map_$Impl_$.balance(t1.k,t1.x,l1,t1.t);
		}
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMin = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the minimal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 161, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMin"});
	case 1:
		var _g4 = map.rhs;
		var _g3 = map.lhs;
		var _g2 = map.value;
		var _g1 = map.key;
		var _g = map.size;
		if(_g3._hx_index == 0) {
			var r = _g4;
			var k = _g1;
			var x = _g2;
			return { k : k, x : x, t : r};
		} else {
			var r1 = _g4;
			var k1 = _g1;
			var x1 = _g2;
			var l = _g3;
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMin(l);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,t.t,r1)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.deleteFindMax = function(map) {
	switch(map._hx_index) {
	case 0:
		throw new thx_Error("can not return the maximal element of an empty map",null,{ fileName : "thx/fp/Map.hx", lineNumber : 171, className : "thx.fp._Map.Map_Impl_", methodName : "deleteFindMax"});
	case 1:
		var _g4 = map.rhs;
		var _g3 = map.lhs;
		var _g2 = map.value;
		var _g1 = map.key;
		var _g = map.size;
		if(_g4._hx_index == 0) {
			var k = _g1;
			var x = _g2;
			var l = _g3;
			return { k : k, x : x, t : l};
		} else {
			var k1 = _g1;
			var x1 = _g2;
			var l1 = _g3;
			var r = _g4;
			var t = thx_fp__$Map_Map_$Impl_$.deleteFindMax(r);
			return { k : t.k, x : t.x, t : thx_fp__$Map_Map_$Impl_$.balance(k1,x1,l1,t.t)};
		}
		break;
	}
};
thx_fp__$Map_Map_$Impl_$.rotateLeft = function(k,x,lhs,rhs) {
	if(rhs._hx_index == 1) {
		var _g2 = rhs.value;
		var _g1 = rhs.key;
		var _g = rhs.size;
		var ry = rhs.rhs;
		var ly = rhs.lhs;
		if(thx_fp__$Map_Map_$Impl_$.size(ly) < 2 * thx_fp__$Map_Map_$Impl_$.size(ry)) {
			return thx_fp__$Map_Map_$Impl_$.singleLeft(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleLeft(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.rotateRight = function(k,x,lhs,rhs) {
	if(lhs._hx_index == 1) {
		var _g2 = lhs.value;
		var _g1 = lhs.key;
		var _g = lhs.size;
		var ry = lhs.rhs;
		var ly = lhs.lhs;
		if(thx_fp__$Map_Map_$Impl_$.size(ry) < 2 * thx_fp__$Map_Map_$Impl_$.size(ly)) {
			return thx_fp__$Map_Map_$Impl_$.singleRight(k,x,lhs,rhs);
		} else {
			return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
		}
	} else {
		return thx_fp__$Map_Map_$Impl_$.doubleRight(k,x,lhs,rhs);
	}
};
thx_fp__$Map_Map_$Impl_$.singleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var _g = rhs.size;
		var t3 = rhs.rhs;
		var t2 = rhs.lhs;
		var x2 = rhs.value;
		var k2 = rhs.key;
		var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k2,x2,lhs,t3);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 193, className : "thx.fp._Map.Map_Impl_", methodName : "singleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.singleRight = function(k1,x1,lhs,t3) {
	if(lhs._hx_index == 1) {
		var _g = lhs.size;
		var t2 = lhs.rhs;
		var t1 = lhs.lhs;
		var x2 = lhs.value;
		var k2 = lhs.key;
		var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t2) + thx_fp__$Map_Map_$Impl_$.size(t3) + 1,k1,x1,t2,t3);
		return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k2,x2,t1,rhs);
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 199, className : "thx.fp._Map.Map_Impl_", methodName : "singleRight"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleLeft = function(k1,x1,t1,rhs) {
	if(rhs._hx_index == 1) {
		var _g3 = rhs.lhs;
		var _g = rhs.size;
		if(_g3._hx_index == 1) {
			var _g5 = _g3.size;
			var t4 = rhs.rhs;
			var k2 = rhs.key;
			var x2 = rhs.value;
			var t3 = _g3.rhs;
			var t2 = _g3.lhs;
			var x3 = _g3.value;
			var k3 = _g3.key;
			var lhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k1,x1,t1,t2);
			var rhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k2,x2,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs) + thx_fp__$Map_Map_$Impl_$.size(rhs1) + 1,k3,x3,lhs,rhs1);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 206, className : "thx.fp._Map.Map_Impl_", methodName : "doubleLeft"});
	}
};
thx_fp__$Map_Map_$Impl_$.doubleRight = function(k1,x1,lhs,t4) {
	if(lhs._hx_index == 1) {
		var _g4 = lhs.rhs;
		var _g = lhs.size;
		if(_g4._hx_index == 1) {
			var _g5 = _g4.size;
			var k2 = lhs.key;
			var x2 = lhs.value;
			var t1 = lhs.lhs;
			var t3 = _g4.rhs;
			var t2 = _g4.lhs;
			var x3 = _g4.value;
			var k3 = _g4.key;
			var lhs1 = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t1) + thx_fp__$Map_Map_$Impl_$.size(t2) + 1,k2,x2,t1,t2);
			var rhs = thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(t3) + thx_fp__$Map_Map_$Impl_$.size(t4) + 1,k1,x1,t3,t4);
			return thx_fp_MapImpl.Bin(thx_fp__$Map_Map_$Impl_$.size(lhs1) + thx_fp__$Map_Map_$Impl_$.size(rhs) + 1,k3,x3,lhs1,rhs);
		} else {
			throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
		}
	} else {
		throw new thx_Error("damn it, this should never happen",null,{ fileName : "thx/fp/Map.hx", lineNumber : 213, className : "thx.fp._Map.Map_Impl_", methodName : "doubleRight"});
	}
};
var thx_fp_MapImpl = $hxEnums["thx.fp.MapImpl"] = { __ename__ : "thx.fp.MapImpl", __constructs__ : ["Tip","Bin"]
	,Tip: {_hx_index:0,__enum__:"thx.fp.MapImpl",toString:$estr}
	,Bin: ($_=function(size,key,value,lhs,rhs) { return {_hx_index:1,size:size,key:key,value:value,lhs:lhs,rhs:rhs,__enum__:"thx.fp.MapImpl",toString:$estr}; },$_.__params__ = ["size","key","value","lhs","rhs"],$_)
};
var tjson_TJSON = function() { };
$hxClasses["tjson.TJSON"] = tjson_TJSON;
tjson_TJSON.__name__ = "tjson.TJSON";
tjson_TJSON.parse = function(json,fileName,stringProcessor) {
	if(fileName == null) {
		fileName = "JSON Data";
	}
	var t = new tjson_TJSONParser(json,fileName,stringProcessor);
	return t.doParse();
};
tjson_TJSON.encode = function(obj,style,useCache) {
	if(useCache == null) {
		useCache = true;
	}
	var t = new tjson_TJSONEncoder(useCache);
	return t.doEncode(obj,style);
};
var tjson_TJSONParser = function(vjson,vfileName,stringProcessor) {
	if(vfileName == null) {
		vfileName = "JSON Data";
	}
	this.json = vjson;
	this.fileName = vfileName;
	this.currentLine = 1;
	this.lastSymbolQuoted = false;
	this.pos = 0;
	this.floatRegex = new EReg("^-?[0-9]*\\.[0-9]+$","");
	this.intRegex = new EReg("^-?[0-9]+$","");
	this.strProcessor = stringProcessor == null ? $bind(this,this.defaultStringProcessor) : stringProcessor;
	this.cache = [];
};
$hxClasses["tjson.TJSONParser"] = tjson_TJSONParser;
tjson_TJSONParser.__name__ = "tjson.TJSONParser";
tjson_TJSONParser.prototype = {
	pos: null
	,json: null
	,lastSymbolQuoted: null
	,fileName: null
	,currentLine: null
	,cache: null
	,floatRegex: null
	,intRegex: null
	,strProcessor: null
	,doParse: function() {
		try {
			var _g = this.getNextSymbol();
			switch(_g) {
			case "[":
				return this.doArray();
			case "{":
				return this.doObject();
			default:
				var s = _g;
				return this.convertSymbolToProperType(s);
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(typeof(e1) == "string") {
				throw new js__$Boot_HaxeError(this.fileName + " on line " + this.currentLine + ": " + e1);
			} else {
				throw e;
			}
		}
	}
	,doObject: function() {
		var o = { };
		var val = "";
		var key;
		var isClassOb = false;
		this.cache.push(o);
		while(this.pos < this.json.length) {
			key = this.getNextSymbol();
			if(key == "," && !this.lastSymbolQuoted) {
				continue;
			}
			if(key == "}" && !this.lastSymbolQuoted) {
				if(isClassOb && o.TJ_unserialize != null) {
					o.TJ_unserialize();
				}
				return o;
			}
			var seperator = this.getNextSymbol();
			if(seperator != ":") {
				throw new js__$Boot_HaxeError("Expected ':' but got '" + seperator + "' instead.");
			}
			var v = this.getNextSymbol();
			if(key == "_hxcls") {
				var cls = $hxClasses[v];
				if(cls == null) {
					throw new js__$Boot_HaxeError("Invalid class name - " + v);
				}
				o = Object.create(cls.prototype);
				this.cache.pop();
				this.cache.push(o);
				isClassOb = true;
				continue;
			}
			if(v == "{" && !this.lastSymbolQuoted) {
				val = this.doObject();
			} else if(v == "[" && !this.lastSymbolQuoted) {
				val = this.doArray();
			} else {
				val = this.convertSymbolToProperType(v);
			}
			o[key] = val;
		}
		throw new js__$Boot_HaxeError("Unexpected end of file. Expected '}'");
	}
	,doArray: function() {
		var a = [];
		var val;
		while(this.pos < this.json.length) {
			val = this.getNextSymbol();
			if(val == "," && !this.lastSymbolQuoted) {
				continue;
			} else if(val == "]" && !this.lastSymbolQuoted) {
				return a;
			} else if(val == "{" && !this.lastSymbolQuoted) {
				val = this.doObject();
			} else if(val == "[" && !this.lastSymbolQuoted) {
				val = this.doArray();
			} else {
				val = this.convertSymbolToProperType(val);
			}
			a.push(val);
		}
		throw new js__$Boot_HaxeError("Unexpected end of file. Expected ']'");
	}
	,convertSymbolToProperType: function(symbol) {
		if(this.lastSymbolQuoted) {
			if(StringTools.startsWith(symbol,tjson_TJSON.OBJECT_REFERENCE_PREFIX)) {
				var idx = Std.parseInt(HxOverrides.substr(symbol,tjson_TJSON.OBJECT_REFERENCE_PREFIX.length,null));
				return this.cache[idx];
			}
			return symbol;
		}
		if(this.looksLikeFloat(symbol)) {
			return parseFloat(symbol);
		}
		if(this.looksLikeInt(symbol)) {
			return Std.parseInt(symbol);
		}
		if(symbol.toLowerCase() == "true") {
			return true;
		}
		if(symbol.toLowerCase() == "false") {
			return false;
		}
		if(symbol.toLowerCase() == "null") {
			return null;
		}
		return symbol;
	}
	,looksLikeFloat: function(s) {
		if(!this.floatRegex.match(s)) {
			if(this.intRegex.match(s)) {
				var intStr = this.intRegex.matched(0);
				if(HxOverrides.cca(intStr,0) == 45) {
					return intStr > "-2147483648";
				} else {
					return intStr > "2147483647";
				}
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,looksLikeInt: function(s) {
		return this.intRegex.match(s);
	}
	,getNextSymbol: function() {
		this.lastSymbolQuoted = false;
		var c = "";
		var inQuote = false;
		var quoteType = "";
		var symbol = "";
		var inEscape = false;
		var inSymbol = false;
		var inLineComment = false;
		var inBlockComment = false;
		while(this.pos < this.json.length) {
			c = this.json.charAt(this.pos++);
			if(c == "\n" && !inSymbol) {
				this.currentLine++;
			}
			if(inLineComment) {
				if(c == "\n" || c == "\r") {
					inLineComment = false;
					this.pos++;
				}
				continue;
			}
			if(inBlockComment) {
				if(c == "*" && this.json.charAt(this.pos) == "/") {
					inBlockComment = false;
					this.pos++;
				}
				continue;
			}
			if(inQuote) {
				if(inEscape) {
					inEscape = false;
					if(c == "'" || c == "\"") {
						symbol += c;
						continue;
					}
					if(c == "t") {
						symbol += "\t";
						continue;
					}
					if(c == "n") {
						symbol += "\n";
						continue;
					}
					if(c == "\\") {
						symbol += "\\";
						continue;
					}
					if(c == "r") {
						symbol += "\r";
						continue;
					}
					if(c == "/") {
						symbol += "/";
						continue;
					}
					if(c == "u") {
						var hexValue = 0;
						var _g = 0;
						while(_g < 4) {
							var i = _g++;
							if(this.pos >= this.json.length) {
								throw new js__$Boot_HaxeError("Unfinished UTF8 character");
							}
							var nc = HxOverrides.cca(this.json,this.pos++);
							hexValue <<= 4;
							if(nc >= 48 && nc <= 57) {
								hexValue += nc - 48;
							} else if(nc >= 65 && nc <= 70) {
								hexValue += 10 + nc - 65;
							} else if(nc >= 97 && nc <= 102) {
								hexValue += 10 + nc - 95;
							} else {
								throw new js__$Boot_HaxeError("Not a hex digit");
							}
						}
						var utf = new haxe_Utf8();
						utf.__b += String.fromCodePoint(hexValue);
						symbol += utf.__b;
						continue;
					}
					throw new js__$Boot_HaxeError("Invalid escape sequence '\\" + c + "'");
				} else {
					if(c == "\\") {
						inEscape = true;
						continue;
					}
					if(c == quoteType) {
						return symbol;
					}
					symbol += c;
					continue;
				}
			} else if(c == "/") {
				var c2 = this.json.charAt(this.pos);
				if(c2 == "/") {
					inLineComment = true;
					this.pos++;
					continue;
				} else if(c2 == "*") {
					inBlockComment = true;
					this.pos++;
					continue;
				}
			}
			if(inSymbol) {
				if(c == " " || c == "\n" || c == "\r" || c == "\t" || c == "," || c == ":" || c == "}" || c == "]") {
					this.pos--;
					return symbol;
				} else {
					symbol += c;
					continue;
				}
			} else {
				if(c == " " || c == "\t" || c == "\n" || c == "\r") {
					continue;
				}
				if(c == "{" || c == "}" || c == "[" || c == "]" || c == "," || c == ":") {
					return c;
				}
				if(c == "'" || c == "\"") {
					inQuote = true;
					quoteType = c;
					this.lastSymbolQuoted = true;
					continue;
				} else {
					inSymbol = true;
					symbol = c;
					continue;
				}
			}
		}
		if(inQuote) {
			throw new js__$Boot_HaxeError("Unexpected end of data. Expected ( " + quoteType + " )");
		}
		return symbol;
	}
	,defaultStringProcessor: function(str) {
		return str;
	}
	,__class__: tjson_TJSONParser
};
var tjson_TJSONEncoder = function(useCache) {
	if(useCache == null) {
		useCache = true;
	}
	this.uCache = useCache;
	if(this.uCache) {
		this.cache = [];
	}
};
$hxClasses["tjson.TJSONEncoder"] = tjson_TJSONEncoder;
tjson_TJSONEncoder.__name__ = "tjson.TJSONEncoder";
tjson_TJSONEncoder.prototype = {
	cache: null
	,uCache: null
	,doEncode: function(obj,style) {
		if(!Reflect.isObject(obj)) {
			throw new js__$Boot_HaxeError("Provided object is not an object.");
		}
		var st;
		if(js_Boot.__implements(style,tjson_EncodeStyle)) {
			st = style;
		} else if(style == "fancy") {
			st = new tjson_FancyStyle();
		} else {
			st = new tjson_SimpleStyle();
		}
		var buffer_b = "";
		if(((obj) instanceof Array) || ((obj) instanceof haxe_ds_List)) {
			buffer_b += Std.string(this.encodeIterable(obj,st,0));
		} else if(((obj) instanceof haxe_ds_StringMap)) {
			buffer_b += Std.string(this.encodeMap(obj,st,0));
		} else {
			this.cacheEncode(obj);
			buffer_b += Std.string(this.encodeObject(obj,st,0));
		}
		return buffer_b;
	}
	,encodeObject: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginObject(depth));
		var fieldCount = 0;
		var fields;
		var dontEncodeFields = null;
		var cls = js_Boot.getClass(obj);
		if(cls != null) {
			fields = Type.getInstanceFields(cls);
		} else {
			fields = Reflect.fields(obj);
		}
		var _g = Type.typeof(obj);
		if(_g._hx_index == 6) {
			var c = _g.c;
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			buffer_b += Std.string("\"_hxcls\"" + style.keyValueSeperator(depth));
			buffer_b += Std.string(this.encodeValue(c.__name__,style,depth));
			if(obj.TJ_noEncode != null) {
				dontEncodeFields = obj.TJ_noEncode();
			}
		}
		var _g2 = 0;
		while(_g2 < fields.length) {
			var field = fields[_g2];
			++_g2;
			if(dontEncodeFields != null && dontEncodeFields.indexOf(field) >= 0) {
				continue;
			}
			var value = Reflect.field(obj,field);
			var vStr = this.encodeValue(value,style,depth);
			if(vStr != null) {
				if(fieldCount++ > 0) {
					buffer_b += Std.string(style.entrySeperator(depth));
				} else {
					buffer_b += Std.string(style.firstEntry(depth));
				}
				buffer_b += Std.string("\"" + field + "\"" + style.keyValueSeperator(depth) + vStr);
			}
		}
		buffer_b += Std.string(style.endObject(depth));
		return buffer_b;
	}
	,encodeMap: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginObject(depth));
		var fieldCount = 0;
		var field = obj.keys();
		while(field.hasNext()) {
			var field1 = field.next();
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			var value = obj.get(field1);
			buffer_b += Std.string("\"" + field1 + "\"" + style.keyValueSeperator(depth));
			buffer_b += Std.string(this.encodeValue(value,style,depth));
		}
		buffer_b += Std.string(style.endObject(depth));
		return buffer_b;
	}
	,encodeIterable: function(obj,style,depth) {
		var buffer_b = "";
		buffer_b += Std.string(style.beginArray(depth));
		var fieldCount = 0;
		var value = $getIterator(obj);
		while(value.hasNext()) {
			var value1 = value.next();
			if(fieldCount++ > 0) {
				buffer_b += Std.string(style.entrySeperator(depth));
			} else {
				buffer_b += Std.string(style.firstEntry(depth));
			}
			buffer_b += Std.string(this.encodeValue(value1,style,depth));
		}
		buffer_b += Std.string(style.endArray(depth));
		return buffer_b;
	}
	,cacheEncode: function(value) {
		if(!this.uCache) {
			return null;
		}
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var c = _g++;
			if(this.cache[c] == value) {
				return "\"" + tjson_TJSON.OBJECT_REFERENCE_PREFIX + c + "\"";
			}
		}
		this.cache.push(value);
		return null;
	}
	,encodeValue: function(value,style,depth) {
		if(typeof(value) == "number" && ((value | 0) === value) || typeof(value) == "number") {
			return value;
		} else if(((value) instanceof Array) || ((value) instanceof haxe_ds_List)) {
			var v = value;
			return this.encodeIterable(v,style,depth + 1);
		} else if(((value) instanceof haxe_ds_List)) {
			var v1 = value;
			return this.encodeIterable(v1,style,depth + 1);
		} else if(((value) instanceof haxe_ds_StringMap)) {
			return this.encodeMap(value,style,depth + 1);
		} else if(typeof(value) == "string") {
			return "\"" + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(Std.string(value),"\\","\\\\"),"\n","\\n"),"\r","\\r"),"\"","\\\"") + "\"";
		} else if(typeof(value) == "boolean") {
			return value;
		} else if(Reflect.isObject(value)) {
			var ret = this.cacheEncode(value);
			if(ret != null) {
				return ret;
			}
			return this.encodeObject(value,style,depth + 1);
		} else if(value == null) {
			return "null";
		} else {
			return null;
		}
	}
	,__class__: tjson_TJSONEncoder
};
var tjson_EncodeStyle = function() { };
$hxClasses["tjson.EncodeStyle"] = tjson_EncodeStyle;
tjson_EncodeStyle.__name__ = "tjson.EncodeStyle";
tjson_EncodeStyle.__isInterface__ = true;
tjson_EncodeStyle.prototype = {
	beginObject: null
	,endObject: null
	,beginArray: null
	,endArray: null
	,firstEntry: null
	,entrySeperator: null
	,keyValueSeperator: null
	,__class__: tjson_EncodeStyle
};
var tjson_SimpleStyle = function() {
};
$hxClasses["tjson.SimpleStyle"] = tjson_SimpleStyle;
tjson_SimpleStyle.__name__ = "tjson.SimpleStyle";
tjson_SimpleStyle.__interfaces__ = [tjson_EncodeStyle];
tjson_SimpleStyle.prototype = {
	beginObject: function(depth) {
		return "{";
	}
	,endObject: function(depth) {
		return "}";
	}
	,beginArray: function(depth) {
		return "[";
	}
	,endArray: function(depth) {
		return "]";
	}
	,firstEntry: function(depth) {
		return "";
	}
	,entrySeperator: function(depth) {
		return ",";
	}
	,keyValueSeperator: function(depth) {
		return ":";
	}
	,__class__: tjson_SimpleStyle
};
var tjson_FancyStyle = function(tab) {
	if(tab == null) {
		tab = "    ";
	}
	this.tab = tab;
	this.charTimesNCache = [""];
};
$hxClasses["tjson.FancyStyle"] = tjson_FancyStyle;
tjson_FancyStyle.__name__ = "tjson.FancyStyle";
tjson_FancyStyle.__interfaces__ = [tjson_EncodeStyle];
tjson_FancyStyle.prototype = {
	tab: null
	,beginObject: function(depth) {
		return "{\n";
	}
	,endObject: function(depth) {
		return "\n" + this.charTimesN(depth) + "}";
	}
	,beginArray: function(depth) {
		return "[\n";
	}
	,endArray: function(depth) {
		return "\n" + this.charTimesN(depth) + "]";
	}
	,firstEntry: function(depth) {
		return this.charTimesN(depth + 1) + " ";
	}
	,entrySeperator: function(depth) {
		return "\n" + this.charTimesN(depth + 1) + ",";
	}
	,keyValueSeperator: function(depth) {
		return " : ";
	}
	,charTimesNCache: null
	,charTimesN: function(n) {
		if(n < this.charTimesNCache.length) {
			return this.charTimesNCache[n];
		} else {
			var tmp = this.charTimesN(n - 1);
			return this.charTimesNCache[n] = tmp + this.tab;
		}
	}
	,__class__: tjson_FancyStyle
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAB2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHfSURBVDiNfZO9bhNBFEa/uTPjdeI4siENjSVEXoECCSQXFNSUlIjecp6CzkmBUlFTQQ1SBA2SCz8AUpoYQ2xlwdn/2Z31zg4FcuJYa3/lzD3nXs3VsPdfL6a2tLomCFJQm1lMS5ijV88efsZKPny76OYWx5zToRfpYHadmokbSvZx+PvnzEs7y0IiBkdQQsRGltl355dhWJe8F6XF0ys/208ycyONQ28iWg2BmXfbqSwt0tw0AHTdUHcv5xnitEBVUqVAzR3Zqrp0Qw030GjUJfZ2RKUgz9MWwWLiSF4JL1MlMcUCAJsQ47bfbshoE7xJkqVJZK3p0+NHB2dOjQ+3wVWSoiiGo9PXZwQAujAnbrAdviOpC3DJTwCAAEApA6XNdnIlSaqhwv/NCABqDvV2HcKeU/3aq3GvY7hejBJFDwDY8Pzv8x+/wk9jN2kCgNIlYl299yUMACZPoyIJXxJKNnAD3VwWbZpkFQYAErUmOA2ICB211nFdsg4DACMOC9uheZT7VeMuJVXwjYRLX/yJsjuHemHgxzpRejGSAgNWMv3gfrOfL8onkcr28+J2W1I6EOOrRM68ZDz3M/hJ3mbAVJvy6PvbF6vf+cub01H34N7uMREdptkiiJU2QWBr/wCzgBMSEX+xcQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs/question-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAz5JREFUeNpMVG1IU1EYfrZ7d6denVa26WItHaVlrSDLoi+WFRGpRflHWgXVjyAq+vgTEdXffkRQRH8CIdwPjSlBQRR9UTEzmgm1tpZu1XKT6bzb3If3zt5zi/LAc8+597zP877nPe97NW1tbdBoNNBqtepMmE9YCsBEMODPkAjRmZmZz4QxAgqFAtjM4//QE9ZardYN7e3tHbW1tStkWVY3eJ5HMBgc6u7u7gqFQq/pUz8hx/a4+vp65pWRd7S0tBxwOp1nB77A5H6WwN0HEh68SiEQSoMXRFPH/i3bKFLO7/czcoigcHV1dSyUja2trQccDsfBi7ej8EVKUFRWjaoqEyorK5EtiPhAnBfv4ji0t24lx3EyiYwxEV5RFFNNTc2m5uatzgu3otAbzEAmjxun5sw6nYjLd9IIRnS4dCeKS0e2OL1erz8cDvs4m83WdOzY0fNvhqaNgWgZBEGPiYkk4vE4PB/HMC7JWGwtQzCcwLdflM2pArSFJNbYzSaPp/89i8BssVgaup7+RGmpEaOjcdVn38ss0ukpbLbHYSyJIBBIoL9/EmazEYMBBev2VDcwrpYeFclkCp+GZShKAblcHtHYOH5EYqitltGxsxxfwtO4/3wKGk5AKp1XbTOZLBiXp6tiIpBlBVIqi9j4FEgH0Ohw9bhVjebK3VFwgqiu5RmebFUyGJcJJDmOxxILpTSRp0svAfc3dbvPjPypg6KKf+ksQFZtAS0TSDLvkUDgq2+5TY+klECxWE7eSlWDt52rVbA1+8agTGfQUCNgeHjEx7hM4KPL5XJvb6rEvOIU5OwkdHoy1hX988rWnI7IuSQWVGTgaJyDvj63m3E5o9GYmpgY19Ghi08fcSx78sqP0ViCTjIX955x6HwsU6h5SLEAqsQ4rp9rQG9vz32P542bCtDLBFhj/Bwc/KCl/tBePNlaX16UQzo+jCHvO0xGfVi1MIt9jvk4d3gZXK7O3p6eLjeV9COWU43dblc7S5Kk4lwut8NmW9J84sT5XY2N622zShEDA2+DN29eexgM+p/q9frHBoMho3bwLAEqnDTy+byF3puIs4gw7y+fVdcIETyCIHwXRREkoP4CfgswAD0VkVFpyDl9AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/right_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgew0KICAgIGZvbnQtbmFtZTogIkFyaWFsIjsNCiAgICBmb250LXNpemU6IDEzcHg7DQp9DQoNCi5idXR0b246bmF0aXZlIHsNCiAgICBiYWNrZ3JvdW5kOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KfQ0KDQoucHJvZ3Jlc3M6bmF0aXZlLCAuc2xpZGVyOm5hdGl2ZSB7DQogICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgY29sb3I6IG5vbmU7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoudGV4dGZpZWxkOm5hdGl2ZSB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIGNvbG9yOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoubnVtYmVyc3RlcHBlcjpuYXRpdmUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBjb2xvcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIHdpZHRoOiA3MHB4Ow0KICAgIGhlaWdodDogMjBweDsNCn0NCg0KLnRleHRhcmVhOm5hdGl2ZSB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIGNvbG9yOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgZm9udC1uYW1lOiAiQXJpYWwiOw0KICAgIGZvbnQtc2l6ZTogMTNweDsNCn0NCg0KLmNvbXBvbmVudDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBub3QtYWxsb3dlZDsNCn0"},{ name : "haxeui-core/styles/default/up_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChUfKOizO2AAAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAACNJREFUCNdjYEACAQEB/5H5jNgkNmzYwAiXRNcBU8CITQIGALSTC+IXz7eLAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/right_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBgEIxAeiMwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAOUlEQVQI12P8/////3eyqowMUMDEwMDAIPT49n8UAWRBxv///8NlUVQwMDAwvJNVZWRC5sBVINsCAJMjEmd7MjYNAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsNCiAgICBjdXJzb3I6IHBvaW50ZXI7ICAgIA0KfQ0KDQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiBibGFjazsNCn0NCg0KLmxpc3R2aWV3IC5ldmVuIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNkOWU1ZjI7DQp9DQoNCi5saXN0dmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KfQ0KDQoubGlzdHZpZXcgLm9kZDpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZTVmMjsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTdjNGUyOw0KICAgIGNvbG9yOiB3aGl0ZTsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQo"},{ name : "haxeui-core/styles/default/up_arrow.svg", data : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTYuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+CjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIKCSB3aWR0aD0iMjkyLjM2MnB4IiBoZWlnaHQ9IjI5Mi4zNjJweCIgdmlld0JveD0iMCAwIDI5Mi4zNjIgMjkyLjM2MiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMjkyLjM2MiAyOTIuMzYyOyIKCSB4bWw6c3BhY2U9InByZXNlcnZlIj4KPGc+Cgk8cGF0aCBkPSJNMjg2LjkzNSwxOTcuMjg2TDE1OS4wMjgsNjkuMzc5Yy0zLjYxMy0zLjYxNy03Ljg5NS01LjQyNC0xMi44NDctNS40MjRzLTkuMjMzLDEuODA3LTEyLjg1LDUuNDI0TDUuNDI0LDE5Ny4yODYKCQlDMS44MDcsMjAwLjksMCwyMDUuMTg0LDAsMjEwLjEzMnMxLjgwNyw5LjIzMyw1LjQyNCwxMi44NDdjMy42MjEsMy42MTcsNy45MDIsNS40MjgsMTIuODUsNS40MjhoMjU1LjgxMwoJCWM0Ljk0OSwwLDkuMjMzLTEuODExLDEyLjg0OC01LjQyOGMzLjYxMy0zLjYxMyw1LjQyNy03Ljg5OCw1LjQyNy0xMi44NDdTMjkwLjU0OCwyMDAuOSwyODYuOTM1LDE5Ny4yODZ6Ii8+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KfQ0KDQoucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5ob3Jpem9udGFsLXJhbmdlIHsNCiAgICBiYWNrZ3JvdW5kOiAjRjFGMUYxICNGRkZGRkYgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9ICAgIA0KDQouaG9yaXpvbnRhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSB2ZXJ0aWNhbDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogI0YxRjFGMSAjRkZGRkZGIGhvcml6b250YWw7DQogICAgaW5pdGlhbC13aWR0aDogMjBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSBob3Jpem9udGFsOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0K"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouc2Nyb2xsdmlldyAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDVweDsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNT0JJTEUgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldzptb2JpbGUgew0KICAgIG1vZGU6IG1vYmlsZTsNCn0NCg"},{ name : "haxeui-core/styles/default/dialogs/cross-circle.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA61pVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wUmlnaHRzPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvcmlnaHRzLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcFJpZ2h0czpNYXJrZWQ9IkZhbHNlIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QzgzMTgzMzI4NDM0MTFFMDkyMTU5REUxMDUzQTBFMjciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QzgzMTgzMzE4NDM0MTFFMDkyMTU5REUxMDUzQTBFMjciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTI1NDYxQUQyRjg0RTAxMTg1RkJBOTI1NDUxRDI5NkIiIHN0UmVmOmRvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5un3+3AAAICklEQVR42sRXW0xc1xXd834DNWaYGRjGqjEYk8FAoAETsAdccFTLdYRSUeI4UaRYSqX8VPnpRypV/ozUr/5UStREdu3KGGMh27FDx8HY1FR2Yg9jwNhQUx7m/Z47wzCvrn2ZiwYCtOlPjrQ4l7nn7LXO3vvsc64sFovRj9mU/OfkyZPrP8hkMhFyuXz9/3ivRZcJZAG7AYM0Hy0MCMAMMAyMYmEr/EJaYDQaFZ8TF3z16tV1Azs1I3BQq9XmOZ3OvINodrt9j16v361UKo0iezjsEwRhZmRkZKi7u9vj9Xr7AoFAH155AN9OxmWsaBsP8NKdJpOprLq6urKsrKxGrVZbQUbbhY3nKRQKWl1dHe/q6nLfvn37rs/n68IrLzwQ+yEe0GBgVV5eXlVjY+M7WL2DiX0vXlDg229p5ckTCo+PU2RhQRysSEkhpdVK2ldeId2rr5LKZrNWVFScKi4urrx48eK5p0+fpmNYBxD8XzygAX5eV1d34ujRo42hUMgQAtlSczNFvF7anZxMaWlpZDAYSKPRiHNWVlYIK6WZmRmaXVwkRUEBJdXXkwqi4EnB7XZfaGtrawVXGxDcyQPs9sO1tbUnampqTiOOGv/dDhKaLlPmrl1kLyoSkykYDJLf7xdJJderVCpyOBy0B89jY2M0dvYsGd96i/RVlYbqatfpSCRCELKK4W2cmxt2ARuNGyrYv39/lcvlahQEn0a4foNCN25QYX6+GNvZ2dn1sVs1FsRiUlNTKRme6jt/nsIIk/H4LzQu15HG4eF/T/X3P5uEFzzSHHnCFjHBrYcaGhpO+f2CQbhzh4LXr1Mh3AlP0OTkpLhqdvdO4DHT09Nin5udTYHWVmJbSExDfX39KeyeQ8wlLUQuKcGPRVh5JRbgWIELfZeb6UBuLs1h1bxyNr4PefDfBOS2tIj9AlY+Pz9PWZmZtHSpiULjExwmB5Kzkrk2ewCJrs0vKSlxibGFEYvJRCtYOScWG3TCG9y43468AOHiVnjzppgni0hItpGsVNIybCKhqbi4yIXkzWfOdQFQlJWfn58XjUYsoZdjFO5GtiOOL1++FA2Vut0bYs3/8++J2DymrL2d3S56Qa/TUfDRI4pOTHAuWXJycvKYM9EDP4UApxjjRx5KxhbjiRx7NnIZsdzcmJDHsMiMc+docHCQBgYGxH5oaIj+kp5OEyCcnpqiGeSEiovAY49oLydnn5M513cB1JitVouDt8pqby+ZjEbRuJQoKSg0TXv30i/7+mhubk58xy7PunBB3B38zGcHPzO+KS0lNbZlFMUrBBsLGG9ASAMoYMZqF5nN6Q7mTPSAUaPRpnJRCk0iWRAzjpfUIjAkh6HzFguh3n+PUHrG2UDflJSQBv+zYTnsMVhIDFhFQeNtqtNpU5kzUYAaLwxcpsOLSySHMen08nM2Y1cEkVCcNb11dduS30EZ1vF5wOU5Ti5jwLMEhGBLJoM4ucLAnImFiEuyjNUxMdf9CGIlIH5hJJhoMO4NjuVW5Nwb1uIpQgY7snhpZbsxeDSKcXEOGSPRA2G43CeqS0oiAUqDKDwykKvipBLyOjq2JGe83tMjrkgFAUpAARESohAgR3VkfaFQ2MeciQIEn0+YYwEKczoJKDwaru+byLN3IJd+q+zvF8lVcShBzuAEV9tsogBB8M8xZ6KAqeHh4REWoHc6yQf363HScZAkOLYgf1BcTF0HD67/xj3j0PPnawJALIFPIWNBIbhinMgjzJko4F8ej6dPpVKTseQ1WuLJ2EaczUxu3YL8O5DzPmL848CBdXKplUCEGnYYnJBBLMhY+jMxCXt7e/uYM1HAC9yknmF7TalsGWR4rZzmETOdWi26frCqagO5B+SWhNDw8719+zYUqg7UDVU8H3yYk1TxOsnNFnb/VG9vzzPmTBQQQBXsvnu3o1MuV5L17dM0g2oYBqEGk20Y86y8XCT3gty2KTcY/Ns9kFK8t8XJI8ilJdwlMk69hzyIUWfnvc5AwN/NnIlnAeOfbW23unCKjSrTM8j+wYf0nN9BhBqrt3MNALl9C3IJ/O4+yKUx2Nj0QqulPb/5iCjVzFV0tL39713MJd0NRQGcocDS8vJS++ef/7kFz/5dNW+Q5f0z9BgJtAJDaj6ndyCXII3hO3m3QkkZZz6klCO1OLBC/i+++KxleXm5nbmYc8OFJI4HT5542i9d+mtrOBxZtTecpuzf/Z4e6vU0gAmxeOXaCTxmELa+MyVRzid/oIxfvcPkq01NF1p7errbmUPio4QPi/V7CQrSV1euXDKgWCjefffMccuxk7rUolLq/tMf6eu2W2QJhygTYUlGWHTxj5YA3LkIg6MQOaFUkaX2DTr80W9JkWbjm1Hgyy8/u3bt2pUbyKGvcBeIfe9WXIBrl9T4bMdu0KEcnygoKKr5+ONPjmdmZlmVSgUFRodo2H2LRu/dofnBAfJPi1uZ9Glm+snebLJXHqasmmOkzXCgnEdodHR4/NNPz17zeh+5Qd6KS09Auklzw0fMtgIYXK8rjEbTsTffbCipr/91idlsSeVFKxRyEWvfLiQWl7UzZO3DY2pqYra5+eLDlpa/PfT5lm9iC3eCPAbQDxEgJWcKcESn05eWl1dlV1XVZDudhelpaekpuMTqeA4+ywLT05MLXu/jyY4O98D9+x0D2GoPUDfagQWuH0z+/woQ7wYYx0doLvoDGJYBJPMXlDQNWATGcNr1YsX96AWuptJZsaOAH7P9R4ABAJnpEv/4dkWKAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4yLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMzAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgcGFkZGluZzogMXB4Ow0KfQ0KDQouZGlhbG9nLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLmRpYWxvZy10aXRsZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNBQkFCQUI7DQp9DQoNCi5kaWFsb2ctdGl0bGUtbGFiZWwgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY29sb3I6ICM4ODg4ODg7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KfQ0KDQouZGlhbG9nLWNvbnRlbnQgew0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLmRpYWxvZy1mb290ZXItY29udGFpbmVyIHsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogI0FCQUJBQjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KfQ0KDQouZGlhbG9nLWNsb3NlLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9zbWFsbC1jbG9zZS1idXR0b24ucG5nIjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQogICAgY3Vyc29yOiAicG9pbnRlciI7DQp9DQo"},{ name : "haxeui-core/styles/default/left_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBQEeMpWpOwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAKElEQVQI12NgQAIBAQH/GZE5DAwMDIzIHAYGBgZGZA52FehmMKDbAgAUiA2PlOfODgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/buttons.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQlVUVE9OUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5idXR0b24gew0KICAgIGJhY2tncm91bmQ6ICNFREVERUQgI0U2RTZFNiB2ZXJ0aWNhbDsNCiAgICBjb2xvcjogIzIyMjIyMjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBwYWRkaW5nOiA1cHggNXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgc3BhY2luZzogNXB4IDVweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCi5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICNGNUY1RjUgI0YxRjFGMSB2ZXJ0aWNhbDsNCiAgICBjb2xvcjogIzAwMDAwMDsNCn0NCg0KLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kOiAjRDJEMkQyICNDMkMyQzIgdmVydGljYWw7DQogICAgY29sb3I6ICMwMDAwMDA7DQogICAgYm9yZGVyLWNvbG9yOiAjN0Y3RjdGOw0KfQ0KDQouYnV0dG9uOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAycHggc29saWQgIzc3QzZGRjsNCn0NCg0KLmJ1dHRvbi5lbXBoYXNpemVkIHsNCiAgICBiYWNrZ3JvdW5kOiAjREFFNEVFICNENERFRTggdmVydGljYWw7DQogICAgYm9yZGVyLWNvbG9yOiAjNkNBMUQ3Ow0KfQ0KDQouYnV0dG9uLmVtcGhhc2l6ZWQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICNFMkVDRjYgI0RFRThGMiB2ZXJ0aWNhbDsNCiAgICBib3JkZXItY29sb3I6ICM2Q0ExRDc7DQp9DQoNCi5idXR0b24uZW1waGFzaXplZDpkb3duIHsNCiAgICBiYWNrZ3JvdW5kOiAjQzJDQ0Q2ICNCNEJFQzggdmVydGljYWw7DQogICAgYm9yZGVyLWNvbG9yOiAjNTY4Q0MxOw0KfQ0KDQouYnV0dG9uOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kOiAjRDRENEQ0ICNDQ0NDQ0MgdmVydGljYWw7DQogICAgY29sb3I6ICM5MDkwOTA7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0K"},{ name : "haxeui-core/styles/default/down_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChUgEnZhyO4AAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAAClJREFUCNdjDAgI+M+AAzAyMDAwYFOwYcMGRkYYB1nBhg0bGDGMQTcBALTqC+LBRYBOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs/exclamation-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgdJREFUeNqkk8tu00AUho9nfKnDJU5j5NoJkTB20+JU3ZR1F+xaKhZIkRCSAYkdL9CqEgtW9B14BVa8AiyQQCELJCRUFUgXMZAKqOPY8WWYsZISaFohdaTPnjnz/2c84zMcIQTO0rg3L7iT5oqUZ6P+Q8rPaSJ0SvKmbt2zdcu1Wf8kEcoygH+hu7qMhdKaVru5qNXWF7GgrLHYNO3UBBTXsN0GCT+JJPwsGtbdBov9VwK60rJ0rrZaKjfM7Z2vsL3zDZTyNVMqVFfZ3LEEKX1MwMYPKtYdJ/I/oiAIgDHs7yH9yi2HzY00Rx6UpTTTCJLBjQuKsyLLRSONf4Hv+zlp7EOhoBjnL1orTDPp4dP06EBlDnGucXXdiYMvMExDaLVa4Hke7D9ahozsAj9bd9Lerksy8pLqB/lfiBMABv2c2+W560sIRUpv0AGvvwftdhu63S6kQghEjADESJGK1SWmHfsQK0SKCpzYVKuN+d7hW4izHgg4gu/ekxwRD3Mw50NR1+YJ4CbzMC9K6BboNu6rlfpCnH2QeeSDhMMcVXucMx4zZCmRS3OXFpiHeVGSgIUFaUOrzJgC/IAZutKYcZuMMfSqYiKe32BePgjIlllXbREfYkLYif65XMHBZv7uHzz/u34xYKM2a79/523xwQCi16/2OzTcOV7pT0+/iRxE3Fmv828BBgCYsyym9ECFNgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCQkFSIChUT1ApDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmJhciB7DQogICAgaG9yaXpvbnRhbC1zcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI0FCQUJBQjsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhciAudGFiYmFyLWNvbnRlbnRzIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNBQkFCQUI7DQp9DQoNCi50YWJiYXItYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgYmFja2dyb3VuZDogI0VERURFRCAjRTZFNkU2IHZlcnRpY2FsOw0KICAgIHBhZGRpbmc6IDZweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZDogI0Y1RjVGNSAjRjFGMUYxIHZlcnRpY2FsOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjpkb3duIHsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCg0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHdoaXRlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfQ0KDQoNCi50YWJiYXItc2Nyb2xsLWxlZnQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93LnBuZyI7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLnRhYmJhci1zY3JvbGwtcmlnaHQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciOw0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbCB7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5pY29uIHsNCn0NCg0KLnRhYmJhci1idXR0b24gLnRhYi1jbG9zZS1idXR0b24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdGlueS1jbG9zZS1idXR0b24ucG5nIjsNCn0NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkJBUiAoQk9UVE9NKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJiYXI6Ym90dG9tIHsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDVweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogI0FCQUJBQjsNCiAgICBjbGlwOiB0cnVlOw0KfQ0KDQoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWNvbnRlbnRzIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4Ow0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAjQUJBQkFCOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjpib3R0b20gew0KICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmJvdHRvbSB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KDQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogd2hpdGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGFidmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLnRhYnZpZXcgLnRhYnZpZXctdGFicyB7DQp9DQoNCi50YWJ2aWV3IC50YWJ2aWV3LWNvbnRlbnQgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0K"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTTElERVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ob3Jpem9udGFsLXNsaWRlciB7CiAgICBwYWRkaW5nLWxlZnQ6IDVweDsKICAgIHBhZGRpbmctcmlnaHQ6IDVweDsKICAgIHBhZGRpbmctdG9wOiAxcHg7CiAgICBwYWRkaW5nLWJvdHRvbTogMXB4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7Cn0KCi5ob3Jpem9udGFsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiA4cHg7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgouaG9yaXpvbnRhbC1zbGlkZXIgLmJ1dHRvbiB7CiAgICB3aWR0aDogMTRweDsKICAgIGhlaWdodDogMTRweDsKICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4yLCAwLCAwLCAwLCAzLCBmYWxzZSk7Cn0KICAgIAoudmVydGljYWwtc2xpZGVyIHsKICAgIHBhZGRpbmctdG9wOiA1cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4OwogICAgcGFkZGluZy1sZWZ0OiAxcHg7CiAgICBwYWRkaW5nLXJpZ2h0OiAxcHg7CiAgICB3aWR0aDogYXV0bzsKICAgIGluaXRpYWwtaGVpZ2h0OiAxNTBweDsKfQoKLnZlcnRpY2FsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiA4cHg7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi52ZXJ0aWNhbC1zbGlkZXIgLmJ1dHRvbiB7CiAgICB3aWR0aDogMTRweDsKICAgIGhlaWdodDogMTRweDsKICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDAsIDAsIDAsIDMsIGZhbHNlKTsKfQoK"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBEUk9QRE9XTlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC91cF9kb3duX2Fycm93cy5wbmciOwogICAgaWNvbi1wb3NpdGlvbjogZmFyLXJpZ2h0OwogICAgdGV4dC1hbGlnbjogbGVmdDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNT0JJTEUgVkFSSUFOVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duOm1vYmlsZSB7CiAgICBtb2RlOiBtb2JpbGU7Cn0KCi5kcm9wZG93bi1wb3B1cDptb2JpbGUgewogICAgd2lkdGg6IDc1JTsKfQo"},{ name : "haxeui-core/styles/default/small-close-button.png", data : ""},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI2FiYWJhYjsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Ow0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi5hY2NvcmRpb24tYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogMHB4IHNvbGlkICNhYmFiYWI7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQogICAgaWNvbi1wb3NpdGlvbjogbGVmdDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWNvbG9yOiAjYWJhYmFiOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgY2xpcDogdHJ1ZTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBib3JkZXItY29sb3I6ICNhYmFiYWI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIG9wYWNpdHk6IDE7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6ZXhwYW5kZWQgew0KICAgIGFuaW1hdGlvbjogYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmFjY29yZGlvbi1wYWdlOmNvbGxhcHNlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2UgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCkBrZXlmcmFtZXMgYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2Ugew0KICAgIDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICAgICAgaGVpZ2h0OiAwJTsNCiAgICB9DQp9DQoNCi5hY2NvcmRpb24tcGFnZSAuc2Nyb2xsdmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHBhZGRpbmctdG9wOiAwOw0KICAgIHBhZGRpbmctcmlnaHQ6IDA7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KfQ0K"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi5oZWFkZXIgLnNvcnRhYmxlIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfZG93bl9hcnJvd3MucG5nIjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIExJU1RWSUVXDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmxldmlldyB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItcmFkaXVzOiAxcHg7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXIgLml0ZW1yZW5kZXJlciB7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLnRhYmxldmlldyAuZXZlbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZTVmMjsNCn0NCg0KLnRhYmxldmlldyAub2RkOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDllNWYyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiBibGFjazsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNhN2M0ZTI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCAubGFiZWwgew0KICAgIGNvbG9yOiB3aGl0ZTsNCn0NCg"},{ name : "haxeui-core/styles/default/tiny-close-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAIAAABLbSncAAAABnRSTlMA7QAcACSX3bo6AAAAl0lEQVQImWMsLq3Q0FAPqm9lgIF1jdU3btxkMjQ0OHL02LrGarjokaPHDA0NGN/KqKxtqDp67LiNtRUDA8ORo8esrSyDG9oY38qoMDAwQOQYGBggogwMDEwQExgZGRkYGP7//w9hQCUg5lpbWdpYW8HtY1yybMXuPXvhJkDMdHVxZlZQUjYyNICIMjAwaB04/CU26vKVKwAHbkFIJjY1pAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIHByb2dyZXNzSW5kZXRlcm1pbmF0ZSB7DQogICAgMCUgew0KICAgICAgICByYW5nZVN0YXJ0OiAwOw0KICAgICAgICByYW5nZUVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHJhbmdlU3RhcnQ6IDc1Ow0KICAgICAgICByYW5nZUVuZDogMTAwOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcmFuZ2VTdGFydDogMDsNCiAgICAgICAgcmFuZ2VFbmQ6IDI1Ow0KICAgIH0NCn0NCg0KLnByb2dyZXNzOmluZGV0ZXJtaW5hdGUgew0KICAgIGFuaW1hdGlvbjogcHJvZ3Jlc3NJbmRldGVybWluYXRlIDFzIGVhc2UgMHMgaW5maW5pdGU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEhQUk9HUkVTUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ocHJvZ3Jlc3Mgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBiYWNrZ3JvdW5kOiAjRjFGMUYxICNGRkZGRkYgdmVydGljYWw7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4yLCAyLCAyLCAxLCAzLCB0cnVlKTsNCn0NCg0KLmhwcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kOiAjNkNBQURCICMyMTZBQUUgdmVydGljYWw7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg0KLmhwcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNCRkJGQkYgIzhDOEM4QyB2ZXJ0aWNhbDsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVlBST0dSRVNTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnZwcm9ncmVzcyB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBwYWRkaW5nOiAycHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGJhY2tncm91bmQ6ICNGMUYxRjEgI0ZGRkZGRiBob3Jpem9udGFsOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICM4ODg4ODgsIDAuMiwgMiwgMSwgMSwgMywgdHJ1ZSk7DQp9DQoNCi52cHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZDogIzZDQUFEQiAjMjE2QUFFIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQoudnByb2dyZXNzIC5wcm9ncmVzcy12YWx1ZTpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZDogI0JGQkZCRiAjOEM4QzhDIGhvcml6b250YWw7DQp9DQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBQUk9HUkVTUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCkBrZXlmcmFtZXMgaW5kZXRlcm1pbmF0ZSB7DQogICAgMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQogICAgNTAlIHsNCiAgICAgICAgc3RhcnQ6IDc1Ow0KICAgICAgICBlbmQ6IDEwMDsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIHN0YXJ0OiAwOw0KICAgICAgICBlbmQ6IDI1Ow0KICAgIH0NCn0NCg0KLnByb2dyZXNzOmluZGV0ZXJtaW5hdGUgew0KICAgIGFuaW1hdGlvbjogaW5kZXRlcm1pbmF0ZSAxcyBlYXNlIDBzIGluZmluaXRlOw0KfQ0KDQoucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5ob3Jpem9udGFsLXByb2dyZXNzIHsNCiAgICBiYWNrZ3JvdW5kOiAjRjFGMUYxICNGRkZGRkYgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXByb2dyZXNzIC5wcm9ncmVzcy12YWx1ZSB7DQogICAgYmFja2dyb3VuZDogIzZDQUFEQiAjMjE2QUFFIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLnZlcnRpY2FsLXByb2dyZXNzIHsNCiAgICBiYWNrZ3JvdW5kOiAjRjFGMUYxICNGRkZGRkYgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiAyMHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAxNTBweDsNCn0NCg0KLnZlcnRpY2FsLXByb2dyZXNzIC5wcm9ncmVzcy12YWx1ZSB7DQogICAgYmFja2dyb3VuZDogIzZDQUFEQiAjMjE2QUFFIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCg"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgY29sb3I6ICM0NDQ0NDQ7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogNXB4IDVweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDEsIDEsIDEsIDMsIHRydWUpOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgaWNvbi1wb3NpdGlvbjogcmlnaHQ7DQp9DQoNCi50ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQoudGV4dGZpZWxkOmVtcHR5IHsNCiAgICBjb2xvcjogI0EwQTBBMDsNCn0NCg0KLnRleHRmaWVsZDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICM5MDkwOTA7DQogICAgYmFja2dyb3VuZDogI0Q0RDRENCAjQ0NDQ0NDIHZlcnRpY2FsOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBURVhUIEFSRUENCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGV4dGFyZWEgew0KICAgIGNvbG9yOiAjNDQ0NDQ0Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDEsIDEsIDEsIDMsIHRydWUpOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAxMDBweDsNCn0NCg0KLnRleHRhcmVhOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzIxNkFBRTsNCn0NCg0KLnRleHRhcmVhOmVtcHR5IHsNCiAgICBjb2xvcjogI0EwQTBBMDsNCn0NCg"},{ name : "haxeui-core/styles/default/steppers.css", data : "Lm51bWJlcnN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouc3RlcHBlciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uIHsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgcGFkZGluZy10b3A6IDRweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNFNkU2RTY7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGMUYxOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0MyQzJDMjsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQzsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3cucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93LnBuZyI7DQp9DQoNCi5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItdGV4dGZpZWxkLCAuc3RlcHBlci10ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcGFkZGluZzogNHB4Ow0KICAgIHBhZGRpbmctdG9wOiA1cHg7DQogICAgcGFkZGluZy1ib3R0b206IDNweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICM4ODg4ODgsIDAuMiwgMSwgMSwgMSwgMywgdHJ1ZSk7DQp9DQoNCi5zdGVwcGVyLXN0ZXAgew0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLnN0ZXBwZXItc3RlcCAuc3RlcHBlci1pbmMsIC5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItZGVpbmMgew0KICAgIGhlaWdodDogNTAlOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgew0KICAgIGluaXRpYWwtd2lkdGg6IDYwcHg7DQp9"},{ name : "haxeui-core/styles/default/up_down_arrows.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAYAAAD+WDajAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AgUERIPwDSeLgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAjElEQVQY012PMQ4BYRBG3/vXJag4E0KsZGuF1e1dCBtRbETiPEpHGYV/BZN8zbzJmxkfwzEBCJzKWWy6uwUyEBK5jqtpAOzX8+h7KSFtOQuVPvtqEQI2TRMRgZqn0yc+R5PegkgBFEoCBodq+dnxrVZJ28vNH1UGdduZCqA+X/0Hvq99/1O3nSq7DFReYz8i0UirE+EAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/dialogs/cross-circle-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAxtJREFUeNpUVF9IU2EU/213c+XmyjJtDV1NmytTK6YhaaJWlKBCYUW4nqKHqKfwVane8lUEoRcRHOVSh5GZBDaM0FaxCtS1uznMf6iIW7o/XbVzbkL2we9+373n/H7nO98531XU1dVBoVBAqVTKM+EA4RiADIIef0eYsLC1tTVOWCRgc3MTPKvwb2gIxSaT6Wx9ff1Ns9mcL0mSbFCpVBBF8Vt3d3dXKBR6T5/GCHG2CVarlaMy+WJNTU2D3W5/IHm9GfPPn2OurQ1LPT2IiCJ0Wm1G5fVr52mngs/nY3KIsCHk5ubyVkpra2sbKioqbgWbm6EeGYGJopoMBhjT0qALh7HqdmPe8wn59oZCQRAkEllkEeXGxkZGVlZWWVVVpV1sbsJBcj45MIC1tTUsLS3JWF9fx6nBQaQtL2Pq0SOUl5fbjUZjGXNZIO/q1Ss3fg4NQT8zC4vTKed95NkzrKysyOA1j+MuFzTBKSy+G0Z19eUbzGWBQ5mZmXnh0THodDo4c3Jk51gsBmNnJ1Lb2+H3+xEIBPB03z5EVlcR+eiBwWDIYy4L7I1EfiHq9UL6/RspWi06KO/x8XEsLCzIQlxet80mlylGAuwbjcbAXBWVikUgUV2jZFyfnYWO1nRQUKvVSEpKkpGyXWshkUCM7DKHuEp6RARBBXXeCcQo32QyHB0e/o/MfXBuchI6FiAy+wJKFohw9NkfP/wTOlsxVmi7hh3k70VF+FxYKAswiqkforSz5NNFCAanJpjLAl8dDkdvWmk54icK4L1wQSb7iHyY4jA81Cs8Xlos2KRAqSWlcLl6e5nLKcwFAn53X1/PC+vjFihsZ/CaDmwPt/A2eN1lNkNRXALLwyfo73e9CAYDbuYK6enpfDFmvN4vSkpPeamxyborx4KQoManmWn4VGpIlZdgvn0Xljv34XB09DmdXb3U0gOkKykKCgrkmxUOh3fH4/GL2dmWqnv3GqtttpLsHRcNHs8HsbW15ZUo+t5qNJo3er0+Kt/gHQJy+yYSiUx6P7Od/v5t/jJhigijdD7TWuoVEpB/AX8EGAD9/4gGGMr1dAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/up_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wkMBhUMUvQPHgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAK0lEQVQI12N8K6PCAANCj2//fyerygjjMyFLINNwSWQBZD7j////USSQAQAKMRRsCchObQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/haxeui.png", data : ""},{ name : "haxeui-core/styles/default/dialogs/information-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyNJREFUeNpMlF9sS1Ecx7+997Zdd2uKamdLO7ZERxkPiz9BlhoSS7ZhFiKKxBMRkeCJePJG4kWIF4kH68MmnQgSIYIgYwkjYVrNNP5tlW7dbau9dXvr9zsTnOTbc+455/M95/x+59TS3d0Ni8UCSZJETZpPWgLAS6rBTNFIE5VK5T3pBwmmaYJrBf+KnbSqoaFhXW9v757GxsblhmGIAUVRkEgk3vb39/clk8mn1PWCpPOY3NzczKsyvKWzs3NvOBw+PvwB3ujDDK7e0nDrSQ7xZB6KTfXu2dm2iXYqx2IxhpOkshwIBHgr67u6uvaGQqF9py9PYPRbNapmLUBtrRdutxtFU8UrYh69TGP/9sAKWZYNMvnBJlK5XPb6/f4N7e0bw6cuTUCu9sLlcmFs7DvOHVJx/rCKZHJc9JlWN85cSaOtrS1cX1+/gVk2CPb07Nh9+3EKxcosCg4wPp5GsVj8Gxxup1KTYkzTHbg/NIWOjq27mVXop87n8wX7HnyF0+kRMBfqR2BrlGpTBJG/udTVeTASL2PNtgVBZtnAlc3m8G7MwMJGE7peQmY6h/zPPCJn/SK1u059gUW2CYNcvkRzKygUimzqUihVfAwYRhlajrY6+RO0KCySXcAOhwOSXEUGMxk3KgrNFTCYZYOsTIOLfRTSTImSXg2ZJpqGLmCn0wnJSiaKXRiYMMRcQGKDLK/+LR7/OLqsyY6sloFDnQ3ZRpAyA6uqKtrcxyr/KiC4yEZZ+jTKLBu8iUQi0c2r3ZjnyMEoTsNqp8nWKgHzMbgtWwnWs6h3FRBqnYObN6NRZmWPx5Obmpq00qkdxw6Glt5/EsN4KkMnmYvrDxVcu2fQVkvQUnHUqmlcOBHE4ODAjaGhZ1G6gK/ZgB/G15GRVxLlWTp9tKt5dpWOfHoMb1+/xPTEKFb6i+gJzceJA0sRiVwbHBjoi9KVvssxtbS0tIiXpWmaQ9f1LU1Ni9uPHDnZ0dq6tum/h4bh4eeJixfP3UkkYg/sdvu9mpqagnjB/xkgn8+jVCr56Hs1MQtJ8/7wfLs+ETBks9k+c2zIQPwF/BZgAGlYhQuEH1lJAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/down_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs/information.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACElJREFUeNrEV2tMW+cZfs/xsX1sYzAX2xAubnMBPAopjFYkKCxcgjali9KhaAljQf2zP5MmbevP7de0P6s0aZo0qVKrpZo6ulS5LKJNO0rESCgkadJxMxAlyzBmgLn5dnx8O8d738/Ys4Fk6v70SA/n8N2e53tv32cumUzC1/kI9Ofs2bOZBo7jGHiez/y/8xbxVYGoQpQgTOn5+CQQEmID4UZ4cGMR6khvUFVV9p294evXr2cWeN6ThzgqiqKzvr7eeRSfysrKF4xGY4kgCHmMPZEISZK0sbS09K+pqanJ6enpOVmW57BrEhF63uIcKXqGBWjr9WazuaWjo+NES0tLp06nK0MyeJbbaJ5Go4FYLLYyMTExfOvWrduhUGgCu6bRAsmvYgE9DmxzOp1tvb29P8TdO4jYvSLD1JMEzC8q4N1WISClFss3cWAr5KHWoYGGQwLYi/iy1tbWvqamphMDAwN/mp+ft+OwUUR03xjYTY441d3dfaarq6s3Ho+bPGsyfPR5HOYWOSgoLICSEgtUl4kgijo2QZajEArJML4QgE/v+sHpSMLp41oUJTj6+/t/Ojw8bB8aGqJ1h3aL2C2AzP4tIu/s7LyIftTfdSVg8HMViqw2eLnJhuZVkCwKCwvLGFgpC5C3bLZiOHDAClVVdlheXoff/mUDvntcAy11GlNHR/tFRVEAhcR2RCRzBFCE7viwoba2tq29vb1XkkL64QcqDD/koO6lI0Cu83i2QVFU8Pv98IPTFdD1qpHN++xeGN7/yAP5+fkYAzwUFuaDxZIHV0YXwS8pcKpZ1be3n+x1uxe9CwuP1tC9k2kBfFaKmE0m0/Hz58/3hcOSaXwmDkMPMAobjiChjLvahkgkCugSqHEIcK4zDwrNPAN9Uxv10ZjVVR8EAjIcOlQFf7uXBFoLA9PU09PTh9lznLjSm+bTSrCxEXd+AgPZsbIRZ2avrX0BvN4AbG4GaIEMHKXaPYFDbdljfL4Qm1deUQp/vZNgQavVah0YnCeIa7cFMNDFuubm5vZwOAw3JxQoKCqBcDiGi/jZzrLx2B3eI4DaKFOon96EQEBCi8RAJ5rh4/FUX1NTY7ter68jzowAVFRVV1fnVFWldHVTARdGe3FxAaysbO4hJ3w5H4A/3liFTV+cgb6pLU2eflPg+XxBMJlEmHmqwroPqE6UVldXO4kzOwgPooB62v3MUyx95jxmwmg0tm+RwIIEv7s0Cb95OxUT6TbcwE5W8IBVkgHNjmLiwPECrq1Aa10cqquP1D98+PAgDn2UtoCtrKzUQYoX3CqYzSbY3g6y4MwGkVEGLP97BaSwDAkczyEZgb6TQFVUw5BMcqBgmsZiCdxMgFXAucUEE2iz2R3EmW2BPL1eLMbUw2BJQnm+BsmUzI5p8WBQYqSpjFHhg19X5pTgC79YBl6jSR1eBDrMOJ59Y+aymrG6oTBxBoNYTJzZAnQ40US5HgipUMlrMqdXSIpCUAqnig4nIAlaTE3sqf8cT9BCip/7rxAUQZZREf5QApu0qE1jIs5sAXQocTRJxd0lEgrEEb5AhFmCJiFH5lGByyEn//M8jdEyUurlsDryO2KoQVE4tinGgXyEbAEJ9G+I4/h8k5hEK8gQCKugJDXAC5o9QZjcRU7gkJzT6CB1feBSb4aUJeJKEsxGjlXUeDwRIs5sAVIoJG2JoiHfZuFhPRgFjVaP1lD2zQJyQTY55jWLfI2g37EM7HrjrpUY2O0CEyBJ4S3izC5EXrfbvYQWAOeLOgiHJAwUAxOxH8jf2eTMAtiW7udRCInhNalvXtChW6Pw0kGRxRJeXJaIM1vAPycnJ+e0Wh00VhsgKvuBvgWduLNALjiNkENO+U5tOWPS3+gW7MQgCENjjQFoky6Xa444swU8xZvUo0gk4i0tFqCpWg9B/yae9yLbyW7wWFRyyNkNStg7jkGEeCQArziNYC3gyPxel2v2EXFmC5CxCk7dvj06Rgud6yoBVfair+NIso8IrSGHnB5q208sxYtW2YTvd1sxE5IwNnZnTJbDU8SZfRYQ7g4NfTrh8/k8tkItXDxtBe+SC82noit0zI9pCFoxh5xFs1bMGUOgguVfdcEbZ8qgyMzB1taWZ2TkswniSt8NmQAqwYhAMBgYeffdt6/hd/jkN4vgwqlC8CyMQzwqI6EOIz8FslI2ear+C5l+QjwahtUnE9D3nRJoayzAcyUevnTpnWvBYHCEuIhzz40In/szM5MVly+/b+3tfeN7506V6yxmLfx+4O+gKzgMJeW1KEQPhvxS6PrJQo4Ai70mVbYx2jeW5yHufww/66uGzleteKzLsQ8//PON2dmpEUzX+8+7EyaxIN28evWyCYuFpr//R691HztgOFpTDH8YmIWRe7NgKqyCItuLYLRU4jlvYpNiEQn8m8uw5X0K0rYb2ptL4Mc/bwGrBVMa2d97753BwcGrH6PbbmLwJvf8LmhoaMg0RKNRvEREDHien2loaOx8881fvlZRUVUmYEX0rIXh1t0luPNgGZ64/bC+lbqYWIuMcKjKAieay6GjpQLKrUZWzj0e98pbb/1qcHr6y2Ekv4FZJVP2pB/8EfNMAQSq1615eeZvv/76+eaengvNNltpMbmeLp6E1G+X1ElHbkwkUj88vN7VzStXBr64du2DL0Kh4Cdo9jEkT1JafxUB6eC0IE4aDMZXjh1rO9zW1nm4vv5lu9Vqt+Al1kBz8GeZvL6+5pue/sfa6Ojw4/Hx0ceYavexXI8gfFS2ifz/FcAuIjiOjtAafH8Dh5UjCnZ+xMDOjw0/Yhmzw4U7XsC3RLchIv+fAr7O5z8CDAAlrruaC1+vLgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/right_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBQExmUSUYgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAALUlEQVQI122MwQkAMBDCck7oqG7Yvg6kNC8NKLYPhQBaasPK+U6WJKMuvIcAF0CaDdeJj/KWAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb21wb25lbnQgew0KfQ0KDQouY3VzdG9tLWNvbXBvbmVudCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoubW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgb3BhY2l0eTogMC43NTsNCn0NCg0KLm1vZGFsLWNvbXBvbmVudCB7DQogICAgZmlsdGVyOiBibHVyKDEpOw0KfQ0KDQoucG9wdXAgew0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICMwMDAwMDAsIDAuMTUsIDEsIDEsIDEsIDMsIGZhbHNlKTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ09OVEFJTkVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ib3gsIC52Ym94LCAuaGJveCwgLmFic29sdXRlLCAuY29udGludW91c2hib3gsIC5oZ3JpZCwgLnZncmlkLCAuZ3JpZCB7DQogICAgc3BhY2luZzogNXB4IDVweDsNCn0NCg0KLmJveCwgLnZib3gsIC5oYm94LCAuY29udGludW91c2hib3gsIC5oZ3JpZCwgLnZncmlkLCAuZ3JpZCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBMQUJFTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5sYWJlbCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBJTUFHRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5pbWFnZSB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0K"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTV0lUQ0ggKERFRkFVTFQpCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zd2l0Y2ggewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsKfQoKLnN3aXRjaC1sYWJlbCB7CiAgICBjb2xvcjogYmxhY2s7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWIgewogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBhZGRpbmc6IDBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4OwogICAgaW5pdGlhbC13aWR0aDogNDBweDsKfQoKLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsKICAgIGhlaWdodDogMTRweDsKICAgIHdpZHRoOiAxMDAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICM4ODg4ODgsIDAuMywgMSwgMSwgMSwgMywgdHJ1ZSk7Cn0KCi5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsKICAgIHdpZHRoOiAyMHB4OwogICAgaGVpZ2h0OiAyMHB4OwogICAgYm9yZGVyLXJhZGl1czogNTBweDsKICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICMwMDAwMDAsIDAuMiwgMCwgMCwgMCwgMywgZmFsc2UpOwp9CgpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZCB7CiAgICAwJSB7CiAgICAgICAgcG9zOiAwOwogICAgfQogICAgMTAwJSB7CiAgICAgICAgcG9zOiAxMDA7CiAgICB9Cn0KCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMTsKfQogCi5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsKICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CgoKQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZCB7CiAgICAwJSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIH0KICAgIDEwMCUgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5OGM0ZTY7CiAgICB9Cn0KCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpzZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkIDAuMnMgZWFzZSAwcyAxOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6dW5zZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFNXSVRDSCAoU1FVQVJFKQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBwYWRkaW5nOiAwcHg7CiAgICBpbml0aWFsLXdpZHRoOiA2MHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjMsIDEsIDEsIDEsIDMsIHRydWUpOwp9Cgouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogNTAlOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgZmlsdGVyOiBub25lOwp9Cgouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmEgewogICAgaGVpZ2h0OiAwOwogICAgd2lkdGg6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwp9CgpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZFNxdWFyZSB7CiAgICAwJSB7CiAgICAgICAgcG9zOiAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBwb3M6IDEwMDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOThjNGU2OwogICAgfQp9Cgouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRTcXVhcmUgMC4ycyBlYXNlIDBzIDE7Cn0KCi5zcXVhcmUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsKICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkU3F1YXJlIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFNXSVRDSCAoUElMTCkKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7CiAgICBib3JkZXItcmFkaXVzOiA1MHB4OwogICAgaW5pdGlhbC13aWR0aDogNDBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4OwogICAgcGFkZGluZzogMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjMsIDEsIDEsIDEsIDMsIHRydWUpOwp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gewogICAgYm9yZGVyLXJhZGl1czogNTBweDsKICAgIHdpZHRoOiAyMHB4OwogICAgaGVpZ2h0OiAyMHB4OwogICAgZmlsdGVyOiBub25lOwp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsKICAgIGhlaWdodDogMDsKICAgIHdpZHRoOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIHsKICAgIDAlIHsKICAgICAgICBwb3M6IDA7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHBvczogMTAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5OGM0ZTY7CiAgICB9Cn0KCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxOwp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9Cg"},{ name : "styles/main.css", data : ""},{ name : "haxeui-core/styles/default/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKAAAAA1BMVEX/AP804Oa6AAAAAXRSTlMAQObYZgAAAApJREFUeJxjYgAAAAYAAzY3fKgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/down_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChcWJt1NeUAAAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAAClJREFUCNdj/P///38GHIDpnawqIzaJd7KqjEwwBroEAwMDAxO6ALJCAAXdCyoVfrojAAAAAElFTkSuQmCC"},{ name : "styles/native/main.css", data : "LmJ1dHRvbiB7DQp9DQoNCi50YWJiYXItYnV0dG9uLCAubWVudWJhci1idXR0b24sIC50YWJiYXIgLmJ1dHRvbiB7DQogICAgbmF0aXZlOiBmYWxzZTsNCn0NCg0KLnN3aXRjaCAuYnV0dG9uIHsNCiAgICBuYXRpdmU6IGZhbHNlOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbiB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICAgIGJhY2tncm91bmQ6ICNFREVERUQgI0U2RTZFNjsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjpkb3duIHsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQsIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmhvdmVyLCAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkb3duIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQoNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB3aGl0ZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCn0NCg0KLnRhYmxldmlldyAuaGVhZGVyIHsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgbWFyZ2luLWxlZnQ6IDBweDsNCn0"},{ name : "haxeui-core/styles/default/left_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AESCxUGz2OrRgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAOklEQVQI11XMoRWAQAxEwUlKQIPj+i8IiYYWgrp7Yd18sfHsp7ntvio7IDsgqmoB8j1G/AL0uE5n/AD4RBE2xaxDjQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50Owp9"},{ name : "kb-editor/styles/global.css", data : "Lm51bWJlcmVkaXRvciB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKfQoKLmFjY29yZGlvbi1jb250ZW50IHsKICAgIHdpZHRoOiAxMDAlOwp9"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QEeDAkARLIptgAAD0pJREFUaN69WlmMpVdx/qrOOf9/99u3p7tnscHLeB2MB4QNQomDYpAA8YbQKCB4RIKHRBGvlmAkQBGKQmIe4gdHiZAJEY7kB5YIhOMYsgwCC3uGwTYGzOwzvd71X885VXnonvbY7vEsBkr6pfvwL3WqvvrOV3UuAcDDD3+VBoMBBgu3saGUKqOEbJlEAGUGg0FQsDPa7/axUZBaZl1oef35s8/oFz//GX0XL+A/1qc4fFhx+DBhJzt8+DAOHz4MAPjWN/4KX/raXnrwwX10z62Gzq3nZLRJGRUwSZd6UKxKBGOMsC6oStHeoNAab9GTx07J2+/6e/38l1dBDz/8VXrrWz/Aw43TnHQp0cQ6I2QTw0zqyDQIIAsLgBxgxUgQL5bJB6NenAtdqeXoHMuLf/NefeTfdnb+oj300F/DuUXqNLvsW4nxM2uZrVVER0IcmThKAIEQREE+oJKoQWP0MQYt1Ret2pfnJH7z4z8V+vrX/4ViXLKDQaOVe+mC0AekZdk4YrC1CYwFCAQmVjCEiCtASwMzU46ZZVNyzH0+6MdfHl0WXlnT9eERfOUr/wgA+MIXHgJgQaTcbu8nIm8CWkkMeSMSt4m4EzU0IJRA1agCEQExKkIUjSFqiLEO3md1iJNawoRbdfn0t08Ga90CN7s2KaDdkHbfq0nrwdSgSQwHEEcCIghEBCIogRSAt7F4Fn76HDiZlORHFs2p3ciKt9/a8HLLHfH0sRvkgx+CLjRPoNHcS5ZKRrrbIKgrY9oKUvUAnatmk7nFm/bf35qbPyAqBgpSVVJVAAATQASZFrE+MyyzybnTP7DZ8jP1yIZ7PjCINsiUGmavo4h+0uk9uOrdZ/IIWDBSy0iTzQqQ10DBu/ZfGNc57mYrj4D0TKXVGpPZCJ6n7Ipi8Y7SH2o+EM/mB0inbKZun0NWNImkp4r5EMOCS9Pb7njvn3+22e3vJ6IEAEAAEYEJyMqIU6sZTq0VGOc1QrRaFH48X1e/KkLI9qZ7art3962U596q0daubtJcGwJRFHUQVF6AQmENI7Gbl2ECE4GJ0mha75L+W/6J6+z7VE1/6KvsODGv1VUcliVmM1gvRRNDKVMqRx2IDjTGpcHefQd37X3Lh+eW9jzAxgCqKH1EUUdMi4DzGwXODQuMc7/9PSIghqjlbNyqEFoUo7lwbkg2m0VKm4Y5wDUS49opYZR50GbqABCiKIp68wNEABPBMCGxm1mitPchce0H0KieD6Ozj9VF+WIQGscQ8gAhUmrns+nc/NKeg7e87R2fbPd6tznnGiuTCuc3prgwKpFXAUUdUXvZzkJieTvjRIQin0FEXB2CC1rxhUrJMls4NgQrpApe7KUYzmoQ7cwmqkBU3c7SVAFmILWm3Uga99uF/fe7fPhkuXz6OyHIEADIJrtvv+9PPzbYve89a9MaR18a4fR6Dh9kO7oXjXnn7xIR8mwKqzA+1uSLmoqaYIkZSdNC60ggwq5OAlGAcXVGtLmoYgsCTIC1vQ+Y3Xc+4JL1Y+vnpta25w4eWycenjwLHxTMr2Txak1UURUZWBW+Dqg0gmBh9+x2qHwTiS2309ZpWJQ+4lpsC21QAD5EVErpybx5f5VaXBhW2/dZQ7geK/MMCkBEECSCKg+w2wy0JYVhCyaGApjrOGyx2HWZKHB6LUfhIxLL6LUSvBkjIpTFDARAVRGDhycCAeCiAMg6sGEl2qTfQfv6P6gKvLycYVIGXIx1MzUYdNI38U5FVRYACKqqEhVmM9bgGEUNiTCTgEgBoOHMdaVaRHFyLUfpI177dOIY/XaC6wFQjAExRoAAAURIIpQ1SVPlGFVFWAxxxUQewDbnX2vkT6wWmBbhsvc0EoNeO9kslGsJTAyQGAAFFFRrhA9ai2mXykABwHtiU4aqOgrV2llC6sw1McTLqxnyOoCuEOJGYjDXvTaIVlUFEQGglZ2dPwZoSYFDubYKXllRCcEEkTgL2ew5qesXAMJc++oKWRU4tV4gL6+etVK3lYmrLeB8BhDDzC78iKvJr1Vi7psxnHxmqHzu3DFNU/XMmrG149nq6iNQxaCTQK+Qa1XgtysZZsWVI/9aayYGg256VRtNWWTgWPnG+OVviHHTaDmLEw39g5nw5z73Kd3YuCAxlhWTGQn0ZJVlT/WaFpb5DWFzei1HWcfrZpfE8hUzUVclYoxwxeoTQrzMsCNboZp2nZz5r5+CjelhcbEhZelrQpwaMmvFdPoDiVLs6iU7wkgBnFjNMX6Dgr2WTMx1di5sIkI+m4A1jtNq40dEtCoUZoqm/833frpJowDwzDNH1fth9F6KoHGjnEyOVmX10mI3hbxmBaKKE6s58ipeM2zeqCb6nR0olghFNkPix8+kWryoKkNVU16QOgIvbmqnxx9/HJ/+9KfRarW1LLOaVCZieG3t7LnHuk0Le4leUQCn1wrMfg+RvyzFXmLBe0RfyHx9/pvKbt3BzLxt+ZM/+p5uuQM+dOjQlgqEtNomQmIpQYfj8cbxfDz+33bTvWqHnZbh9xb5nRZx6Y5d1xW6Yf2JxNoThnnkDcpIGxG7aRsW21V67NhzmM2CqGjtRWZEZnzmxO+eSI1GVeD0eo78TRTsVRe2u0Q7VbPJoin/k50bJRYZVbV/6aUfK5ZXt+/f3q2++93vARjhnrfdSdOSTQi+WVZVv1R3y6/Xwt5ZFUH445izjMQxdHz+J404/m8FztSQsStd/csjT76qu30VT45Gf4YY5VWOZlWEj/pHc/6iNK/rgKwoL6G+nT2wF388+ugjWFq4g1xnFydUJFBpszELsdO/dz5WGOcBVZA/ivMbkwJnV8cAWu/sexmEEFvkvZuGMXfvvlumL7zw+hq4556DWNw9xzbGJCHbUQ39fTff8tHcqwGAfsvCmT98HiZ5teU8EG2rt+LT96uvBz5oW5PE3bhvP2H30isQevzxx7ekMDjPxChTgy0N5vrz97R6/T8ZZfX2zXNtd80q9eqbFmA0LXDi3PAV54zFxM5/tPLxphhl4ASNduNmg2XZjiQfOnQIjz76KPI8o0ajlYBtj2NcWLhh36c2ZjV81Felt9+0cH+ARYymJc6uTl5F0cQGsCmvp3s/QfDzHrHj4szd9L6P0MUulgHgvvsOknMD4xw3LfF8o9c7mDbTO86s5Xht300EDFrm9wYnImCSVTh1YQjdQbcY14R33fsqat5FxAOi2NjDiQHuwlZHNsHqasmNhksUphtVFprd7geZTfPssADvuGsR5loOiX3zi9iYFDh9YbjzGEcV1jUgZPpVMnifQhdZbYdQuNs+8m4CANPt3kgHDhw0RLYdRfao6IH2wsJfjnKPl85NL7OAzcilzqAO+jq9dLVsMytqnDo/whtxNBmDUGUQk96ZTs8+GTVMvEXmsuDtrS3hffvupaoiJ0JtCaHfWVz8LDHhwqi4rPOXOjFo22subCJgOC1w4uzGlWWJAsamUJu6sn/LJzn6rgnSNj2y46Nt5qUlYmujZTYd2+68g5PkbiiwPK6uSvNsF/Y11MQk26LKq3pEYWwKqCC097wvJv3biU3LFcbedN+AGGgCcE4lNmyaHgRRUvmIogrXFNFB28FZesMebrNgS5w4t3FNcyey7uLYOpXO7nsBaqgV21hYBBtDxCwcVVJRdQBQ+njNkzkAmGs6pG8Ap9G0wOnl8WXnrpdfuNmk1M3JUEIGzlLCMWsQG8MUlVlEGbopOGZlRH0dsoEI6LdeP1MiAFlR4dTyeEeqvOJ7mTcXoAAIzMoGJFRXFXGzCWjwkCikqsQErIzL6xZvBMKg/QrFXizY350bvglBSGDjtk5siNgQLmpOBoCghCgBogKiTQZ6M10LAei3HKwhzPIKZ1bGb3K3ULBLASiICMY4ON2cmfCFZQ+JBeoQoKoo64hx7q85WhfH5aKKUVZjYzStWvXGz/K188/2m1aaabLdU18PjIxLt+FkjYGmbnOjUxHUZUAQUVLF2Y38ivx/KeaJCD4Izo8yLA8LzPIK+9L8yVtb+XdiXQ3fSgXyQneHwc0foz1L78mrgPGsxCSrEEVAoKtMNoFtCkMM5ywQIxSAVQ0oRTT6qESQs+s7b2C0Nc6uw+YxUFEHbEwrrE8KTHKPhCTrOf/8u7vTx/qJvFgGGkeNufpAGkMbZ35+XFvzBzt77/5kf7F7G/YMGkVZY5pXmBU1fIgIURC3xOPrXFDApk1QTtFZo9ROtKkKS2w0lF6q6P2sDH6Uv3I+tnn8Q5gWHuvjAuvTEmUdUHtBHSIAgoVgX5J/f8nmP1xIquMhmrVxSUMGzWIZfR0DNGgKSjtaztb8b478IvZ2H+TBvg+nvaUHGoMuFucEQQQhCCofMcsrTIsKVR22jndp858CNgWBvLOpp0hyQ+rUbgxf1rSzEKJHfnajKHwAQlBMixorowIrwwJ1iNtw2cYkoeoiP367W3uEIGdi1LVRZTcS+KlhLooQ/ep0HNXX1ASK2GpnzseJWBpKNlyV8cpz6hr/7m56x2e51dtvmBLjDNLEoN9OQQTUPmKclZjMKlQ+QMBkknZuZJYrJ3Fp15xa2LYG733taTxdX39qOhasDmfNsvQOAC8YhTKgIhCFAqoi5PuUP7uLJs+V3kwAHqnyVCQWBatv5zae+t1IjnV+rmQt7lq+Ny4d8IEoqaHIQWGi1m2Q1Cv1i08/bxZvvZ/bgwOAmi0SI0DBIMwzYaEFqYLU49xnmpqfmNJNjXp/HstqTViXMuyt2cep0fGRG9k/v9DzLd+IrqoD+xjha0GgCAEpYpSgWgFUzqKbwdSZl6REGXy64OL//etYkibp0aMjAJvd3m9xu75nHrH+dakPvr8dhzP2kqCIMYw57azpdO1CGC//EEQJQY2CL+lDVEGqIlL3IFkMNAkNnTWsC0e+fVbpy1/6B+ruvZ8lLLMvkQhKV9Rqi+jZF55ECWUI0BCACCiTIEQRwBNXXrtLIa7XQqTyz1/7lQJ/dwU2eQif+Lijlm2y7mkZ9VOrXq3AOsPCUYhJ5JWBjwBgqGFEFQ4q3odG7rO1fnxCj4h56qnv4+Xn347F/Sy37OnFyVrwy0zV2nBczbwv8xBKr1KWEko/NIWTWNpGUaa79tSjRjf8+Fsr8iF4+dvH/gfAowAOA3j6Ms4fBvBF/OL407jxhnfqz44a6XRW46B9s7eNYaWFVj5H4ctGGUu7eVW21FpLQ3nVnDd1GNmweiHEF+78um587Qj+H/scE5pvKbATAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs/exclamation.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABUJJREFUeNrkV0tsG1UUvfOxHcfxJ3YTT8dOUzueprFJS8PCEUKtCv1QVEFb1CoVbVFKxAJ1x54NEhICVsCmEgiJDbsiFkilYsGqEqB+QGoqmrRJayel+fs/nnnzeHfsuEk6/qRCdMGTjnV933333nfefZ/hKKXwLBsPz7iJ+OMcGFinRFaoYZjyUKwI7xxehD19xY1j3QxfV+XzDNm1ndcnnfDVZT9cm3Ca/zmeB47j1jkojo83ZgADf/Fe2io4thNS7FwMgfLGThyDY9FHUwbOH1qADRQwB4V6gbF1iTbPUanvLKOOwvz090d1LfMj089ZTQJZvD7Zzmjg6iRwcH6zSzfCZp4QqObABKTY2URq/MsRpv/cyhgnUm8yfHXCm0Gvra37YFfvcYXkx4Hkb0PXtmMK6rBvM76eNoG3ZGU0TrVFUVfnAYGyHDsXx76nSsCgrYENSrR1RPb55QNRPXsLDEM3oWVvg19+OdrW0bsPbVr1t1kGOIazof7RBCk+4PTyci0Boi2DXkxzIeVcAm2qti0xIK4m0Kyx+h12+RNJ75ahUHH+F/j2Eg9TqcoujoQNOHPiL/AEkiGXbyCZWxofZi6vtnwSUqMpBJbkmfCOtxNabpLNOAf30zqUy2UTKKNOy9+DUOw0snDGHNPEb+tLAHDA253c4/Js71Kzd5jOAJ4rQalUAcdk1JXzU9Du7uliLO3BMf9WEToo5U+HldPxcm6CrblqBrMJai0BUajoDKMMWmEK5NjxOI7Bsa0VYSOqKLy+JbR30OHs9GqF+7W1c9g1KBaLJtpsWk2vlx6Cw+HzBqThQRzbbAnMIiRGncLjwCPw9pPh2Js7ce0pJY+Lh8vD9HQaFhYWwN3uhNmlHiCEmEy05XLQIQ3vnJv59aRB9csskUzj65hagw08Few9GBdFsV1THwJhCWTLKzCbS0F67k+4e/cmrKykwNlRBJUvg24jQOwU8jqzFUm7W3oBD6dT9fzXGDCo5bbrFkXXsVD0iFJghbdc/BvyWpbZVujaKtlBkhxV2cEYWU9jgRWkTx5SVmZvHDN09QcW4lFdBvDqfwLsQJH7DvcXtTn77PI1FhyvVY0FIiakoA3krQ4TKK/qV0H0RTAgb/fJz/ejL6sYdXcBoy0i2n1HvPJgZGn5N8ZGGQTmdC36og4IssDBoN2UN/YjNDUN3q2xiGBzHUGfVrtAXN0F654DHIwGoy8qZW1GIGQReItnS2T7Tvjsk6NVuicgn7/zpBHNs0gZwR8eUGYnfh9l6/6B5XvAMNZV/i6nK7A/ICs9ucwNcyZWrVS4bWK1CZx1lRMyD75uqWch5d6vFrK7GBN/NKoBjmFMVpKKrqU5oBkQeN0SV35egFdevWkC5Xp2PJRYhBUu2BtV0Hc1hnUNsOxecnmDSX9XMEhKUyCy2dfDx5+m4EFKNYFyI1uOZMEbcAedbk8SYzxxEmoaRYg6oWO9/bsVoqXNs17gjboQbYHH68jkRrYVJvIQisoKxsBYGLOWgKoCu9XgNY9fHvJ2dnRSfcayqtfiow+PQzQaMoFyM3tcCp/P1un2eYYwFsasFaFahjZB4MaURH8Eg/Ns2wHX+B4/tPcuvHHj/cr7fuUKaCXSwu1vQHRHIDKTyo4RQn/CWjYT0HUYCW+X4x4v7yIqKyiu+QvFUNnWezTRdBdsbF6v6JJkd3z6XgZf0d+sJnDhud3bwhw760W7VL0IDPZrmFlXDgpak2lNpo/1ppauOVTWHPgbWmLQH568k7lQS4D5uXjpu6vv/sefhRfNc+d//3X8jwADAHWOFkaFGOstAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs/question.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA61pVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wUmlnaHRzPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvcmlnaHRzLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcFJpZ2h0czpNYXJrZWQ9IkZhbHNlIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RTkxRDlCRjg4NDM0MTFFMDk1NDQ5NjM2NUYzMUQ5NjMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RTkxRDlCRjc4NDM0MTFFMDk1NDQ5NjM2NUYzMUQ5NjMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTI1NDYxQUQyRjg0RTAxMTg1RkJBOTI1NDUxRDI5NkIiIHN0UmVmOmRvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6KMnz6AAAI6klEQVR42sRXa2wU1xX+Zmcfsy977fWu3zZP462xiV3TGCgutsEqTaAQhEosCk1VRaqiqqoa9V9/VG1VtWnzp1KrVkFNlERuinikcqHENbIMxCblEdtgMIJSr9exvX7ta3Z2d3Z2eu54d1mwQUr/ZKRvZ3bu4/vOueece4dTVRVf5KVnPwcOHMi+4DhOg06ny/5P3wW6VRCqCEUEa2Y8XUmCSJgneAk+MizGGjIGplIp7TnX4LNnz2YneNZlI2wRBMFTX1/v2UJXZWXlGovFUqTX620aezIZEUVxfnJy8r8jIyPDo6OjdyRJukNNw4TIsybnmKKneICZXm+321va29t3trS0dBiNxlIiw9OWjY3jeR6JRGJ6aGio7+LFi5cikcgQNY2SB9TP4wETdWz1eDytXV1d3ybrqxmxd1rCyIMk7k4o8C+lEBKXJ8uzcnAX6FBbzaNhvR7FhbrSHTt2HG1qatrZ3d397t27d4up2wAhvmoMPElO2NPZ2bl/9+7dXbIsW32zEv7xsYw7ExzyC/JRVORATakAQTBqAyQpjkhEwuB4CBeuBuGpVvHCdgOJ0lcfP378R319fcW9vb1s3t4nRTwpgLn9a4y8o6PjGK2j6epYEj0fp1DocuO5Jje5VyGyOLzeRcRicS24TCYD7HYryspcqKoqxtTUHN78YB77tvNoqeOt7e1txxRFAQlJpEWojwlgk6TXsKG2tra1ra2tSxQjpr7rKfTd4FC3eSPY0vl8S4iEw2j2GNDW6cD6KhdsZj2m/DFcux3C2f4pGM15KCjIg8Nhw6mBCQRFBXuaU6a2tl1dXu+Ef3z83iwt73BGgC4nRexWq3X7kSNHjkajonXwloze6xSFDRsRDEpk1RK5OobO5434yXeqsXVzPgrzDDAaOKwtN+NwZzF+9YNKiOFFzMwEEApJWL++Ch99ooLNRYFpPXTo0FHKnu2MK2O0LqOEXjaS5TspkKun52XN7bW1a+D3h7CwEGITgOIBl26EoKRWz4KqUjMO7sqjpYkhEIho48orSvDh5aQWtAaDoZqCcyfjetIDFOhCXXNzc1s0GsX5IQX5hUWIRhM0SVAjzmA+qOLkBR9OfjSF7/9iFK/+bBTTc7GsiOY6B9gcLGtCIZHEJGAU7Dg3mNTGNzU1tplMpjrGmRVAiqrq6uo8qZRSMrOgYIyi3enMx/T0wmPkDCyPT5z1E+YwMaPCN6fi3MD0o6pl0Wv9mAAWeIFAGFargFsPU5gLgNWJkpqaGg/jzA3CdSSgnim/9ZAmsds0F8bjiVVdzcp0IiFTexzxWBRuuwrKdS2Wbo6LFAOz5G49qFIyt5MYGZxOT3Mr2FEno6ZmY/2NGzfW0VT39GkPuEtLS6qZ4nEvp6XU0lI4mx2Zi7UzkRExmhan4rv7CkGZp1nNCC9/GiGBPM3JabGiJpJkTAg2m4XqSJIEAG53cTXjzPWAzWQSnJR6FCwqyvN4mlDJEieJOBwWIUalrCgdWdT5vBnf+KpD8wgjH5+IY+Am7UnUBraZcQxMCONQMTOv0F8eZrPgZJy5AoxUA6ws10ORFCrJgszuFRHjCJPFbAJwelCTdhVYFRx7wZklnw+m8Ot3/ERsyu4n0KAjP3FIEYKRJL0yMA9ZGWeuALYpcWxQSk3RmimQCYFQTPMEG8TzuYuhor3ZBMHEa+RsA/rtu9OIxI0kkNPKKUd7mY5Lb+ccWz5OM0rjID6GXAFJWsMIx+nyrIJKXpAQiqagqDx5k18RhCqJLHY+Ivf5k7j/mQ683ojl4wO3fNew7AlZUWG3cFpFleVkhHHmChAjEXFREMx5bocOc+E4eIOJvKGsmgVqStHigpEzETMLMepvpP+mdEnHE3eyWkmguFivCRDF6CLjzBXg93q9k5s2edZ41hoxcU2E2eYkAfJTDxJ//nAKfzw1vxyQvAE2R/kjxrTxmQf2Wo6GsXmdoC0DHVwmGWduJfzP8PDwHQNZ0VhjRlwKgj3rjQItgWlVWAsq4aBq6XI5YXWUQWd4vC+XeeYp1ijyoUTRuMlMYnQYGxu7wzhzBTykk9Q9quH+EqceTTUmhIMLtN8LtK6mFWB5vqMmhA9+WYnTv1mP175JWZOMr+ynQYAcC2GrxwJXPsfc7x8bu32PceYKkKjAjFy6NHCF5ffh3UVISX5aaxlG40oRciyM771UCotg0OLgYEcZygvjq4pVKdYMygK+1emiTFBx5crlK5IUHWGcuXsBw9Xe3gtDgUDA5y4wUI674J8cI/elaCkovfSPwJO7pXhKI+fT+ZlUdI/1YWDZEpwZwyv7S1Fo57C4uOjr7//XEOPKnA11mRJLCIXDof4TJ/50hp6ju75ciJf3FMA3Pgg5LlG0syhfhiW/DL+jvJ8PyJBiCt58z4tQqiLbziDHo5h5MISje4vQ2phPpVuOvv32W2fC4XA/42Kc2VNxQ0NDNmbJNQf37t13uKvrlZcEwWTsHfLj9933YczfgKLyWhJiSp/zk4gGPqO7TEFYTu4Wlj1BsTA/dRdy8D5+eLQGHV9x0f4hJd5//y+nL1zoOUmV80zmSEZH+BVnQpUK0vnTp/9mpWLBHz/+6oud28rMWzY58Yfu2+j/5DZFfxUK3WspTQtgc1ZrgxIxEZHgFBb9DyEuedHWXITXftwCl8PINi/pnXfe6unpOX2OasZ5OguoK74LcjygbbGUDWbaz/c3NDR2vP76T1+sqKgq1VNF9M1GcfHqJC5fn8IDbxBzi1FtjKvQQudDB3Y2l6O9pQLlLotWzn0+7/Qbb/y8Z3T0Zh+R/52ySiIBWS7mgacJYGDLscNms3/94MEjzYcOvdzsdpc4WVHheZ2G5W+X5Z2OFZhkcvnDw++fWTh1qvvamTN/vRaJhP9Jbr9C5CpL688jIBOcDsIus9myddu21g2trR0b6uufK3a5ih10iDWzMfRZJs3NzQZGRz+dHRjouz84OHCfUu3flCH9hADLFEb+/wrIHMXYFrqJ7l+iblR3kZ/+iEH6YyNImKK6P0YWj9NdZKehTKo+U8AXef1PgAEA4gDzbt3jjkkAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNRU5VQkFSCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5tZW51YmFyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFRUVFRUU7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjQUJBQkFCOwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xNSwgMSwgMSwgMSwgMywgZmFsc2UpOwp9CgoubWVudWJhci1idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGNvbG9yOiAjNjY2NjY2OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLm1lbnViYXItYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0M7CiAgICBjb2xvcjogIzQ0NDQ0NDsKfQoKLm1lbnViYXItYnV0dG9uOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogI0FCQUJBQjsKICAgIGNvbG9yOiAjRUVFRUVFOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE1FTlUKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm1lbnUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsKICAgIHBhZGRpbmc6IDFweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjE1LCAxLCAxLCAxLCAzLCBmYWxzZSk7CiAgICBzcGFjaW5nOiAwOwogICAgd2lkdGg6IDIwMHB4Owp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE1FTlVJVEVNUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubWVudWl0ZW0gewogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogNXB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsKICAgIHdpZHRoOiA1MCU7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgoubWVudWl0ZW0tc2hvcnRjdXQtbGFiZWwgewogICAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCi5tZW51aXRlbS1pY29uIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5tZW51aXRlbTpob3ZlciwgLm1lbnVpdGVtOnNlbGVjdGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0M7Cn0KCi5tZW51aXRlbSAubGFiZWw6aG92ZXIsIC5tZW51aXRlbSAubGFiZWw6c2VsZWN0ZWQgewogICAgY29sb3I6ICMyMjIyMjI7Cn0KCi5tZW51aXRlbS1leHBhbmRhYmxlIHsKICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3cucG5nIjsKICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsKfQoKLm1lbnVzZXBhcmF0b3IgewogICAgaGVpZ2h0OiAxcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNBQkFCQUI7CiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsKfQo"},{ name : "haxeui-core/styles/default/check.png", data : "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAKCAYAAACE2W/HAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3woKFDgxV99L8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAACRUlEQVQoFQE6AsX9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1gAAAAAAAAAAADclUeEl663/3O89DEAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANmdWGy42gCTvNLv/iVchwJXRSwpAgAAAAAAAAAAAAAAAAAAAAAAAAAAfLvqANWbWAAAAAAA1pxYXcPgAJO72///CAgLAu/b5QAbEAK3BAAAAAD347ZXcGST+gRMZgUfTVC9diAB7YQAAADfoFhcwt8Aoq7U//8KAf4AFSI+AExgQcscBgQ2Avv4z4TJtc6o9wkHrvbi1Knu0NqaAAAAAOynWGW/3QCjqtL//wsB/gAXIzkBQ2JexkkfCzwAAAAABAH+/gD79O4A5v0C/xPdzADsAwRSV2NunKfR6mO82wAACwT/AREZMwA9WlvKQSoRTgEBAfq76v8AAQAAAAD51Jt3rb7ciKO72/8OCAIAAQIDAfv+AQAFAv4ABgonAExwbtlALhQ+FgEB6rvq/wBFFgEABAAAAAAHLGWJ+9KZCvX4/H6zxuH/CggBAAUD/QD9/B0AUnh07z0mDjgTAQHwu+r/AEUWAQAAAAAAAP/VmwAAAAAAAAAAAP/YnJeIfGv/VFVT/1BMbP+04Pb//f//BgAAAAC76v8AAAAAAAAAAAAAAAAAAAAAAAD/1ZsAAAAAAAAAAAD/35yvb2V4/7Tg9v8AAAAAAAAAALvq/wAAAAAAAAAAAAAAAAAAAAAA6MK1OUXq0R0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/option.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wkMBhgPflMg6QAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAABB0lEQVQY043MQSsEYRyA8ef/zhtK2WTWpkSSjMbWnqQNN5vWkVrOfAcX5exDODOa87ZxW9ritLVNu5SUXJaRVgjNzuuw5TblOf96BMC8+6Pbu/5wYYZW5RYUMfbiBuFV09k/PnidF3nSxhz2X5w2A8Au32C0QkDxXPOMWOnWZbkRVoyZVC/B9NfRSd0G6KFeYvUJdDjzPTvT/rhWreo5b5YmKd1p4NUeXVWvddBaEqGyNPcPbRT/TOXyKaLIJIK4GzE1kUE5K6sMdaNEGKWylPLjgRpx7wZ2tnIhQBTztzbdHwMpCpulsJ0ZXFAie9/L63Mu4BRnkdgAJiadLwmMOUvFrLsm8vkLmFpcqEjhuWQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogIzAwMDAwMDsNCn0NCg0KLm9wdGlvbmJveDpob3ZlciB7DQp9DQoNCi5vcHRpb25ib3g6ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBjb2xvcjogIzkwOTA5MDsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIHdpZHRoOiAxNnB4Ow0KICAgIGhlaWdodDogMTZweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIHBhZGRpbmctdG9wOiAxcHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvb3B0aW9uLnBuZyI7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5vcHRpb25ib3gtbGFiZWwgew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoub3B0aW9uYm94LWljb246ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQo"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLnByb3BlcnR5LWdyaWQgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIHBhZGRpbmc6IDA7DQogICAgd2lkdGg6IDEwMCU7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICNBQkFCQUI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tc2l6ZTogMXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X3NxdWFyZS5wbmciOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmNvbGxhcHNlZCAucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXItbGFiZWwgew0KfQ0KDQoucHJvcGVydHktZ3JvdXAtY29udGVudHMgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDE7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FCQUJBQjsNCiAgICBwYWRkaW5nLWJvdHRvbTogMXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1sYWJlbC1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHBhZGRpbmctbGVmdDogNXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3ItY29udGFpbmVyIHsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfSAgICAgICAgDQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3Igew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLnRleHRmaWVsZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLmNoZWNrYm94IHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDA7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAuZHJvcGRvd24gew0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLW9mZi1kYXkgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjJmOTsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXk6aG92ZXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTdjNGUyOw0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheS1zZWxlY3RlZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNhN2M0ZTI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBDQUxFTkRBUlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXItdmlldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItcmFkaXVzOiAxcHg7DQp9DQoNCi5jYWxlbmRhci12aWV3IC5jYWxlbmRhciB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgLmhib3ggew0KCXNwYWNpbmc6IDA7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNwcmV2LW1vbnRoIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvbGVmdF9hcnJvdy5wbmciOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjbmV4dC1tb250aCB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3JpZ2h0X2Fycm93LnBuZyI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LW1vbnRoIHsNCglfX3dpZHRoOiAxMDAlOw0KICAgIF9fdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LXllYXIgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQoJYm9yZGVyOiBub25lOw0KCXBhZGRpbmctdG9wOiAxcHg7DQoJYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQouY2FsZW5kYXItdmlldyAjY3VycmVudC15ZWFyIC5idXR0b24gew0KCWJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KCWJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5Ow0KICAgIHBhZGRpbmc6IDA7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouc2Nyb2xsIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Q3RDc7DQp9DQoNCi5zY3JvbGwgLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1MjUyOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbCAuZGVpbmMgew0KICAgIGhlaWdodDogMTdweDsNCiAgICB3aWR0aDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsIGRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQoNCi5zY3JvbGwgZGVpbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLmluYyB7DQogICAgaGVpZ2h0OiAxN3B4Ow0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5zY3JvbGwgLmluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0KDQouc2Nyb2xsIC5pbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Ow0KfQ0KDQouc2Nyb2xsIC50aHVtYjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQTsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEREREREQ7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFZFUlRJQ0FMIFNDUk9MTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi52ZXJ0aWNhbC1zY3JvbGwgew0KICAgIHdpZHRoOiAxN3B4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7DQogICAgd2lkdGg6IDE3cHg7DQogICAgaGVpZ2h0OiAxN3B4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC5kZWluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93LnBuZyI7DQp9DQoNCi52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC91cF9hcnJvd193aGl0ZS5wbmciOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC5pbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93LnBuZyI7DQp9DQoNCi52ZXJ0aWNhbC1zY3JvbGwgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZG93bl9hcnJvd193aGl0ZS5wbmciOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBIT1JJWk9OVEFMIFNDUk9MTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiAxN3B4Ow0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGwgLnRodW1iIHsNCiAgICB3aWR0aDogMTdweDsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAuZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93LnBuZyI7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAuZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsIC5pbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciOw0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGwgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbDptb2JpbGUgLmluYywgLnNjcm9sbDptb2JpbGUgLmRlaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGw6bW9iaWxlIC50aHVtYiB7DQogICAgaGVpZ2h0OiA0cHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSB7DQogICAgb3BhY2l0eTogLjU7DQogICAgd2lkdGg6IDhweDsNCiAgICBwYWRkaW5nOiAycHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbDptb2JpbGUgLnRodW1iIHsNCiAgICB3aWR0aDogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICMwMDAwMDA7DQp9DQoNCi5jaGVja2JveDpob3ZlciB7DQp9DQoNCi5jaGVja2JveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAjOTA5MDkwOw0KfQ0KDQouY2hlY2tib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCiAgICB3aWR0aDogMTZweDsNCiAgICBoZWlnaHQ6IDE2cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6c2VsZWN0ZWQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9jaGVjay5wbmciOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jaGVja2JveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNoZWNrYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2hlY2tib3gtaWNvbjpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"}];
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
haxe_ui_validation_ValidationManager.get_instance().registerEvent("ValidationStop",haxe_ui_backend_html5_HtmlUtils.onValidationStop);
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
DateTools.DAYS_OF_MONTH = [31,28,31,30,31,30,31,31,30,31,30,31];
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit.autoScaleDPIThreshold = 120;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","mousemove");
	} else {
		_g.h["mousemove"] = "mousemove";
	}
	if(__map_reserved["mouseover"] != null) {
		_g.setReserved("mouseover","mouseover");
	} else {
		_g.h["mouseover"] = "mouseover";
	}
	if(__map_reserved["mouseout"] != null) {
		_g.setReserved("mouseout","mouseout");
	} else {
		_g.h["mouseout"] = "mouseout";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","mousedown");
	} else {
		_g.h["mousedown"] = "mousedown";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","mouseup");
	} else {
		_g.h["mouseup"] = "mouseup";
	}
	if(__map_reserved["click"] != null) {
		_g.setReserved("click","click");
	} else {
		_g.h["click"] = "click";
	}
	if(__map_reserved["doubleclick"] != null) {
		_g.setReserved("doubleclick","dblclick");
	} else {
		_g.h["doubleclick"] = "dblclick";
	}
	if(__map_reserved["change"] != null) {
		_g.setReserved("change","change");
	} else {
		_g.h["change"] = "change";
	}
	if(__map_reserved["keydown"] != null) {
		_g.setReserved("keydown","keydown");
	} else {
		_g.h["keydown"] = "keydown";
	}
	if(__map_reserved["keyup"] != null) {
		_g.setReserved("keyup","keyup");
	} else {
		_g.h["keyup"] = "keyup";
	}
	if(__map_reserved["scrollchange"] != null) {
		_g.setReserved("scrollchange","scroll");
	} else {
		_g.h["scrollchange"] = "scroll";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","mousemove");
	} else {
		_g.h["mousemove"] = "mousemove";
	}
	if(__map_reserved["mouseover"] != null) {
		_g.setReserved("mouseover","mouseover");
	} else {
		_g.h["mouseover"] = "mouseover";
	}
	if(__map_reserved["mouseout"] != null) {
		_g.setReserved("mouseout","mouseout");
	} else {
		_g.h["mouseout"] = "mouseout";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","mousedown");
	} else {
		_g.h["mousedown"] = "mousedown";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","mouseup");
	} else {
		_g.h["mouseup"] = "mouseup";
	}
	if(__map_reserved["touchmove"] != null) {
		_g.setReserved("touchmove","mousemove");
	} else {
		_g.h["touchmove"] = "mousemove";
	}
	if(__map_reserved["touchstart"] != null) {
		_g.setReserved("touchstart","mousedown");
	} else {
		_g.h["touchstart"] = "mousedown";
	}
	if(__map_reserved["touchend"] != null) {
		_g.setReserved("touchend","mouseup");
	} else {
		_g.h["touchend"] = "mouseup";
	}
	if(__map_reserved["click"] != null) {
		_g.setReserved("click","click");
	} else {
		_g.h["click"] = "click";
	}
	if(__map_reserved["dblclick"] != null) {
		_g.setReserved("dblclick","doubleclick");
	} else {
		_g.h["dblclick"] = "doubleclick";
	}
	if(__map_reserved["change"] != null) {
		_g.setReserved("change","change");
	} else {
		_g.h["change"] = "change";
	}
	if(__map_reserved["keydown"] != null) {
		_g.setReserved("keydown","keydown");
	} else {
		_g.h["keydown"] = "keydown";
	}
	if(__map_reserved["keyup"] != null) {
		_g.setReserved("keyup","keyup");
	} else {
		_g.h["keyup"] = "keyup";
	}
	if(__map_reserved["scroll"] != null) {
		_g.setReserved("scroll","scrollchange");
	} else {
		_g.h["scroll"] = "scrollchange";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","touchmove");
	} else {
		_g.h["mousemove"] = "touchmove";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","touchstart");
	} else {
		_g.h["mousedown"] = "touchstart";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","touchend");
	} else {
		_g.h["mouseup"] = "touchend";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.TOUCH_TO_MOUSE = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["touchmove"] != null) {
		_g.setReserved("touchmove","mousemove");
	} else {
		_g.h["touchmove"] = "mousemove";
	}
	if(__map_reserved["touchstart"] != null) {
		_g.setReserved("touchstart","mouseout");
	} else {
		_g.h["touchstart"] = "mouseout";
	}
	if(__map_reserved["touchend"] != null) {
		_g.setReserved("touchend","mousedown");
	} else {
		_g.h["touchend"] = "mousedown";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_binding_BindingManager.bindingInfo = new haxe_ds_ObjectMap();
haxe_ui_binding_BindingManager.targets = new haxe_ds_StringMap();
haxe_ui_events_UIEvent.READY = "ready";
haxe_ui_events_UIEvent.RESIZE = "resize";
haxe_ui_events_UIEvent.CHANGE = "change";
haxe_ui_events_UIEvent.BEFORE_CHANGE = "beforeChange";
haxe_ui_events_UIEvent.MOVE = "move";
haxe_ui_events_UIEvent.INITIALIZE = "initialize";
haxe_ui_events_UIEvent.RENDERER_CREATED = "rendererCreated";
haxe_ui_events_UIEvent.RENDERER_DESTROYED = "rendererDestroyed";
haxe_ui_events_UIEvent.HIDDEN = "hidden";
haxe_ui_events_UIEvent.SHOWN = "shown";
haxe_ui_events_UIEvent.ENABLED = "enabled";
haxe_ui_events_UIEvent.DISABLED = "disabled";
haxe_ui_events_UIEvent.BEFORE_CLOSE = "beforeClose";
haxe_ui_events_UIEvent.CLOSE = "close";
haxe_ui_components_CalendarEvent.DATE_CHANGE = "datechange";
haxe_ui_components__$DropDown_DropDownBuilder.HANDLER_MAP = new haxe_ds_StringMap();
haxe_ui_components__$TabBar_Builder.SCROLL_INCREMENT = 20;
haxe_ui_containers_CalendarView.MONTH_NAMES = ["January","Febuary","March","April","May","June","July","August","September","October","November","December"];
haxe_ui_containers_CalendarView.DATE_FORMAT = "%d/%m/%Y";
haxe_ui_containers_ScrollViewEvents.INERTIAL_TIME_CONSTANT = 325;
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.SAVE = "Save";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.YES = "Yes";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.NO = "No";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.CLOSE = "Close";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.OK = "OK";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.CANCEL = "Cancel";
haxe_ui_containers_dialogs__$Dialog_DialogButton_$Impl_$.APPLY = "Apply";
haxe_ui_containers_dialogs_DialogEvent.DIALOG_CLOSED = "dialogClosed";
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.TYPE_INFO = "haxeui-core/styles/default/dialogs/information.png";
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.TYPE_QUESTION = "haxeui-core/styles/default/dialogs/question.png";
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.TYPE_WARNING = "haxeui-core/styles/default/dialogs/exclamation.png";
haxe_ui_containers_dialogs__$MessageBox_MessageBoxType_$Impl_$.TYPE_ERROR = "haxeui-core/styles/default/dialogs/cross-circle.png";
haxe_ui_containers_menus_MenuEvent.MENU_SELECTED = "menuselected";
haxe_ui_core_ComponentFieldMap.MAP = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["group"] != null) {
		_g.setReserved("group","componentGroup");
	} else {
		_g.h["group"] = "componentGroup";
	}
	if(__map_reserved["contentLayout"] != null) {
		_g.setReserved("contentLayout","contentLayoutName");
	} else {
		_g.h["contentLayout"] = "contentLayoutName";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_events_AnimationEvent.START = "animationstart";
haxe_ui_events_AnimationEvent.END = "animationend";
haxe_ui_events_FocusEvent.FOCUS_IN = "focusin";
haxe_ui_events_FocusEvent.FOCUS_OUT = "focusout";
haxe_ui_events_ItemEvent.COMPONENT_EVENT = "itemComponentEvent";
haxe_ui_events_KeyboardEvent.KEY_TAB = 9;
haxe_ui_events_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_events_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_events_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_events_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_events_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_events_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_events_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_events_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_events_MouseEvent.CLICK = "click";
haxe_ui_events_MouseEvent.DBL_CLICK = "doubleclick";
haxe_ui_events_MouseEvent.RIGHT_CLICK = "rightclick";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightmousedown";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_UP = "rightmouseup";
haxe_ui_events_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_events_ScrollEvent.START = "scrollstart";
haxe_ui_events_ScrollEvent.STOP = "scrollstop";
haxe_ui_events_ValidationEvent.START = "ValidationStart";
haxe_ui_events_ValidationEvent.STOP = "ValidationStop";
haxe_ui_parsers_ui_ComponentParser._nextId = 0;
haxe_ui_styles_Parser.cssRegex = new EReg("([\\s\\S]*?)\\{([\\s\\S]*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["black"] != null) {
		_g.setReserved("black",0);
	} else {
		_g.h["black"] = 0;
	}
	if(__map_reserved["red"] != null) {
		_g.setReserved("red",16711680);
	} else {
		_g.h["red"] = 16711680;
	}
	if(__map_reserved["lime"] != null) {
		_g.setReserved("lime",65280);
	} else {
		_g.h["lime"] = 65280;
	}
	if(__map_reserved["blue"] != null) {
		_g.setReserved("blue",255);
	} else {
		_g.h["blue"] = 255;
	}
	if(__map_reserved["white"] != null) {
		_g.setReserved("white",16777215);
	} else {
		_g.h["white"] = 16777215;
	}
	if(__map_reserved["aqua"] != null) {
		_g.setReserved("aqua",65535);
	} else {
		_g.h["aqua"] = 65535;
	}
	if(__map_reserved["fuchsia"] != null) {
		_g.setReserved("fuchsia",16711935);
	} else {
		_g.h["fuchsia"] = 16711935;
	}
	if(__map_reserved["yellow"] != null) {
		_g.setReserved("yellow",16776960);
	} else {
		_g.h["yellow"] = 16776960;
	}
	if(__map_reserved["maroon"] != null) {
		_g.setReserved("maroon",8388608);
	} else {
		_g.h["maroon"] = 8388608;
	}
	if(__map_reserved["green"] != null) {
		_g.setReserved("green",32768);
	} else {
		_g.h["green"] = 32768;
	}
	if(__map_reserved["navy"] != null) {
		_g.setReserved("navy",128);
	} else {
		_g.h["navy"] = 128;
	}
	if(__map_reserved["olive"] != null) {
		_g.setReserved("olive",8421376);
	} else {
		_g.h["olive"] = 8421376;
	}
	if(__map_reserved["purple"] != null) {
		_g.setReserved("purple",8388736);
	} else {
		_g.h["purple"] = 8388736;
	}
	if(__map_reserved["teal"] != null) {
		_g.setReserved("teal",32896);
	} else {
		_g.h["teal"] = 32896;
	}
	if(__map_reserved["silver"] != null) {
		_g.setReserved("silver",12632256);
	} else {
		_g.h["silver"] = 12632256;
	}
	if(__map_reserved["gray"] != null) {
		_g.setReserved("gray",8421504);
	} else {
		_g.h["gray"] = 8421504;
	}
	if(__map_reserved["grey"] != null) {
		_g.setReserved("grey",8421504);
	} else {
		_g.h["grey"] = 8421504;
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DURATION = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DELAY = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_ITERATION_COUNT = 1;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DIRECTION = "normal";
haxe_ui_styles_animation_AnimationOptions.DEFAULT_FILL_MODE = "forwards";
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_ui_util_StyleUtil.component2StyleEReg = new EReg("([A-Z])","g");
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
hscript_Parser.p1 = 0;
hscript_Parser.readPos = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
kbe_FileOpener.ID = "HiddenFileOpener";
kbe_KC.DELETE = 46;
kbe_KC.N0 = 48;
kbe_KC.N9 = 57;
kbe_KC.C = 67;
kbe_KC.R = 82;
kbe_KC.Y = 89;
kbe_KC.Z = 90;
kbe_KC.NP_0 = 96;
kbe_KC.NP_9 = 105;
kbe_KeyVisualizer.COMMON_LABEL_MODES = [{ value : "Name", mode : kbe_KeyLabelMode.Name},{ value : "Row column", mode : kbe_KeyLabelMode.RowColumn},{ value : "Row", mode : kbe_KeyLabelMode.Row},{ value : "Column", mode : kbe_KeyLabelMode.Column},{ value : "Id", mode : kbe_KeyLabelMode.Id}];
kbe_components_KeyboardContainer.BUTTON_CHANGED = "BUTTON_CHANGED";
kbe_components_KeyboardContainer.BUTTON_CLICKED = "BUTTON_CLICKED";
kbe_components_KeyboardContainer.BUTTON_DOWN = "BUTTON_MOUSE_DOWN";
kbe_components_KeyboardContainer.TOP_OFFSET = 32;
kbe_components_KeyboardContainer.LEFT_OFFSET = 32;
thx_Dates.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Dates.compare);
thx_Floats.TOLERANCE = 10e-5;
thx_Floats.EPSILON = 1e-9;
thx_Floats.pattern_parse = new EReg("^(\\+|-)?(:?\\d+(\\.\\d+)?(e-?\\d+)?|nan|NaN|NAN)$","");
thx_Floats.pattern_inf = new EReg("^\\+?(inf|Inf|INF)$","");
thx_Floats.pattern_neg_inf = new EReg("^-(inf|Inf|INF)$","");
thx_Floats.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Floats.compare);
thx_Floats.monoid = { zero : 0.0, append : function(a,b) {
	return a + b;
}};
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
thx_Ints.BASE = "0123456789abcdefghijklmnopqrstuvwxyz";
thx_Ints.order = function(i0,i1) {
	if(i0 > i1) {
		return thx_OrderingImpl.GT;
	} else if(i0 == i1) {
		return thx_OrderingImpl.EQ;
	} else {
		return thx_OrderingImpl.LT;
	}
};
thx_Ints.monoid = { zero : 0, append : function(a,b) {
	return a + b;
}};
thx_Orderings.monoid = { zero : thx_OrderingImpl.EQ, append : function(o0,o1) {
	switch(o0._hx_index) {
	case 0:
		return thx_OrderingImpl.LT;
	case 1:
		return thx_OrderingImpl.GT;
	case 2:
		return o1;
	}
}};
thx_Strings.order = thx__$Ord_Ord_$Impl_$.fromIntComparison(thx_Strings.compare);
thx_Strings.HASCODE_MAX = 2147483647;
thx_Strings.HASCODE_MUL = 31;
thx_Strings.monoid = { zero : "", append : function(a,b) {
	return a + b;
}};
thx_Strings.UCWORDS = new EReg("[^a-zA-Z]([a-z])","g");
thx_Strings.IS_BREAKINGWHITESPACE = new EReg("[^\t\n\r ]","");
thx_Strings.IS_ALPHA = new EReg("[^a-zA-Z]","");
thx_Strings.UCWORDSWS = new EReg("[ \t\r\n][a-z]","g");
thx_Strings.ALPHANUM = new EReg("^[a-z0-9]+$","i");
thx_Strings.DIGITS = new EReg("^[0-9]+$","");
thx_Strings.STRIPTAGS = new EReg("</?[a-z]+[^>]*>","gi");
thx_Strings.WSG = new EReg("[ \t\r\n]+","g");
thx_Strings.SPLIT_LINES = new EReg("\r\n|\n\r|\n|\r","g");
thx_Strings.CANONICALIZE_LINES = new EReg("\r\n|\n\r|\r","g");
thx_color__$CubeHelix_CubeHelix_$Impl_$.A = -0.14861;
thx_color__$CubeHelix_CubeHelix_$Impl_$.B = 1.78277;
thx_color__$CubeHelix_CubeHelix_$Impl_$.C = -0.29227;
thx_color__$CubeHelix_CubeHelix_$Impl_$.D = -0.90649;
thx_color__$CubeHelix_CubeHelix_$Impl_$.E = 1.97294;
thx_color__$CubeHelix_CubeHelix_$Impl_$.ED = -1.7884503806;
thx_color__$CubeHelix_CubeHelix_$Impl_$.EB = 3.5172982438;
thx_color__$CubeHelix_CubeHelix_$Impl_$.BC_DA = -0.655763666799999867;
thx_color__$Grey_Grey_$Impl_$.black = (function($this) {
	var $r;
	var this1 = 0;
	$r = this1;
	return $r;
}(this));
thx_color__$Grey_Grey_$Impl_$.white = (function($this) {
	var $r;
	var this1 = 1;
	$r = this1;
	return $r;
}(this));
thx_color__$Xyz_Xyz_$Impl_$.whiteReference = (function($this) {
	var $r;
	var this1 = [0.95047,1,1.08883];
	$r = this1;
	return $r;
}(this));
thx_color__$Xyz_Xyz_$Impl_$.epsilon = 0.0088564516790356311;
thx_color__$Xyz_Xyz_$Impl_$.kappa = 903.296296296296305;
thx_color_parse_ColorParser.parser = new thx_color_parse_ColorParser();
thx_color_parse_ColorParser.isPureHex = new EReg("^([0-9a-f]{2}){3,4}$","i");
thx_csv_Csv.encodeOptions = { delimiter : ",", quote : "\"", escapedQuote : "\"\"", newline : "\n"};
thx_csv_Csv.decodeOptions = { delimiter : ",", quote : "\"", escapedQuote : "\"\"", trimValues : false, trimEmptyLines : true};
thx_fp__$Map_Map_$Impl_$.delta = 5;
thx_fp__$Map_Map_$Impl_$.ratio = 2;
tjson_TJSON.OBJECT_REFERENCE_PREFIX = "@~obRef#";
kbe_EditorApp.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=Main.js.map